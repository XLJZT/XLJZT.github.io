<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Mongodb 的安装</title>
      <link href="/2023/03/12/016_Mongodb_Install/"/>
      <url>/2023/03/12/016_Mongodb_Install/</url>
      
        <content type="html"><![CDATA[<h1 id="Mongodb-的安装"><a href="#Mongodb-的安装" class="headerlink" title="Mongodb 的安装"></a>Mongodb 的安装</h1><p>系统为<code>ubuntu22.04</code></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>官网上的教程为<a href="https://mongodb.net.cn/manual/tutorial/install-mongodb-on-ubuntu/%EF%BC%8C%E4%BD%86%E6%98%AF%E8%BF%99%E4%B8%AA%E6%95%99%E7%A8%8B%E5%A5%BD%E5%83%8F%E5%BE%88%E8%80%81%E7%9A%84%E6%A0%B7%E5%AD%90%EF%BC%8C%E7%BB%99%E7%9A%84%E5%AE%89%E8%A3%85%E4%BB%A3%E7%A0%81%E7%9A%84%E4%B8%80%E4%BA%9B%E6%95%B0%E5%80%BC%E4%B9%9F%E9%9C%80%E8%A6%81%E4%BF%AE%E6%94%B9%E6%89%8D%E8%83%BD%E5%A4%9F%E6%AD%A3%E5%B8%B8%E7%9A%84%E5%AE%89%E8%A3%85%E5%9C%A8%E8%87%AA%E5%B7%B1%E7%9A%84Ubuntu%E7%B3%BB%E7%BB%9F%E4%B8%AD%E3%80%82">https://mongodb.net.cn/manual/tutorial/install-mongodb-on-ubuntu/，但是这个教程好像很老的样子，给的安装代码的一些数值也需要修改才能够正常的安装在自己的Ubuntu系统中。</a></p><p>在安装的过程中遇到报错，最终找到这个网站解决问题，直接使用一下代码即可安装<code>mongodb</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc |  gpg --dearmor | sudo tee /usr/share/keyrings/mongodb.gpg &gt; /dev/null</span><br><span class="line">echo &quot;deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse&quot; | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install mongodb-org</span><br></pre></td></tr></table></figure><blockquote><p>报错内容</p><p>The following packages have unmet dependencies: mongodb-org-mongos : Depends: libssl1.1 (&gt;= 1.1.1) but it is not installable mongodb-org-server : Depends: libssl1.1 (&gt;= 1.1.1) but it is not installable mongodb-org-shell : Depends: libssl1.1 (&gt;= 1.1.1) but it is not installable</p></blockquote><h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><p>您可以<code>mongodb</code>通过发出以下命令来启动该过程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start mongod</span><br></pre></td></tr></table></figure><p>如果在启动时收到类似于以下内容的错误 <code>mongodb</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Failed to start mongod.service: Unit mongod.service not found.</span><br></pre></td></tr></table></figure><p>首先运行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br></pre></td></tr></table></figure><p>然后再次运行上面的启动命令。</p><h4 id="验证MongoDB已成功启动。"><a href="#验证MongoDB已成功启动。" class="headerlink" title="验证MongoDB已成功启动。"></a>验证MongoDB已成功启动。</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status mongod</span><br></pre></td></tr></table></figure><p>您可以有选择地通过发出以下命令来确保MongoDB将在系统重启后启动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable mongod</span><br></pre></td></tr></table></figure><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2023/03/12_10_20_41_image-20221125151939853.png" alt="image-20221125151939853"></p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>命令行输入<code>mongo</code>是无效的，会告诉说没有安装这个包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongosh //进入shell界面</span><br></pre></td></tr></table></figure><h1 id="配置文件的使用"><a href="#配置文件的使用" class="headerlink" title="配置文件的使用"></a>配置文件的使用</h1><p>scala语言的版本为<code>2.12</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Recommend<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>MysqlConnect<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>MysqlConnect<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.apache.org<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Spark的依赖引入 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.spark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spark-core_2.12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.spark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spark-sql_2.12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 引入Scala --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.scala-lang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>scala-library<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--用来驱动新版mongoDB--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mongodb/mongo-java-driver --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mongodb<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mongo-java-driver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.12.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 加入MongoDB的驱动 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mongodb<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>casbah-core_2.12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mongodb.spark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mongo-spark-connector_2.12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Ubuntu </category>
          
          <category> Hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mongodb </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode 位运算</title>
      <link href="/2023/03/08/015_LeetCode_Bitwiseoperators/"/>
      <url>/2023/03/08/015_LeetCode_Bitwiseoperators/</url>
      
        <content type="html"><![CDATA[<h1 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h1><p>位运算符是一种用于操作二进制数的运算符，它们对二进制数的每一位进行操作。以下是常见的位运算符：</p><ol><li>按位与（&amp;）：将两个数的每一位进行与运算，如果两个位都为1，则结果为1，否则为0。</li><li>按位或（|）：将两个数的每一位进行或运算，如果两个位都为0，则结果为0，否则为1。</li><li>按位异或（^）：将两个数的每一位进行异或运算，如果两个位相同，则结果为0，否则为1。</li><li>按位取反（~）：将一个数的每一位取反，即0变为1，1变为0。</li><li>左移（&lt;&lt;）：将一个数的二进制位向左移动指定的位数，右边补0。</li><li>右移（&gt;&gt;）：将一个数的二进制位向右移动指定的位数，左边补0或者补符号位。</li></ol><p>位运算符常用于系统编程、嵌入式系统等领域，可以用来进行位操作，如数据压缩、加密解密、图像处理等。</p><h1 id="只出现一次的数字"><a href="#只出现一次的数字" class="headerlink" title="只出现一次的数字"></a>只出现一次的数字</h1><blockquote><p><a href="https://leetcode.cn/problems/single-number/">https://leetcode.cn/problems/single-number/</a></p></blockquote><p>给你一个 <strong>非空</strong> 整数数组 <code>nums</code> ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。</p><p>你必须设计并实现线性时间复杂度的算法来解决此问题，且该算法只使用常量额外空间。</p><p><strong>示例 1 ：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [2,2,1]</span><br><span class="line">输出：1</span><br></pre></td></tr></table></figure><p><strong>示例 2 ：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [4,1,2,1,2]</span><br><span class="line">输出：4</span><br></pre></td></tr></table></figure><p><strong>示例 3 ：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1]</span><br><span class="line">输出：1</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 3 * 104</code></li><li><code>-3 * 104 &lt;= nums[i] &lt;= 3 * 104</code></li><li>除了某个元素只出现一次以外，其余每个元素均出现两次。</li></ul><p><strong>解题：位运算</strong></p><p>仔细阅读题目可知，在数组中仅有一个元素且仅出现一次，其余元素均为两次。由此我们可以想到异或运算</p><ul><li>任何数和 000 做异或运算，结果仍然是原来的数，即 a⊕0=a</li><li>任何数和其自身做异或运算，结果是 000，即 a⊕a=0</li><li>异或运算满足交换律和结合律，即 a⊕b⊕a=b⊕a⊕a=b⊕(a⊕a)=b⊕0=b</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">singleNumber</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> e : nums)&#123;</span><br><span class="line">            res ^= e;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="比特位计数"><a href="#比特位计数" class="headerlink" title="比特位计数"></a>比特位计数</h1><blockquote><p><a href="https://leetcode.cn/problems/counting-bits/description/">https://leetcode.cn/problems/counting-bits/description/</a></p></blockquote><p>给你一个整数 <code>n</code> ，对于 <code>0 &lt;= i &lt;= n</code> 中的每个 <code>i</code> ，计算其二进制表示中 <strong><code>1</code> 的个数</strong> ，返回一个长度为 <code>n + 1</code> 的数组 <code>ans</code> 作为答案。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 2</span><br><span class="line">输出：[0,1,1]</span><br><span class="line">解释：</span><br><span class="line">0 --&gt; 0</span><br><span class="line">1 --&gt; 1</span><br><span class="line">2 --&gt; 10</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 5</span><br><span class="line">输出：[0,1,1,2,1,2]</span><br><span class="line">解释：</span><br><span class="line">0 --&gt; 0</span><br><span class="line">1 --&gt; 1</span><br><span class="line">2 --&gt; 10</span><br><span class="line">3 --&gt; 11</span><br><span class="line">4 --&gt; 100</span><br><span class="line">5 --&gt; 101</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>0 &lt;= n &lt;= 10^5</code></li></ul><p><strong>解题：位运算</strong></p><p>利用 Brian Kernighan 算法，可以在一定程度上进一步提升计算速度。Brian Kernighan 算法的原理是：对于任意整数 x，令 x=x &amp; (x−1)，该运算将 x 的二进制表示的最后一个 1 变成 0。因此，对 x 重复该操作，直到 x 变成 0，则操作次数即为 x 的「一比特数」。</p><p>使用类似递归的思想对此算法进行一个改进，通过保存 x 之前的值并且加一为当前 x 二进制表示下 1 的个数</p><blockquote><p>8     -&gt; 1000</p><p>7     -&gt; 0111</p><p>8&amp;7-&gt; 0000 = 0</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">countBits</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">bits</span><span class="params">(n+<span class="number">1</span>)</span></span>;</span><br><span class="line">        bits[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            bits[i] = bits[i&amp;(i<span class="number">-1</span>)]+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> bits;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="汉明距离"><a href="#汉明距离" class="headerlink" title="汉明距离"></a>汉明距离</h1><blockquote><p><a href="https://leetcode.cn/problems/hamming-distance/description/">https://leetcode.cn/problems/hamming-distance/description/</a></p></blockquote><p>两个整数之间的 <a href="https://baike.baidu.com/item/%E6%B1%89%E6%98%8E%E8%B7%9D%E7%A6%BB">汉明距离</a> 指的是这两个数字对应二进制位不同的位置的数目。</p><p>给你两个整数 <code>x</code> 和 <code>y</code>，计算并返回它们之间的汉明距离。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">输入：x = 1, y = 4</span><br><span class="line">输出：2</span><br><span class="line">解释：</span><br><span class="line">1   (0 0 0 1)</span><br><span class="line">4   (0 1 0 0)</span><br><span class="line">       ↑   ↑</span><br><span class="line">上面的箭头指出了对应二进制位不同的位置。</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：x = 3, y = 1</span><br><span class="line">输出：1</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>0 &lt;= x, y &lt;= 231 - 1</code></li></ul><p><strong>解题：位运算 +  计数</strong></p><p>汉明距离统计的为两个数字之间不同位置的数目，通过异或运算，相同的为 0，不同的为 1，然后统计 1 的个数即为两个数字之间不同位置的数目。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">hammingDistance</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> z = x^y;</span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(z &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            z &amp;= z<span class="number">-1</span>;</span><br><span class="line">            res++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Leetcode </tag>
            
            <tag> 算法 </tag>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode 链表</title>
      <link href="/2023/02/24/014_LeetCode_ListNode/"/>
      <url>/2023/02/24/014_LeetCode_ListNode/</url>
      
        <content type="html"><![CDATA[<h1 id="合并两个有序链表"><a href="#合并两个有序链表" class="headerlink" title="合并两个有序链表"></a>合并两个有序链表</h1><blockquote><p><a href="https://leetcode.cn/problems/merge-two-sorted-lists/description/">https://leetcode.cn/problems/merge-two-sorted-lists/description/</a></p></blockquote><p><strong>示例 1：</strong></p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2023/02/24_10_58_22_image-20230224105818700.png" alt="image-20230224105818700"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [1,2,4], l2 = [1,3,4]</span><br><span class="line">输出：[1,1,2,3,4,4]</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [], l2 = []</span><br><span class="line">输出：[]</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [], l2 = [0]</span><br><span class="line">输出：[0]</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li>两个链表的节点数目范围是 <code>[0, 50]</code></li><li><code>-100 &lt;= Node.val &lt;= 100</code></li><li><code>l1</code> 和 <code>l2</code> 均按 <strong>非递减顺序</strong> 排列</li></ul><p><strong>解法一：双指针 + 循环</strong></p><p>创建一个新的链表<code>prehead</code>，使用三个指针分别指在<code>prehead list1 list2</code>三个链表的头部，通过循环比较将较小值的连在链表<code>prehead</code>的后面。循环遍历之后，当有一个链表已经指向空时，将不为空的链表直接连在链表<code>prehead</code>之后。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode() : val(0), next(nullptr) &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(nullptr) &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x, ListNode *next) : val(x), next(next) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">mergeTwoLists</span><span class="params">(ListNode* list1, ListNode* list2)</span> </span>&#123;</span><br><span class="line">        ListNode* prehead = <span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">-1</span>);</span><br><span class="line">        ListNode* prev = prehead;</span><br><span class="line">        <span class="keyword">while</span>(list1 != <span class="literal">nullptr</span> &amp;&amp; list2 != <span class="literal">nullptr</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(list1-&gt;val &lt;list2-&gt;val)&#123;</span><br><span class="line">                prev-&gt;next = list1;</span><br><span class="line">                list1= list1-&gt;next;</span><br><span class="line">                </span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                prev-&gt;next = list2;</span><br><span class="line">                list2 = list2-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">            prev= prev-&gt;next;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        prev-&gt;next = list1 == <span class="literal">nullptr</span> ?list2:list1;</span><br><span class="line">        <span class="keyword">return</span> prehead-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>解法2：递归</strong></p><p>首先需要考虑的时<code>list1 list2</code>是否为空链表作为边界条件，如果都不为空，进行判断<code>list1 list2</code>的值的大小进行接下来递归的大小链表的判定。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">mergeTwoLists</span><span class="params">(ListNode* list1, ListNode* list2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (list1 == <span class="literal">nullptr</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> list2;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (list2 == <span class="literal">nullptr</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> list1;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (list1-&gt;val &lt; list2-&gt;val) &#123;</span><br><span class="line">            list1-&gt;next = <span class="built_in">mergeTwoLists</span>(list1-&gt;next, list2);</span><br><span class="line">            <span class="keyword">return</span> list1;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            list2-&gt;next = <span class="built_in">mergeTwoLists</span>(list1, list2-&gt;next);</span><br><span class="line">            <span class="keyword">return</span> list2;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="删除排序链表中的重复元素"><a href="#删除排序链表中的重复元素" class="headerlink" title="删除排序链表中的重复元素"></a>删除排序链表中的重复元素</h1><blockquote><p><a href="https://leetcode.cn/problems/remove-duplicates-from-sorted-list/description/">https://leetcode.cn/problems/remove-duplicates-from-sorted-list/description/</a></p></blockquote><p>给定一个已排序的链表的头 <code>head</code> ， <em>删除所有重复的元素，使每个元素只出现一次</em> 。返回 <em>已排序的链表</em> 。</p><p><strong>示例 1：</strong></p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2023/02/24_11_23_44_image-20230224112342204.png" alt="image-20230224112342204"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,1,2]</span><br><span class="line">输出：[1,2]</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2023/02/24_11_23_57_image-20230224112354722.png" alt="image-20230224112354722"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,1,2,3,3]</span><br><span class="line">输出：[1,2,3]</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li>链表中节点数目在范围 <code>[0, 300]</code> 内</li><li><code>-100 &lt;= Node.val &lt;= 100</code></li><li>题目数据保证链表已经按升序 <strong>排列</strong></li></ul><p><strong>解法：一次遍历</strong></p><p>根据提示里可知，链表顺序时排列好的，重复数据的位置是连续的。所以只需要判断前一个和后一个位置的值是否相同。如果相同则将前一个位置的指针指向后一个指针所指的位置。</p><blockquote><p>两个指针版本</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">deleteDuplicates</span><span class="params">(ListNode* head)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(head == <span class="literal">nullptr</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        &#125;</span><br><span class="line">        ListNode* pre = head;</span><br><span class="line">        ListNode* back = head-&gt;next;</span><br><span class="line">        <span class="keyword">while</span>(back != <span class="literal">nullptr</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(pre-&gt;val == back-&gt;val)&#123;</span><br><span class="line">                back = back-&gt;next;</span><br><span class="line">                pre-&gt;next = back ;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                pre = pre-&gt;next;</span><br><span class="line">                back = back-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>一个指针版本</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">deleteDuplicates</span><span class="params">(ListNode* head)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!head) &#123;</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ListNode* pre = head;</span><br><span class="line">        <span class="keyword">while</span> (pre-&gt;next) &#123;</span><br><span class="line">            <span class="keyword">if</span> (pre-&gt;val == pre-&gt;next-&gt;val) &#123;</span><br><span class="line">                pre-&gt;next = pre-&gt;next-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                pre = pre-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="环形链表"><a href="#环形链表" class="headerlink" title="环形链表"></a>环形链表</h1><blockquote><p><a href="https://leetcode.cn/problems/linked-list-cycle/description/">https://leetcode.cn/problems/linked-list-cycle/description/</a></p></blockquote><p>给你一个链表的头节点 <code>head</code> ，判断链表中是否有环。</p><p>如果链表中有某个节点，可以通过连续跟踪 <code>next</code> 指针再次到达，则链表中存在环。 为了表示给定链表中的环，评测系统内部使用整数 <code>pos</code> 来表示链表尾连接到链表中的位置（索引从 0 开始）。<strong>注意：<code>pos</code> 不作为参数进行传递</strong> 。仅仅是为了标识链表的实际情况。</p><p><em>如果链表中存在环</em> ，则返回 <code>true</code> 。 否则，返回 <code>false</code> 。</p><p><strong>示例 1：</strong></p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2023/02/25_11_5_9_image-20230225110507408.png" alt="image-20230225110507408"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [3,2,0,-4], pos = 1</span><br><span class="line">输出：true</span><br><span class="line">解释：链表中有一个环，其尾部连接到第二个节点。</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2023/02/25_11_5_20_image-20230225110518032.png" alt="image-20230225110518032"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2], pos = 0</span><br><span class="line">输出：true</span><br><span class="line">解释：链表中有一个环，其尾部连接到第一个节点。</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2023/02/25_11_5_29_image-20230225110527687.png" alt="image-20230225110527687"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1], pos = -1</span><br><span class="line">输出：false</span><br><span class="line">解释：链表中没有环。</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li>链表中节点的数目范围是 <code>[0, 104]</code></li><li><code>-105 &lt;= Node.val &lt;= 105</code></li><li><code>pos</code> 为 <code>-1</code> 或者链表中的一个 <strong>有效索引</strong> 。</li></ul><p><strong>解法：双指针</strong></p><blockquote><p>贴一个总结数组和链表许多经典问题的题解解析</p><p><a href="https://leetcode.cn/problems/linked-list-cycle/solutions/175734/yi-wen-gao-ding-chang-jian-de-lian-biao-wen-ti-h-2/">https://leetcode.cn/problems/linked-list-cycle/solutions/175734/yi-wen-gao-ding-chang-jian-de-lian-biao-wen-ti-h-2/</a></p></blockquote><p>针对本题，我们采用快慢两种指针的方式去查询链表是否有环，快指针一次走两步，慢指针一次走一步。如果有环的情况下，快指针总是会追得上慢指针，当快指针和慢指针指向同一个位置时，说明链表有环。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">hasCycle</span><span class="params">(ListNode *head)</span> </span>&#123;</span><br><span class="line">        ListNode *slow = head;</span><br><span class="line">        ListNode *fast = head;</span><br><span class="line">        <span class="keyword">while</span>(fast != <span class="literal">nullptr</span>) &#123;</span><br><span class="line">            fast = fast-&gt;next;</span><br><span class="line">            <span class="keyword">if</span>(fast != <span class="literal">nullptr</span>) &#123;</span><br><span class="line">                fast = fast-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(fast == slow) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            slow = slow-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="环形链表-II"><a href="#环形链表-II" class="headerlink" title="环形链表 II"></a>环形链表 II</h1><blockquote><p><a href="https://leetcode.cn/problems/linked-list-cycle-ii/description/">https://leetcode.cn/problems/linked-list-cycle-ii/description/</a></p></blockquote><p>给定一个链表的头节点  <code>head</code> ，返回链表开始入环的第一个节点。 <em>如果链表无环，则返回 <code>null</code>。</em></p><p>如果链表中有某个节点，可以通过连续跟踪 <code>next</code> 指针再次到达，则链表中存在环。 为了表示给定链表中的环，评测系统内部使用整数 <code>pos</code> 来表示链表尾连接到链表中的位置（<strong>索引从 0 开始</strong>）。如果 <code>pos</code> 是 <code>-1</code>，则在该链表中没有环。<strong>注意：<code>pos</code> 不作为参数进行传递</strong>，仅仅是为了标识链表的实际情况。</p><p><strong>不允许修改</strong> 链表。</p><p><strong>示例 1：</strong></p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2023/02/26_10_43_42_image-20230226104339393.png" alt="image-20230226104339393"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [3,2,0,-4], pos = 1</span><br><span class="line">输出：返回索引为 1 的链表节点</span><br><span class="line">解释：链表中有一个环，其尾部连接到第二个节点。</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2023/02/26_10_43_59_image-20230226104357772.png" alt="image-20230226104357772"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2], pos = 0</span><br><span class="line">输出：返回索引为 0 的链表节点</span><br><span class="line">解释：链表中有一个环，其尾部连接到第一个节点。</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2023/02/26_10_44_15_image-20230226104413534.png" alt="image-20230226104413534"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1], pos = -1</span><br><span class="line">输出：返回 null</span><br><span class="line">解释：链表中没有环。</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li>链表中节点的数目范围在范围 <code>[0, 104]</code> 内</li><li><code>-105 &lt;= Node.val &lt;= 105</code></li><li><code>pos</code> 的值为 <code>-1</code> 或者链表中的一个有效索引</li></ul><p><strong>解法一：双指针</strong></p><blockquote><p>一个带有图的讲解链接：<a href="https://leetcode.cn/problems/linked-list-cycle-ii/solutions/12616/linked-list-cycle-ii-kuai-man-zhi-zhen-shuang-zhi-/">https://leetcode.cn/problems/linked-list-cycle-ii/solutions/12616/linked-list-cycle-ii-kuai-man-zhi-zhen-shuang-zhi-/</a></p></blockquote><p>通过环形链表一，使用双指针可以判断出是否存在环，并且条件成立时快慢指针指在相同的位置。</p><ol><li>设链表共有 <code>a+b</code> 个节点，从链表头部到环入口为 <code>a</code> 个节点，链表环有 <code>b</code> 个节点。</li><li>分别设快慢指针走了<code>f</code> 和 <code>s</code> 步，可得 <code>f = 2s</code> 。</li><li><code>f</code> 指针比 <code>s</code> 指针多走了 <code>n</code> 个环的长度，得 <code>f = s + nb</code></li><li>由第二步以及第三步可得，<code>f = 2nb , s = nb</code>。</li><li>如果让一个指针从链表头部一直走，走到链表环入口处，需要的步数 <code>k</code>  为 <code>k = a + nb</code> 。</li><li>由第四步可知，当快慢指针相遇时，<code>s</code> 已经走了 <code>nb</code> 步，只需要再走 <code>a</code> 步便可以到达环入口。此时让快指针从链表头部开始走，当它第一次走到环入口时所需要的步数也为 <code>a</code> 步，此时两个指针指向同一个位置，便是环入口。</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode *<span class="title">detectCycle</span><span class="params">(ListNode *head)</span> </span>&#123;</span><br><span class="line">        ListNode *slow = head, *fast = head;</span><br><span class="line">        <span class="keyword">while</span> (fast != <span class="literal">nullptr</span>) &#123;</span><br><span class="line">            slow = slow-&gt;next;</span><br><span class="line">            <span class="keyword">if</span> (fast-&gt;next == <span class="literal">nullptr</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            fast = fast-&gt;next-&gt;next;</span><br><span class="line">            <span class="keyword">if</span> (fast == slow) &#123;</span><br><span class="line">                ListNode *ptr = head;</span><br><span class="line">                <span class="keyword">while</span> (ptr != slow) &#123;</span><br><span class="line">                    ptr = ptr-&gt;next;</span><br><span class="line">                    slow = slow-&gt;next;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> ptr;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>解法二：哈希表</strong></p><p>我们遍历链表中的每个节点，并将它记录下来；一旦遇到了此前遍历过的节点，就可以判定链表中存在环。借助哈希表可以很方便地实现。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode *<span class="title">detectCycle</span><span class="params">(ListNode *head)</span> </span>&#123;</span><br><span class="line">        unordered_set&lt;ListNode *&gt; visited;</span><br><span class="line">        <span class="keyword">while</span> (head != <span class="literal">nullptr</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (visited.<span class="built_in">count</span>(head)) &#123;</span><br><span class="line">                <span class="keyword">return</span> head;</span><br><span class="line">            &#125;</span><br><span class="line">            visited.<span class="built_in">insert</span>(head);</span><br><span class="line">            head = head-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="相交链表"><a href="#相交链表" class="headerlink" title="相交链表"></a>相交链表</h1><blockquote><p><a href="https://leetcode.cn/problems/intersection-of-two-linked-lists/description/">https://leetcode.cn/problems/intersection-of-two-linked-lists/description/</a></p></blockquote><p>给你两个单链表的头节点 <code>headA</code> 和 <code>headB</code> ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 <code>null</code> 。</p><p>图示两个链表在节点 <code>c1</code> 开始相交<strong>：</strong></p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2023/02/26_11_39_28_image-20230226113925362.png" alt="image-20230226113925362"></p><p>题目数据 <strong>保证</strong> 整个链式结构中不存在环。</p><p><strong>注意</strong>，函数返回结果后，链表必须 <strong>保持其原始结构</strong> 。</p><p><strong>自定义评测：</strong></p><p><strong>评测系统</strong> 的输入如下（你设计的程序 <strong>不适用</strong> 此输入）：</p><ul><li><code>intersectVal</code> - 相交的起始节点的值。如果不存在相交节点，这一值为 <code>0</code></li><li><code>listA</code> - 第一个链表</li><li><code>listB</code> - 第二个链表</li><li><code>skipA</code> - 在 <code>listA</code> 中（从头节点开始）跳到交叉节点的节点数</li><li><code>skipB</code> - 在 <code>listB</code> 中（从头节点开始）跳到交叉节点的节点数</li></ul><p>评测系统将根据这些输入创建链式数据结构，并将两个头节点 <code>headA</code> 和 <code>headB</code> 传递给你的程序。如果程序能够正确返回相交节点，那么你的解决方案将被 <strong>视作正确答案</strong> 。</p><p><strong>示例 1：</strong></p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2023/02/26_11_39_50_image-20230226113948185.png" alt="image-20230226113948185"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入：intersectVal = 8, listA = [4,1,8,4,5], listB = [5,6,1,8,4,5], skipA = 2, skipB = 3</span><br><span class="line">输出：Intersected at &#x27;8&#x27;</span><br><span class="line">解释：相交节点的值为 8 （注意，如果两个链表相交则不能为 0）。</span><br><span class="line">从各自的表头开始算起，链表 A 为 [4,1,8,4,5]，链表 B 为 [5,6,1,8,4,5]。</span><br><span class="line">在 A 中，相交节点前有 2 个节点；在 B 中，相交节点前有 3 个节点。</span><br><span class="line">— 请注意相交节点的值不为 1，因为在链表 A 和链表 B 之中值为 1 的节点 (A 中第二个节点和 B 中第三个节点) 是不同的节点。换句话说，它们在内存中指向两个不同的位置，而链表 A 和链表 B 中值为 8 的节点 (A 中第三个节点，B 中第四个节点) 在内存中指向相同的位置。</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2023/02/26_11_40_2_image-20230226114000910.png" alt="image-20230226114000910"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入：intersectVal = 2, listA = [1,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1</span><br><span class="line">输出：Intersected at &#x27;2&#x27;</span><br><span class="line">解释：相交节点的值为 2 （注意，如果两个链表相交则不能为 0）。</span><br><span class="line">从各自的表头开始算起，链表 A 为 [1,9,1,2,4]，链表 B 为 [3,2,4]。</span><br><span class="line">在 A 中，相交节点前有 3 个节点；在 B 中，相交节点前有 1 个节点。</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2023/02/26_11_40_12_image-20230226114010933.png" alt="image-20230226114010933"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入：intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2</span><br><span class="line">输出：null</span><br><span class="line">解释：从各自的表头开始算起，链表 A 为 [2,6,4]，链表 B 为 [1,5]。</span><br><span class="line">由于这两个链表不相交，所以 intersectVal 必须为 0，而 skipA 和 skipB 可以是任意值。</span><br><span class="line">这两个链表不相交，因此返回 null 。</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>listA</code> 中节点数目为 <code>m</code></li><li><code>listB</code> 中节点数目为 <code>n</code></li><li><code>1 &lt;= m, n &lt;= 3 * 104</code></li><li><code>1 &lt;= Node.val &lt;= 105</code></li><li><code>0 &lt;= skipA &lt;= m</code></li><li><code>0 &lt;= skipB &lt;= n</code></li><li>如果 <code>listA</code> 和 <code>listB</code> 没有交点，<code>intersectVal</code> 为 <code>0</code></li><li>如果 <code>listA</code> 和 <code>listB</code> 有交点，<code>intersectVal == listA[skipA] == listB[skipB]</code></li></ul><p><strong>解法：双指针</strong></p><p>让两个链表从同距离末尾同等距离的位置开始遍历。这个位置只能是较短链表的头结点位置。 为此，我们必须消除两个链表的长度差</p><p>指针 pA 指向 A 链表，指针 pB 指向 B 链表，依次往后遍历<br>如果 pA 到了末尾，则 pA = headB 继续遍历<br>如果 pB 到了末尾，则 pB = headA 继续遍历<br>比较长的链表指针指向较短链表head时，长度差就消除了<br>如此，只需要将最短链表遍历两次即可找到位置</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode *<span class="title">getIntersectionNode</span><span class="params">(ListNode *headA, ListNode *headB)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(headA == <span class="literal">nullptr</span> || headB == <span class="literal">nullptr</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ListNode* pa = headA;</span><br><span class="line">        ListNode* pb = headB;</span><br><span class="line">        <span class="comment">//当pa pb 同时指向null时 说明同时指到链表末尾，没有相交</span></span><br><span class="line">        <span class="keyword">while</span>(pa != pb)&#123;</span><br><span class="line">            pa = pa == <span class="literal">nullptr</span> ? headB : pa-&gt;next;</span><br><span class="line">            pb = pb == <span class="literal">nullptr</span> ? headA : pb-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> pa;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="回文链表"><a href="#回文链表" class="headerlink" title="回文链表"></a>回文链表</h1><blockquote><p><a href="https://leetcode.cn/problems/palindrome-linked-list/description/">https://leetcode.cn/problems/palindrome-linked-list/description/</a></p></blockquote><p>给你一个单链表的头节点 <code>head</code> ，请你判断该链表是否为回文链表。如果是，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p><p><strong>示例 1：</strong></p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2023/02/27_10_28_17_image-20230227102811872.png" alt="image-20230227102811872"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2,2,1]</span><br><span class="line">输出：true</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2023/02/27_10_28_27_image-20230227102825720.png" alt="image-20230227102825720"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2]</span><br><span class="line">输出：false</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li>链表中节点数目在范围<code>[1, 105]</code> 内</li><li><code>0 &lt;= Node.val &lt;= 9</code></li></ul><p><strong>进阶：</strong>你能否用 <code>O(n)</code> 时间复杂度和 <code>O(1)</code> 空间复杂度解决此题？</p><p><strong>解法：快慢指针 + 反转链表</strong></p><p>通过快慢指针我们可以找到链表的（slow）中间位置和（fast）最后位置。如果链表长度为偶数的话，<code>fast</code> 指针指向 <code>nullptr</code>，<code>slow</code> 指针指向中间位置；如果链表长度为奇数的话，<code>fast</code> 指针指向链表最后一位，<code>slow</code> 指针指向中心位置。以 <code>slow</code> 指针为界，拆分为两部分，奇数链表的后一部分会比前一部分多一位。反转 <code>slow</code> 指针指向的后一部分链表，将其与原链表比较，可得是否为回文链表。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode() : val(0), next(nullptr) &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(nullptr) &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x, ListNode *next) : val(x), next(next) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isPalindrome</span><span class="params">(ListNode* head)</span> </span>&#123;</span><br><span class="line">        ListNode* fast = head, *slow = head;</span><br><span class="line">        <span class="keyword">while</span>(fast != <span class="literal">nullptr</span> &amp;&amp; fast-&gt;next !=<span class="literal">nullptr</span>)&#123;</span><br><span class="line">            fast = fast-&gt;next-&gt;next;</span><br><span class="line">            slow = slow-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        fast = head;</span><br><span class="line">        slow = <span class="built_in">reverse</span>(slow);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(slow != <span class="literal">nullptr</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(slow-&gt;val != fast-&gt;val)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            slow = slow-&gt;next;</span><br><span class="line">            fast = fast-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function">ListNode* <span class="title">reverse</span><span class="params">(ListNode* head)</span></span>&#123;</span><br><span class="line">        ListNode* prev = head;</span><br><span class="line">        ListNode* end = <span class="literal">nullptr</span>;</span><br><span class="line">        <span class="keyword">while</span>(prev)&#123;</span><br><span class="line">            prev = head-&gt;next;</span><br><span class="line">            head-&gt;next = end;</span><br><span class="line">            end = head;</span><br><span class="line">            head = prev;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> end;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="链表中倒数第k个节点"><a href="#链表中倒数第k个节点" class="headerlink" title="链表中倒数第k个节点"></a>链表中倒数第k个节点</h1><p>输入一个链表，输出该链表中倒数第k个节点。为了符合大多数人的习惯，本题从1开始计数，即链表的尾节点是倒数第1个节点。</p><p>例如，一个链表有 <code>6</code> 个节点，从头节点开始，它们的值依次是 <code>1、2、3、4、5、6</code>。这个链表的倒数第 <code>3</code> 个节点是值为 <code>4</code> 的节点。</p><p><strong>示例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">给定一个链表: 1-&gt;2-&gt;3-&gt;4-&gt;5, 和 k = 2.</span><br><span class="line"></span><br><span class="line">返回链表 4-&gt;5.</span><br></pre></td></tr></table></figure><p><strong>解法：快慢指针</strong></p><p>让快指针先移动 <code>k</code> 步，然后同时移动快慢指针，每次一步，当快指针为 <code>nullptr</code> 时，说明到达了链表最后，此时 <code>slow</code> 的位置便是链表倒数第 <code>k</code> 个位置。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">getKthFromEnd</span><span class="params">(ListNode* head, <span class="type">int</span> k)</span> </span>&#123;</span><br><span class="line">        ListNode* fast = head, *slow = head;</span><br><span class="line">        <span class="keyword">while</span>(k&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            k--;</span><br><span class="line">            fast = fast-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(fast != <span class="literal">nullptr</span>)&#123;</span><br><span class="line">            slow = slow-&gt;next;</span><br><span class="line">            fast = fast-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> slow;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Leetcode </tag>
            
            <tag> 算法 </tag>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Conda &amp; Pytorch安装</title>
      <link href="/2022/11/21/013_Conda&amp;Pytorch/"/>
      <url>/2022/11/21/013_Conda&amp;Pytorch/</url>
      
        <content type="html"><![CDATA[<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p><strong>官网</strong> <strong><a href="https://www.anaconda.com/products/distribution">https://www.anaconda.com/products/distribution</a></strong></p><p><strong>清华镜像</strong> <strong><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/</a></strong></p><p>下载安装包进行默认安装</p><h1 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h1><p>各系统都可以通过修改<strong>用户目录</strong>下的 <code>.condarc</code> 文件来使用 TUNA 镜像源。Windows 用户无法直接创建名为 <code>.condarc</code> 的文件，可先执行 <code>conda config --set show_channel_urls yes</code> 生成该文件之后再修改。</p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2022/11/21_19_20_26_asynccode." alt="img"></p><p>修改源为清华源或阿里源都可以，注意修改源之后尽量避免更改源，以防带来问题</p><p><strong>清华源</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">channels:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">defaults</span></span><br><span class="line"><span class="attr">show_channel_urls:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">default_channels:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2</span></span><br><span class="line"><span class="attr">custom_channels:</span></span><br><span class="line">    <span class="attr">conda-forge:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class="line">    <span class="attr">msys2:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class="line">    <span class="attr">bioconda:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class="line">    <span class="attr">menpo:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class="line">    <span class="attr">pytorch:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class="line">    <span class="attr">pytorch-lts:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class="line">    <span class="attr">simpleitk:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br></pre></td></tr></table></figure><h1 id="创建新环境"><a href="#创建新环境" class="headerlink" title="创建新环境"></a>创建新环境</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//环境名 python版本</span><br><span class="line">conda create -n [env_name] python=[3.8]</span><br><span class="line">//安装成功后</span><br><span class="line">conda activate [env_name]</span><br><span class="line">//退出环境</span><br><span class="line">conda deactivate</span><br></pre></td></tr></table></figure><h1 id="安装-Pytorch"><a href="#安装-Pytorch" class="headerlink" title="安装 Pytorch"></a>安装 Pytorch</h1><p>Pytorch 官网 <a href="https://pytorch.org/get-started/locally/">https://pytorch.org/get-started/locally/</a></p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2022/11/21_19_20_29_asynccode." alt="img"></p><p>根据自己的 <code>cuda</code> 版本选择合适下载，在cmd里输入 <code>nvidia-smi</code> 查看自己版本，下载使用 <code>pip</code> 下载，因为conda源下载实在是太慢了。</p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2022/11/21_19_20_31_asynccode." alt="img"></p><p>将pytorch下载好之后，如果需要使用 <code>jupyter notebook</code> 可以使用 <code>pip</code>  下载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install jupyter notebook</span><br></pre></td></tr></table></figure><h1 id="代码执行"><a href="#代码执行" class="headerlink" title="代码执行"></a>代码执行</h1><p>安装虚拟环境，无非就是希望使用干净的环境执行代码，如果使用编译工具 IDE 选择好了已经创建的编译环境，那么执行可以正常在虚拟环境里执行。</p><p>如果想要通过 <code>cmd</code> 命令行对代码文件进行执行，则执行一下步骤</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//进入虚拟环境</span><br><span class="line">conda activate [env_name]</span><br><span class="line">//打开执行的文件根目录</span><br><span class="line">cd [filePath]</span><br><span class="line">//python 执行文件</span><br><span class="line">python [test.py]</span><br><span class="line">//如果不加python，直接执行[.py]文件，就会使用电脑本身的环境（环境变量里的环境）</span><br></pre></td></tr></table></figure><p>到此就结束了！</p>]]></content>
      
      
      <categories>
          
          <category> Conda </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> Conda </tag>
            
            <tag> Pytorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2.5D摄像机移动放大缩小</title>
      <link href="/2022/11/14/011_CinemachineVir/"/>
      <url>/2022/11/14/011_CinemachineVir/</url>
      
        <content type="html"><![CDATA[<h1 id="2-5D摄像机移动放大缩小"><a href="#2-5D摄像机移动放大缩小" class="headerlink" title="2.5D摄像机移动放大缩小"></a>2.5D摄像机移动放大缩小</h1><blockquote><p>老规矩，上<a href="https://www.youtube.com/watch?v=pJQndtJ2rk0&t=563s">链接</a> ，视频在 youtube 上</p></blockquote><p>由于最近做的一个小游戏，是处在一个 2.5D 的一个视角下，为了完善游玩时的摄像机的可操作性，便添加了这个功能。</p><h2 id="必要组件"><a href="#必要组件" class="headerlink" title="必要组件"></a>必要组件</h2><ul><li>Cinemachine</li></ul><p>需要使用到 Cinemachine 的 VirtualCamera，通过对组件里的参数值进行调整，达到效果。</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>创建一个 VirtualCamera 摄像机</p><p>创建一个空物体，用于摄像机的 LookAt 和 Follow 绑定，绑定之后，摄像机视角便会一直跟随物体移动旋转，我们只需要通过对物体进行前后左右的移动和左右的旋转，便可以达到摄像机移动旋转的效果。</p><blockquote><p>我们创建的是一个空物体，所以在游戏场景里我们是不会看到这个空物体的存在，也不会出现其他的bug</p></blockquote><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2022/11/14_21_39_26_image-20221114213232738.png" alt="image-20221114213232738"></p><p>然后我们编写的代码放到我们的空物体上，便可以实现效果。</p><p>代码如下：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> Cinemachine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CameraController</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> CinemachineVirtualCamera cinemachineVir;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> moveSpeed = <span class="number">5f</span>;<span class="comment">//移动速度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> rotateSpeed = <span class="number">100f</span>;<span class="comment">//旋转速度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> EnableEdgeScroll = <span class="literal">false</span>;<span class="comment">//是否开启边缘移动</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> edgeScrollSize = <span class="number">20f</span>;<span class="comment">//屏幕最外侧移动范围</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> minFieldOfView = <span class="number">10f</span>;<span class="comment">//最小视野</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> maxFieldOfView = <span class="number">50f</span>;<span class="comment">//最大视野</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Input_sys inputsys;<span class="comment">//自动生成的输入脚本</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">bool</span> mouseClickLeft = <span class="literal">false</span>;<span class="comment">//鼠标左键点击</span></span><br><span class="line">    Vector2 move_vec2;<span class="comment">//移动方向</span></span><br><span class="line">    Vector2 mouse_pos;<span class="comment">//鼠标位置</span></span><br><span class="line">    <span class="built_in">float</span> rotateDir;<span class="comment">//旋转方向</span></span><br><span class="line">    Vector2 lastMousePos;<span class="comment">//上次鼠标位置，用于鼠标拖拽</span></span><br><span class="line">    <span class="built_in">float</span> targetFieldOfView = <span class="number">50f</span>;<span class="comment">//摄像机视野</span></span><br><span class="line">    Vector2 mouse_scroll;<span class="comment">//鼠标滚轮</span></span><br><span class="line">    Vector3 followOffset;<span class="comment">//摄像机的body follow offset</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        inputsys = <span class="keyword">new</span> Input_sys();</span><br><span class="line">        followOffset = cinemachineVir.GetCinemachineComponent&lt;CinemachineTransposer&gt;().m_FollowOffset;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Vector3 inputDir = <span class="keyword">new</span> Vector3(move_vec2.x, <span class="number">0</span>, move_vec2.y);</span><br><span class="line">        <span class="comment">//鼠标位置移动</span></span><br><span class="line">        inputDir = MouseEdgeMovePos(inputDir);</span><br><span class="line">        inputDir = MouseDragMove(inputDir);</span><br><span class="line">        <span class="comment">//矫正旋转摄像机后的输入移动</span></span><br><span class="line">        Vector3 moveDir = transform.forward * inputDir.z + transform.right * inputDir.x;</span><br><span class="line">        transform.position += Time.deltaTime * moveSpeed * moveDir;</span><br><span class="line">        <span class="comment">//QE用来旋转</span></span><br><span class="line">        transform.eulerAngles += <span class="keyword">new</span> Vector3(<span class="number">0</span>, rotateDir * rotateSpeed * Time.deltaTime, <span class="number">0</span>);</span><br><span class="line">        <span class="comment">//视野缩放</span></span><br><span class="line">        CameraZoom_FielfOfView();</span><br><span class="line">        <span class="comment">// CameraZoom_MoveForward();</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnEnable</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//必须开启之后 才能接收到输入的信息</span></span><br><span class="line">        inputsys.Keyboard.Enable();</span><br><span class="line">        inputsys.Keyboard.Move.performed += ctx =&gt; move_vec2 = ctx.ReadValue&lt;Vector2&gt;();</span><br><span class="line">        inputsys.Keyboard.Move.canceled += ctx =&gt; move_vec2 = ctx.ReadValue&lt;Vector2&gt;();</span><br><span class="line">        inputsys.Keyboard.Rotate.performed += ctx =&gt; rotateDir = ctx.ReadValue&lt;<span class="built_in">float</span>&gt;();</span><br><span class="line">        inputsys.Keyboard.Rotate.canceled += ctx =&gt; rotateDir = ctx.ReadValue&lt;<span class="built_in">float</span>&gt;();</span><br><span class="line"></span><br><span class="line">        inputsys.Mouse.Enable();</span><br><span class="line">        inputsys.Mouse.MousePos.performed += ctx =&gt; mouse_pos = ctx.ReadValue&lt;Vector2&gt;();</span><br><span class="line">        inputsys.Mouse.MouseClickLeft.performed += ctx =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            mouseClickLeft = !mouseClickLeft;</span><br><span class="line">            lastMousePos = mouse_pos;</span><br><span class="line">        &#125;;</span><br><span class="line">        inputsys.Mouse.MouseScroll.performed += ctx =&gt; mouse_scroll = ctx.ReadValue&lt;Vector2&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 屏幕边缘移动</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;inputDir&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Vector3 <span class="title">MouseEdgeMovePos</span>(<span class="params">Vector3 inputDir</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//如果关闭状态 直接返回原值</span></span><br><span class="line">        <span class="keyword">if</span> (!EnableEdgeScroll)</span><br><span class="line">            <span class="keyword">return</span> inputDir;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mouse_pos.x &lt; edgeScrollSize)</span><br><span class="line">        &#123;</span><br><span class="line">            inputDir.x += <span class="number">-1f</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (mouse_pos.x &gt; Screen.width - edgeScrollSize)</span><br><span class="line">        &#123;</span><br><span class="line">            inputDir.x += <span class="number">1f</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mouse_pos.y &lt; edgeScrollSize)</span><br><span class="line">        &#123;</span><br><span class="line">            inputDir.z += <span class="number">-1f</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (mouse_pos.y &gt; Screen.height - edgeScrollSize)</span><br><span class="line">        &#123;</span><br><span class="line">            inputDir.z += <span class="number">1f</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> inputDir;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 鼠标点击拖拽移动</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;inputDir&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Vector3 <span class="title">MouseDragMove</span>(<span class="params">Vector3 inputDir</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (mouseClickLeft)</span><br><span class="line">        &#123;</span><br><span class="line">            Vector2 mouseMoveDelta = (Vector2)mouse_pos - lastMousePos;</span><br><span class="line">            inputDir.x -= mouseMoveDelta.x;</span><br><span class="line">            inputDir.z -= mouseMoveDelta.y;</span><br><span class="line">            lastMousePos = mouse_pos;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> inputDir;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 摄像机的鼠标滚轮缩放,通过调节摄像机的fieldofview</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CameraZoom_FielfOfView</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (mouse_scroll.y &gt; <span class="number">0f</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            targetFieldOfView -= <span class="number">5f</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (mouse_scroll.y &lt; <span class="number">0f</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            targetFieldOfView += <span class="number">5f</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        targetFieldOfView = Mathf.Clamp(targetFieldOfView,minFieldOfView,maxFieldOfView);</span><br><span class="line">        cinemachineVir.m_Lens.FieldOfView = Mathf.Lerp(cinemachineVir.m_Lens.FieldOfView,targetFieldOfView,Time.deltaTime*<span class="number">5f</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CameraZoom_MoveForward</span>()</span>&#123;</span><br><span class="line">        <span class="comment">//归一化处理 保留向量方向</span></span><br><span class="line">        Vector3 zoomDir = followOffset.normalized;</span><br><span class="line">        <span class="keyword">if</span> (mouse_scroll.y &gt; <span class="number">0f</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            followOffset -= zoomDir;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (mouse_scroll.y &lt; <span class="number">0f</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            followOffset += zoomDir;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//followOffset 是vec3，所以用magnitude计算长度</span></span><br><span class="line">        <span class="keyword">if</span> (followOffset.magnitude &lt; minFieldOfView)&#123;</span><br><span class="line">            followOffset = zoomDir * minFieldOfView;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(followOffset.magnitude &gt; maxFieldOfView)&#123;</span><br><span class="line">            followOffset = zoomDir * maxFieldOfView;</span><br><span class="line">        &#125;</span><br><span class="line">        cinemachineVir.GetCinemachineComponent&lt;CinemachineTransposer&gt;().m_FollowOffset = Vector3.Lerp(cinemachineVir.GetCinemachineComponent&lt;CinemachineTransposer&gt;().m_FollowOffset,followOffset,Time.deltaTime*<span class="number">5f</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="可能的问题"><a href="#可能的问题" class="headerlink" title="可能的问题"></a>可能的问题</h2><p><strong>移动时的抖动</strong></p><ul><li>将CinemachineVirtualCamera -&gt; Body 的 x/y/z Damping 值修改为 0</li><li>将CinemachineVirtualCamera -&gt; Aim 的 Horizontal/Vertical Damping 的值修改为 0</li></ul><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2022/11/14_21_39_26_image-20221114213835243.png" alt="image-20221114213835243"></p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> 游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Leetcode刷题折磨记录</title>
      <link href="/2022/11/12/009_LeetCode001/"/>
      <url>/2022/11/12/009_LeetCode001/</url>
      
        <content type="html"><![CDATA[<blockquote><p>有必要说明一下，题目和部分代码皆来自LeetCode，解题思路掺杂了我学习之后的一些想法。很多题目没有被我做出来，所以我看过官方的答案之后记录在此，每个题目都是一个超链接，链接到原题。</p></blockquote><h1 id="动态规划问题"><a href="#动态规划问题" class="headerlink" title="动态规划问题"></a>动态规划问题</h1><h2 id="309-最佳买卖股票时机含冷冻期"><a href="#309-最佳买卖股票时机含冷冻期" class="headerlink" title="309. 最佳买卖股票时机含冷冻期"></a><a href="https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-with-cooldown/">309. 最佳买卖股票时机含冷冻期</a></h2><p>给定一个整数数组<code>prices</code>，其中第 <code>prices[i]</code> 表示第 <code>i</code> 天的股票价格 。</p><p>设计一个算法计算出最大利润。在满足以下约束条件下，你可以尽可能地完成更多的交易（多次买卖一支股票）:</p><ul><li>卖出股票后，你无法在第二天买入股票 (即冷冻期为 1 天)。</li></ul><p><strong>注意：</strong>你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: prices = [1,2,3,0,2]</span><br><span class="line">输出: 3 </span><br><span class="line">解释: 对应的交易状态为: [买入, 卖出, 冷冻期, 买入, 卖出]</span><br></pre></td></tr></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: prices = [1]</span><br><span class="line">输出: 0</span><br></pre></td></tr></table></figure><p>使用<strong>动态规划</strong>的思想，每天的状态都只有三种，而且每天的状态都与前两天的状态有关。在这个题目里</p><blockquote><ol><li><p>这个状态是指这一天结束时的状态</p></li><li><p>股票的收益不是每天计算，当买入时的收益时负收益，而当卖出时候的收益则是正收益。当持有股票是，收益是与买入时收益相等的</p></li></ol><ul><li><p>我们目前持有一支股票，对应的「累计最大收益」记为 <code>f\[i\][0]f[i\][0]</code>；</p></li><li><p>我们目前不持有任何股票，并且处于冷冻期中，对应的「累计最大收益」记为 <code>f[i\][1]f[i\][1]</code>；</p></li><li><p>我们目前不持有任何股票，并且不处于冷冻期中，对应的「累计最大收益」记为<code>f[i\][2]f[i\][2]</code>。</p></li></ul></blockquote><ul><li><p><strong>手上持有的股票的最大收益</strong>：当天没有买入、卖出或处于冷冻期</p><p>第一种情况：股票是之前买入，收益为<code>f[i-1\][0]</code></p><p>第二种情况：股票是今天买入，那么前一天就不能持有股票并且不能处于冷冻期（就是前一天不能是刚卖），收益为<code>f[i-1\][2]-prices[i]</code></p></li><li><p><strong>目前不持有任何股票，且处于冷冻期（今天刚卖）</strong>：没有交易产生</p><p>收益只有一种：之前持有股票的收益加上卖出的股票的收益 <code>f[i-1\][0] + prices[i]</code></p></li><li><p><strong>目前不持有任何股票，且不处于冷冻期</strong></p><p>第一种情况：因为没有处于冷冻期，所以第 <code>i-1</code> 天没有发生操作，并且如果不处于冷冻期，收益为<code>f[i-1\][2]</code></p><p>第二种情况：如果<code>i-1</code>天处于冷冻期，收益为<code>f[i-1\][1]</code></p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">maxProfit</span>(<span class="params">self, prices: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> prices:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        n = <span class="built_in">len</span>(prices)</span><br><span class="line">        <span class="comment"># f[i][0]: 手上持有股票的最大收益</span></span><br><span class="line">        <span class="comment"># f[i][1]: 手上不持有股票，并且处于冷冻期中的累计最大收益</span></span><br><span class="line">        <span class="comment"># f[i][2]: 手上不持有股票，并且不在冷冻期中的累计最大收益</span></span><br><span class="line">        f = [[-prices[<span class="number">0</span>], <span class="number">0</span>, <span class="number">0</span>]] + [[<span class="number">0</span>] * <span class="number">3</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n - <span class="number">1</span>)]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n):</span><br><span class="line">            f[i][<span class="number">0</span>] = <span class="built_in">max</span>(f[i - <span class="number">1</span>][<span class="number">0</span>], f[i - <span class="number">1</span>][<span class="number">2</span>] - prices[i])</span><br><span class="line">            f[i][<span class="number">1</span>] = f[i - <span class="number">1</span>][<span class="number">0</span>] + prices[i]</span><br><span class="line">            f[i][<span class="number">2</span>] = <span class="built_in">max</span>(f[i - <span class="number">1</span>][<span class="number">1</span>], f[i - <span class="number">1</span>][<span class="number">2</span>])</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">max</span>(f[n - <span class="number">1</span>][<span class="number">1</span>], f[n - <span class="number">1</span>][<span class="number">2</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>因为每一天的收益都只与前一天有关，所以 <code>f</code> 数组无用的可以省略掉</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">maxProfit</span>(<span class="params">self, prices: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> prices:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        n = <span class="built_in">len</span>(prices)</span><br><span class="line">        f0, f1, f2 = -prices[<span class="number">0</span>], <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n):</span><br><span class="line">            newf0 = <span class="built_in">max</span>(f0, f2 - prices[i])</span><br><span class="line">            newf1 = f0 + prices[i]</span><br><span class="line">            newf2 = <span class="built_in">max</span>(f1, f2)</span><br><span class="line">            f0, f1, f2 = newf0, newf1, newf2</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">max</span>(f1, f2)</span><br></pre></td></tr></table></figure><h2 id="712-两个字符串的最小ASCII删除和"><a href="#712-两个字符串的最小ASCII删除和" class="headerlink" title="712. 两个字符串的最小ASCII删除和"></a><a href="https://leetcode.cn/problems/minimum-ascii-delete-sum-for-two-strings/">712. 两个字符串的最小ASCII删除和</a></h2><p>给定两个字符串<code>s1</code> 和 <code>s2</code>，返回 <em>使两个字符串相等所需删除字符的 <strong>ASCII</strong> 值的最小和</em> 。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入: s1 = &quot;sea&quot;, s2 = &quot;eat&quot;</span><br><span class="line">输出: 231</span><br><span class="line">解释: 在 &quot;sea&quot; 中删除 &quot;s&quot; 并将 &quot;s&quot; 的值(115)加入总和。</span><br><span class="line">在 &quot;eat&quot; 中删除 &quot;t&quot; 并将 116 加入总和。</span><br><span class="line">结束时，两个字符串相等，115 + 116 = 231 就是符合条件的最小和。</span><br></pre></td></tr></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入: s1 = &quot;delete&quot;, s2 = &quot;leet&quot;</span><br><span class="line">输出: 403</span><br><span class="line">解释: 在 &quot;delete&quot; 中删除 &quot;dee&quot; 字符串变成 &quot;let&quot;，</span><br><span class="line">将 100[d]+101[e]+101[e] 加入总和。在 &quot;leet&quot; 中删除 &quot;e&quot; 将 101[e] 加入总和。</span><br><span class="line">结束时，两个字符串都等于 &quot;let&quot;，结果即为 100+101+101+101 = 403 。</span><br><span class="line">如果改为将两个字符串转换为 &quot;lee&quot; 或 &quot;eet&quot;，我们会得到 433 或 417 的结果，比答案更大。</span><br></pre></td></tr></table></figure><p>这个题实在不会，希望以后看到回想起来重做一次。 直接复制一下官方解答吧</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    public <span class="built_in">int</span> minimumDeleteSum(String s1, String s2) &#123;</span><br><span class="line">        <span class="built_in">int</span> m = s1.length(), n = s2.length();</span><br><span class="line">        <span class="built_in">int</span>[][] dp = new <span class="built_in">int</span>[m + <span class="number">1</span>][n + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">            dp[i][<span class="number">0</span>] = dp[i - <span class="number">1</span>][<span class="number">0</span>] + s1.codePointAt(i - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            dp[<span class="number">0</span>][j] = dp[<span class="number">0</span>][j - <span class="number">1</span>] + s2.codePointAt(j - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">            <span class="built_in">int</span> code1 = s1.codePointAt(i - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">                <span class="built_in">int</span> code2 = s2.codePointAt(j - <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span> (code1 == code2) &#123;</span><br><span class="line">                    dp[i][j] = dp[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    dp[i][j] = Math.<span class="built_in">min</span>(dp[i - <span class="number">1</span>][j] + code1, dp[i][j - <span class="number">1</span>] + code2);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[m][n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">作者：力扣官方题解</span><br><span class="line">链接：https://leetcode.cn/problems/minimum-<span class="built_in">ascii</span>-delete-<span class="built_in">sum</span>-<span class="keyword">for</span>-two-strings/solutions/<span class="number">1712998</span>/liang-ge-zi-fu-chuan-de-zui-xiao-asciish-xllf/</span><br><span class="line">来源：力扣（LeetCode）</span><br><span class="line">著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure><h2 id="1218-最长定差子序列"><a href="#1218-最长定差子序列" class="headerlink" title="1218. 最长定差子序列"></a><a href="https://leetcode.cn/problems/longest-arithmetic-subsequence-of-given-difference/">1218. 最长定差子序列</a></h2><p>给你一个整数数组 <code>arr</code> 和一个整数 <code>difference</code>，请你找出并返回 <code>arr</code> 中最长等差子序列的长度，该子序列中相邻元素之间的差等于 <code>difference</code> 。</p><p><strong>子序列</strong> 是指在不改变其余元素顺序的情况下，通过删除一些元素或不删除任何元素而从 <code>arr</code> 派生出来的序列。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：arr = [1,2,3,4], difference = 1</span><br><span class="line">输出：4</span><br><span class="line">解释：最长的等差子序列是 [1,2,3,4]。</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：arr = [1,3,5,7], difference = 1</span><br><span class="line">输出：1</span><br><span class="line">解释：最长的等差子序列是任意单个元素。</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：arr = [1,5,7,8,5,3,4,2,1], difference = -2</span><br><span class="line">输出：4</span><br><span class="line">解释：最长的等差子序列是 [7,5,3,1]。</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>1 &lt;= arr.length &lt;= 105</code></li><li><code>-104 &lt;= arr[i], difference &lt;= 104</code></li></ul><p><strong>解题思路：</strong></p><p>将问题转化为 以<code>arr[i]</code>为结尾的最长等差子序列的长度，最后从这些中选出最大的值，即为最终结果。</p><p>令 <code>dp[i]</code> 表示以 <code>arr[i]</code> 为结尾的最长的等差子序列的长度，我们可以在 <code>arr[i]</code> 左侧找到满足 <code>arr[j]=arr[i]−d</code> 的元素，将 <code>arr[i]</code> 加到以 <code>arr[j]</code> 为结尾的最长的等差子序列的末尾，这样可以递推地从 <code>dp[j]</code> 计算出 <code>dp[i]</code>。由于我们是从左往右遍历 <code>arr</code> 的，对于两个相同的元素，下标较大的元素对应的 <code>dp</code> 值不会小于下标较小的元素对应的 <code>dp</code> 值，因此下标<code>j</code> 可以取满足 <code>j&lt;i</code> 且 <code>arr[j]=arr[i]−d</code> 的所有下标的最大值。故有转移方程<br>$$<br>dp[i]=dp[j]+1<br>$$<br>由于我们总是在左侧找一个最近的等于<code>arr[i]−d</code> 元素并取其对应 <code>dp</code> 值，因此我们直接用<code>dp[v]</code> 表示以 <code>v</code> 为结尾的最长的等差子序列的长度，这样 <code>dp[v−d]</code> 就是我们要找的左侧元素对应的最长的等差子序列的长度，因此转移方程可以改为<br>$$<br>dp[v]=dp[v−d]+1<br>$$<br>最后答案为<code>max&#123;dp&#125;</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">longestSubsequence</span>(<span class="params">self, arr: <span class="type">List</span>[<span class="built_in">int</span>], difference: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        dp = defaultdict(<span class="built_in">int</span>)</span><br><span class="line">        <span class="keyword">for</span> v <span class="keyword">in</span> arr:</span><br><span class="line">            dp[v] = dp[v - difference] + <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">max</span>(dp.values())</span><br></pre></td></tr></table></figure><h2 id="790-多米诺和托米诺平铺"><a href="#790-多米诺和托米诺平铺" class="headerlink" title="790.多米诺和托米诺平铺"></a><a href="https://leetcode.cn/problems/domino-and-tromino-tiling/description/">790.多米诺和托米诺平铺</a></h2><p>有两种形状的瓷砖：一种是 <code>2 x 1</code> 的多米诺形，另一种是形如 “L” 的托米诺形。两种形状都可以旋转。</p><p><img src="https://assets.leetcode.com/uploads/2021/07/15/lc-domino.jpg" alt="img"></p><p>给定整数 n ，返回可以平铺 <code>2 x n</code> 的面板的方法的数量。<strong>返回对</strong> <code>109 + 7</code> <strong>取模</strong> 的值。</p><p>平铺指的是每个正方形都必须有瓷砖覆盖。两个平铺不同，当且仅当面板上有四个方向上的相邻单元中的两个，使得恰好有一个平铺有一个瓷砖占据两个正方形。</p><p><strong>示例 1:</strong></p><p><img src="https://assets.leetcode.com/uploads/2021/07/15/lc-domino1.jpg" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: n = 3</span><br><span class="line">输出: 5</span><br><span class="line">解释: 五种不同的方法如上所示。</span><br></pre></td></tr></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: n = 1</span><br><span class="line">输出: 1</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>1 &lt;= n &lt;= 1000</code></li></ul><p>官方解析实在是通俗不易懂，好在找到了一个通俗易懂的解析版本–<a href="https://leetcode.cn/problems/domino-and-tromino-tiling/solutions/1963121/xiao-bai-yi-dong-de-guan-fang-ti-jie-jie-7tjg/">智商局局长</a></p><p><strong>解析</strong></p><p>我们将平铺看成一个从左到右铺上瓷砖的过程，第 i 列之前都被瓷砖覆盖，在第 i 列之后都没有被瓷砖覆盖。那么第 i 列的正方形有四种被覆盖的情况：</p><p>一个正方形都没有被覆盖，记为状态 0；<br>只有上方的正方形被覆盖，记为状态 1；<br>只有下方的正方形被覆盖，记为状态 2；<br>上下两个正方形都被覆盖，记为状态 3。</p><p>然后，忘了官方题解的图中那个以四块正方形组成的大正方形，只聚焦于两个正方形组成的第i列。</p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2022/11/12_10_29_57_image-20221112102953771.png" alt="image-20221112102953771"></p><p>我们使用dp[i][n]来表示将瓷砖铺成第i列为n状态的所有方法。</p><p>如果第i列的状态为0，即一个瓷砖都没有，因为第i列之前都被瓷砖覆盖了，所以其状态是与第i-1列的3状态相同的，即dp[i][0]=dp[i-1][3]。</p><p>如果第i列的状态为1，即只有上方有一个瓷砖，要想成为这种情况，有两种方式：在第i-1为2状态下时，横着铺一块多米诺形瓷砖，或者在i第i-1列为0状态下时铺一个托米诺形瓷砖，即dp[i][1]=dp[i-1][0]+dp[i-1][2]。</p><p>如果第i列的状态为2，即只有下方的一个瓷砖，与状态为1同理。有两种方式：在第i-1为1状态下时，横着铺一块多米诺形瓷砖，或者在i第i-1列为0状态下时铺一个托米诺形瓷砖，即dp[i][1]=dp[i-1][0]+dp[i-1][1]。</p><p>如果第i列的状态为3，即第i列已经铺满了瓷砖，此时需要在第i-1列的3状态下竖着铺一块多米诺形瓷砖，或者在第i-1列的1、2状态下铺一个托米诺形瓷砖，dp[i][3]=dp[i-1][0]+dp[i-1][1]+dp[i-1][2]+dp[i-1][3]</p><p>不难注意到，当i=0时，i-1会越界，所以需要为i=0时专门赋值。dp[i][0]是一块砖都没有，自然为0；因为多米诺形瓷砖与托米诺形瓷砖都无法在第0列铺出一个瓷砖，所以dp[i][1]与dp[i][2]也是0；使用多米诺形瓷砖时可以铺满第0列，所以dp[i][3]的值为1。</p><p>最后是官方题解的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">numTilings</span>(<span class="params">self, n: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        MOD = <span class="number">10</span> ** <span class="number">9</span> + <span class="number">7</span></span><br><span class="line">        dp = [[<span class="number">0</span>] * <span class="number">4</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n + <span class="number">1</span>)]</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">3</span>] = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n + <span class="number">1</span>):</span><br><span class="line">            dp[i][<span class="number">0</span>] = dp[i - <span class="number">1</span>][<span class="number">3</span>]</span><br><span class="line">            dp[i][<span class="number">1</span>] = (dp[i - <span class="number">1</span>][<span class="number">0</span>] + dp[i - <span class="number">1</span>][<span class="number">2</span>]) % MOD</span><br><span class="line">            dp[i][<span class="number">2</span>] = (dp[i - <span class="number">1</span>][<span class="number">0</span>] + dp[i - <span class="number">1</span>][<span class="number">1</span>]) % MOD</span><br><span class="line">            dp[i][<span class="number">3</span>] = (((dp[i - <span class="number">1</span>][<span class="number">0</span>] + dp[i - <span class="number">1</span>][<span class="number">1</span>]) % MOD + dp[i - <span class="number">1</span>][<span class="number">2</span>]) % MOD + dp[i - <span class="number">1</span>][<span class="number">3</span>]) % MOD</span><br><span class="line">        <span class="keyword">return</span> dp[n][<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">作者：力扣官方题解</span><br><span class="line">链接：https://leetcode.cn/problems/domino-<span class="keyword">and</span>-tromino-tiling/solutions/<span class="number">1962465</span>/duo-mi-nuo-he-tuo-mi-nuo-ping-pu-by-leet-7n0j/</span><br><span class="line">来源：力扣（LeetCode）</span><br><span class="line">著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure><h1 id="132模式"><a href="#132模式" class="headerlink" title="132模式"></a>132模式</h1><h2 id="456-132-模式"><a href="#456-132-模式" class="headerlink" title="456. 132 模式"></a><a href="https://leetcode.cn/problems/132-pattern/">456. 132 模式</a></h2><p>给你一个整数数组 <code>nums</code> ，数组中共有 <code>n</code> 个整数。<strong>132 模式的子序列</strong> 由三个整数 <code>nums[i]</code>、<code>nums[j]</code> 和 <code>nums[k]</code> 组成，并同时满足：<code>i &lt; j &lt; k</code> 和 <code>nums[i] &lt; nums[k] &lt; nums[j]</code> 。</p><p>如果 <code>nums</code> 中存在 <strong>132 模式的子序列</strong> ，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,2,3,4]</span><br><span class="line">输出：false</span><br><span class="line">解释：序列中不存在 132 模式的子序列。</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [3,1,4,2]</span><br><span class="line">输出：true</span><br><span class="line">解释：序列中有 1 个 132 模式的子序列： [1, 4, 2] 。</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [-1,3,2,0]</span><br><span class="line">输出：true</span><br><span class="line">解释：序列中有 3 个 132 模式的的子序列：[-1, 3, 2]、[-1, 3, 0] 和 [-1, 2, 0] 。</span><br></pre></td></tr></table></figure><p><strong>一：枚举 3</strong></p><p>  3 的位置处于 1 和 2 之间，将数组分为 3 块，第一块为 1 维护的数组 <code>nums[0...j-1]</code>，第二块为 <code>nums[j]</code>,第三块为<code>nums[j+1...n-1]</code>。</p><p>因为 1 是 132 模式中的最小值，所以第一块只要每次维护好最小值 <code>a[i]</code>。第三块需要对元素进行排序，维护其为一个有序集合。当确定 <code>a[i]</code>与<code>a[j]</code>时，找到在其中比<code>a[i]</code>大的最小值，然后对比<code>a[j]</code>与<code>a[k]</code>的大小，如果符合 132 模式则返回为 True ，否则从第三块中移除<code>num[j+1]</code>(下一轮被枚举的j)，并维护第一块的最小值。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">find132pattern</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">        n = <span class="built_in">len</span>(nums)</span><br><span class="line">        <span class="keyword">if</span> n &lt; <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 左侧最小值</span></span><br><span class="line">        left_min = nums[<span class="number">0</span>]</span><br><span class="line">        <span class="comment"># 右侧所有元素</span></span><br><span class="line">        right_all = SortedList(nums[<span class="number">2</span>:])</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n - <span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> left_min &lt; nums[j]:</span><br><span class="line">                index = right_all.bisect_right(left_min)</span><br><span class="line">                <span class="keyword">if</span> index &lt; <span class="built_in">len</span>(right_all) <span class="keyword">and</span> right_all[index] &lt; nums[j]:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            left_min = <span class="built_in">min</span>(left_min, nums[j])</span><br><span class="line">            right_all.remove(nums[j + <span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>二：枚举1</p><p>主要思路：从数组右面往左枚举，在 132 模式中，如果 <code>3 &gt; 2</code>, <code>2 &gt; 1</code>那么 <code>3 &gt; 1</code>,在枚举的时候，使用单调栈的方式。</p><blockquote><p>单调栈：从栈底到栈顶的元素都是严格单调递减或递增的。当给定阈值 x<em>x</em> 时，我们只需要不断地弹出栈顶的元素，直到栈为空或者 x<em>x</em> 严格小于栈顶元素。此时我们再将 x<em>x</em> 入栈，这样就维护了栈的单调性。</p></blockquote><ul><li><p>我们用单调栈维护所有可以作为 2的候选元素。初始时，单调栈中只有唯一的元素<code>a[n−1]</code>。我们还需要使用一个变量 <code>max_k</code> 记录所有可以真正作为 2 的元素的最大值；</p></li><li><p>随后我们从 <code>n−2</code> 开始从右到左枚举元素 <code>a[i]</code>：</p></li><li><p>首先我们判断 <code>a[i]</code> 是否可以作为 1。如果 <code>a[i]&lt;max_k</code>，那么它就可以作为 1，我们就找到了一组满足 132 模式的三元组；</p></li><li><p>随后我们判断 <code>a[i]</code> 是否可以作为 3，以此找出哪些可以真正作为 2 的元素。我们将 <code>a[i]</code> 不断地与单调栈栈顶的元素进行比较，如果 <code>a[i]</code> 较大，那么栈顶元素可以真正作为 2，将其弹出并更新 <code>max_k</code>；</p></li><li><p>最后我们将 <code>a[i]</code> 作为 2 的候选元素放入单调栈中。这里可以进行一个优化，即如果 <code>a[i]≤max_k</code>，那么我们也没有必要将 <code>a[i]</code> 放入栈中，因为即使它在未来被弹出，也不会将 <code>max_k</code> 更新为更大的值。</p></li><li><p>在枚举完所有的元素后，如果仍未找到满足 <code>132</code> 模式的三元组，那就说明其不存在。</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">public:</span><br><span class="line">    <span class="built_in">bool</span> find132pattern(vector&lt;<span class="built_in">int</span>&gt;&amp; nums) &#123;</span><br><span class="line">        <span class="built_in">int</span> n = nums.size();</span><br><span class="line">        stack&lt;<span class="built_in">int</span>&gt; candidate_k;</span><br><span class="line">        candidate_k.push(nums[n - <span class="number">1</span>]);</span><br><span class="line">        <span class="built_in">int</span> max_k = INT_MIN;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = n - <span class="number">2</span>; i &gt;= <span class="number">0</span>; --i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (nums[i] &lt; max_k) &#123;</span><br><span class="line">                <span class="keyword">return</span> true;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> (!candidate_k.empty() &amp;&amp; nums[i] &gt; candidate_k.top()) &#123;</span><br><span class="line">                max_k = candidate_k.top();</span><br><span class="line">                candidate_k.pop();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (nums[i] &gt; max_k) &#123;</span><br><span class="line">                candidate_k.push(nums[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="单调栈"><a href="#单调栈" class="headerlink" title="单调栈"></a>单调栈</h1><h2 id="739-每日温度"><a href="#739-每日温度" class="headerlink" title="739. 每日温度"></a><a href="https://leetcode.cn/problems/daily-temperatures/">739. 每日温度</a></h2><p>给定一个整数数组 <code>temperatures</code> ，表示每天的温度，返回一个数组 <code>answer</code> ，其中 <code>answer[i]</code> 是指对于第 <code>i</code> 天，下一个更高温度出现在几天后。如果气温在这之后都不会升高，请在该位置用 <code>0</code> 来代替。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: temperatures = [73,74,75,71,69,72,76,73]</span><br><span class="line">输出: [1,1,4,2,1,1,0,0]</span><br></pre></td></tr></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: temperatures = [30,40,50,60]</span><br><span class="line">输出: [1,1,1,0]</span><br></pre></td></tr></table></figure><p><strong>示例 3:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: temperatures = [30,60,90]</span><br><span class="line">输出: [1,1,0]</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>1 &lt;= temperatures.length &lt;= 105</code></li><li><code>30 &lt;= temperatures[i] &lt;= 100</code></li></ul><p><strong>一：暴力解题</strong></p><p>从提示中我们可以看到，温度是在 30-100 之间的，所以我们只要维护一个温度列表，反向遍历温度列表，每当温度出现便更新一次，这样温度列表里一直是最近的温度下标。</p><p>反向遍历温度列表。对于每个元素 <code>temperatures[i]</code>，在数组 <code>next</code> 中找到从 <code>temperatures[i] + 1</code> 到 100 中每个温度第一次出现的下标，将其中的最小下标记为 <code>warmerIndex</code>，则 <code>warmerIndex</code> 为下一次温度比当天高的下标。如果 <code>warmerIndex</code> 不为无穷大，则 <code>warmerIndex - i</code> 即为下一次温度比当天高的等待天数，最后令 <code>next[temperatures[i]] = i</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">dailyTemperatures</span>(<span class="params">self, temperatures: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span><br><span class="line">        n = <span class="built_in">len</span>(temperatures)</span><br><span class="line">        ans, nxt, big = [<span class="number">0</span>] * n, <span class="built_in">dict</span>(), <span class="number">10</span>**<span class="number">9</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n - <span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">            warmer_index = <span class="built_in">min</span>(nxt.get(t, big) <span class="keyword">for</span> t <span class="keyword">in</span> <span class="built_in">range</span>(temperatures[i] + <span class="number">1</span>, <span class="number">102</span>))</span><br><span class="line">            <span class="keyword">if</span> warmer_index != big:</span><br><span class="line">                ans[i] = warmer_index - i</span><br><span class="line">            nxt[temperatures[i]] = i</span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><p><strong>二：单调栈</strong></p><p>维护一个存储温度和下标的单调栈，栈底到栈顶依次单调递减。如果一个下标仍存在单调栈里，说明目前尚未找到温度更高的下标。</p><p>正向遍历温度列表，如果单调栈里为空，则直接入栈。如果单调栈里元素不为空，循环比较当前元素<code>temperatures[i]</code>与栈顶的温度大小，如果大于栈顶元素的温度，则栈顶元素出栈，并修改将栈顶元素对应的<code>ans</code>等待天数为<code>i-stack[-1][0]</code>,如果小于栈顶元素的温度，则当前元素入栈。</p><p>由于单调栈满足从栈底到栈顶元素对应的温度递减，因此每次有元素进栈时，会将温度更低的元素全部移除，并更新出栈元素对应的等待天数，这样可以确保等待天数一定是最小的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">dailyTemperatures</span>(<span class="params">self, temperatures: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span><br><span class="line">        ans = [<span class="number">0</span>] * <span class="built_in">len</span>(temperatures)</span><br><span class="line">        stack = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(temperatures)):</span><br><span class="line">            <span class="keyword">if</span> stack:</span><br><span class="line">                <span class="keyword">while</span> stack <span class="keyword">and</span> temperatures[i] &gt; stack[-<span class="number">1</span>][<span class="number">1</span>]:</span><br><span class="line">                    ans[stack[-<span class="number">1</span>][<span class="number">0</span>]] = i - stack[-<span class="number">1</span>][<span class="number">0</span>]</span><br><span class="line">                    stack.pop()</span><br><span class="line">                stack.append([i, temperatures[i]])</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                stack.append([i, temperatures[i]])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Leetcode </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FSM有限状态机</title>
      <link href="/2022/11/10/012_FSMSystem/"/>
      <url>/2022/11/10/012_FSMSystem/</url>
      
        <content type="html"><![CDATA[<h1 id="有限状态机"><a href="#有限状态机" class="headerlink" title="有限状态机"></a>有限状态机</h1><p>代码参考此<a href="https://blog.csdn.net/weixin_43839583/article/details/105501884">作者</a> ，做了一些改变</p><p>FSM ，有限状态机，一个可以枚举出有限个状态，并且这些状态在特定条件下是能够来回切换的。</p><p>在游戏中经常看到的一些AI，如敌人巡逻，巡逻过程中看到玩家就追击，追上了就攻击，追不上并且有了一定的距离就返回去继续巡逻。</p><p>为什么要这样做呢？为了方便扩展，如果后期需要加入新状态，只需要继承基类，添加实现就好，不用修改原来的代码，对外界开放扩展，这就是开闭原则（对修改关闭，对扩展开放）。<img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2022/11/14_21_55_38_image-20221114215500062.png" alt="image-20221114215500062"></p><h2 id="枚举状态类"><a href="#枚举状态类" class="headerlink" title="枚举状态类"></a>枚举状态类</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">FSMEnum</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 转换条件</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">enum</span> Transition</span><br><span class="line">&#123;</span><br><span class="line">    NullTransition=<span class="number">0</span>,<span class="comment">//空的转换条件</span></span><br><span class="line">    AttackPlayer,<span class="comment">//看到玩家</span></span><br><span class="line">    LostPlayer,<span class="comment">//周围没有玩家</span></span><br><span class="line">    EventAttack,<span class="comment">//强制事件切换</span></span><br><span class="line">    EventDefence,<span class="comment">//强制事件切换</span></span><br><span class="line">    LowHealth,<span class="comment">//血量低进入防御状态</span></span><br><span class="line">    UnderAttack,<span class="comment">//受到攻击</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 当前状态</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">enum</span> StateID</span><br><span class="line">&#123;</span><br><span class="line">    NullState,<span class="comment">//空的状态</span></span><br><span class="line">    Patrol,<span class="comment">//巡逻状态</span></span><br><span class="line">    Attack,<span class="comment">//攻击状态</span></span><br><span class="line">    Defence,<span class="comment">//防御状态</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="FSMState"><a href="#FSMState" class="headerlink" title="FSMState"></a>FSMState</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title">FSMState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">protected</span> StateID stateID;</span><br><span class="line">    <span class="keyword">public</span> StateID StateID &#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> stateID; &#125; &#125;</span><br><span class="line">    <span class="keyword">protected</span> Dictionary&lt;Transition, StateID&gt; transitionStateDic = <span class="keyword">new</span> Dictionary&lt;Transition, StateID&gt;();</span><br><span class="line">    <span class="keyword">protected</span> FSMSystem fSMSystem;</span><br><span class="line">    <span class="keyword">protected</span> GameObject Go;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 有参构造函数</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;fSMSystem&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FSMState</span>(<span class="params">FSMSystem fSMSystem</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.fSMSystem = fSMSystem;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 添加转换条件</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;trans&quot;&gt;</span>转换条件<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;id&quot;&gt;</span>转换条件满足时执行的状态<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AddTransition</span>(<span class="params">Transition trans,StateID id</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(trans==Transition.NullTransition)</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.LogError(<span class="string">&quot;不允许NullTransition&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(id==StateID.NullState)</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.LogError(<span class="string">&quot;不允许NullStateID&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(transitionStateDic.ContainsKey(trans))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.LogError(<span class="string">&quot;添加转换条件的时候&quot;</span> + trans + <span class="string">&quot;已经存在于transitionStateDic中&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        transitionStateDic.Add(trans, id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 删除转换条件</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">DeleteTransition</span>(<span class="params">Transition trans</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (trans == Transition.NullTransition)</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.LogError(<span class="string">&quot;不允许NullTransition&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!transitionStateDic.ContainsKey(trans))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.LogError(<span class="string">&quot;删除转换条件的时候&quot;</span> + trans + <span class="string">&quot;不存在于transitionStateDic中&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        transitionStateDic.Remove(trans);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 获取当前转换条件下的状态</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> StateID <span class="title">GetOutputState</span>(<span class="params">Transition trans</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(transitionStateDic.ContainsKey(trans))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> transitionStateDic[trans];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> StateID.NullState;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 进入新状态之前做的事</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">DoBeforeEnter</span>()</span> &#123; &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 离开当前状态时做的事</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">DoAfterLeave</span>()</span> &#123; &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 当前状态所做的事</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">Act</span>(<span class="params">GameObject npc</span>)</span>;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 在某一状态执行过程中，新的转换条件满足时做的事</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">Reason</span>(<span class="params">GameObject npc</span>)</span>;<span class="comment">//判断转换条件</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="FSMSystem"><a href="#FSMSystem" class="headerlink" title="FSMSystem"></a>FSMSystem</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">FSMSystem</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> Dictionary&lt;StateID, FSMState&gt; stateDic = <span class="keyword">new</span> Dictionary&lt;StateID, FSMState&gt;();</span><br><span class="line">    <span class="keyword">private</span> StateID currentStateID;</span><br><span class="line">    <span class="keyword">private</span> FSMState currentState;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 更新npc的动作</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Update</span>(<span class="params">GameObject npc</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        currentState.Act(npc);</span><br><span class="line">        currentState.Reason(npc);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 添加新状态</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AddState</span>(<span class="params">FSMState state</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(state==<span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.LogError(<span class="string">&quot;FSMState不能为空&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(currentState==<span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            currentState = state;</span><br><span class="line">            currentStateID = state.StateID;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(stateDic.ContainsKey(state.StateID))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.LogError(<span class="string">&quot;状态&quot;</span> + state.StateID + <span class="string">&quot;已经存在，无法重复添加&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        stateDic.Add(state.StateID, state);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 删除状态</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">DeleteState</span>(<span class="params">StateID stateID</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(stateID==StateID.NullState)</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.LogError(<span class="string">&quot;无法删除空状态&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!stateDic.ContainsKey(stateID))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.LogError(<span class="string">&quot;无法删除不存在的状态&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        stateDic.Remove(stateID);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 执行过渡条件满足时对应状态该做的事</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">PerformTransition</span>(<span class="params">Transition transition</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(transition==Transition.NullTransition)</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.LogError(<span class="string">&quot;无法执行空的转换条件&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        StateID id = currentState.GetOutputState(transition);</span><br><span class="line">        <span class="keyword">if</span>(id==StateID.NullState)</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.LogWarning(<span class="string">&quot;当前状态&quot;</span> + currentStateID + <span class="string">&quot;无法根据转换条件&quot;</span> + transition + <span class="string">&quot;发生转换&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!stateDic.ContainsKey(id))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.LogError(<span class="string">&quot;在状态机里面不存在状态&quot;</span> + id + <span class="string">&quot;,无法进行状态转换&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        FSMState state = stateDic[id];</span><br><span class="line">        currentState.DoAfterLeave();</span><br><span class="line">        currentState = state;</span><br><span class="line">        currentStateID = state.StateID;</span><br><span class="line">        currentState.DoBeforeEnter();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="示例攻击状态"><a href="#示例攻击状态" class="headerlink" title="示例攻击状态"></a>示例攻击状态</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.AI;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AttackState</span> : <span class="title">FSMState</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> visionDistance = <span class="number">1f</span>;<span class="comment">//玩家自动攻击可视范围</span></span><br><span class="line">    <span class="keyword">public</span> LayerMask playerLayer = <span class="number">1</span> &lt;&lt; LayerMask.NameToLayer(<span class="string">&quot;player&quot;</span>);</span><br><span class="line">    AIController Controller;</span><br><span class="line">    <span class="keyword">private</span> GameObject currentAttackTarget;<span class="comment">//当前攻击目标</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AttackState</span>(<span class="params">FSMSystem fSMSystem, GameObject gameObject, AIController controller</span>) : <span class="title">base</span>(<span class="params">fSMSystem</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        stateID = StateID.Attack;</span><br><span class="line">        Go = gameObject;</span><br><span class="line">        Controller = controller;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Act</span>(<span class="params">GameObject npc</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (currentAttackTarget == <span class="literal">null</span>)</span><br><span class="line">            currentAttackTarget = DetectPlayer();</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            Controller.MoveToTarget(currentAttackTarget.gameObject.transform.position, <span class="literal">true</span>);</span><br><span class="line">            <span class="comment">//Debug.Log(currentAttackTarget.gameObject.transform.position);</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (System.Exception)</span><br><span class="line">        &#123;</span><br><span class="line">            currentAttackTarget = DetectPlayer();</span><br><span class="line">            Debug.Log(<span class="string">&quot;找不到攻击物体,切换目标或更改状态&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Reason</span>(<span class="params">GameObject npc</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//周围没有别的玩家</span></span><br><span class="line">        <span class="keyword">if</span> (currentAttackTarget == <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Controller.MoveToTarget(Vector3.zero, <span class="literal">false</span>);</span><br><span class="line">            fSMSystem.PerformTransition(Transition.LostPlayer);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> GameObject <span class="title">DetectPlayer</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//返回最近的目标</span></span><br><span class="line">        <span class="comment">//检测player层</span></span><br><span class="line">        Collider[] colliders = Physics.OverlapSphere(Go.transform.position, visionDistance, playerLayer);</span><br><span class="line">        <span class="keyword">var</span> minDistance = Mathf.Infinity;</span><br><span class="line">        GameObject mDgo = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> colliders)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ((Go.transform.position - item.transform.position).magnitude &lt; minDistance &amp;&amp; (Go.transform.position - item.transform.position).magnitude &gt; <span class="number">0.2f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                minDistance = (Go.transform.position - item.transform.position).magnitude;</span><br><span class="line">                mDgo = item.gameObject;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mDgo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.AI;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AIController</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> FSMSystem fsm;<span class="comment">//状态机</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        InitFSM();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//每帧更新当前状态</span></span><br><span class="line">        fsm.Update(gameObject);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 初始化FSM状态机</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitFSM</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        fsm = <span class="keyword">new</span> FSMSystem();</span><br><span class="line"></span><br><span class="line">        FSMState attackState = <span class="keyword">new</span> AttackState(fsm, gameObject, <span class="keyword">this</span>);</span><br><span class="line">        <span class="comment">//防御回血</span></span><br><span class="line">        attackState.AddTransition(Transition.LowHealth, StateID.Defence);</span><br><span class="line">        <span class="comment">//周围没有人</span></span><br><span class="line">        attackState.AddTransition(Transition.LostPlayer, StateID.Patrol);</span><br><span class="line">        fsm.AddState(attackState);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 移动到相应位置</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;pos&quot;&gt;</span>位置<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;isStopped&quot;&gt;</span>是否移动，需要移动时为true，转换状态时为false<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">MoveToTarget</span>(<span class="params">Vector3 pos, <span class="built_in">bool</span> isStopped</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// if (id != playerStats.id_player)</span></span><br><span class="line">        <span class="comment">// &#123;</span></span><br><span class="line">        <span class="comment">//     return;</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        navAgent.isStopped = !isStopped;</span><br><span class="line">        navAgent.destination = pos;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="END"><a href="#END" class="headerlink" title="END"></a>END</h1><p>通过一些流行且实用的游戏设计模式，我们可以更好的获得游戏拓展以及开发上的轻松。不得不说，这个fsm真牛！！！</p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏制作 </tag>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu下Mysql安装记录</title>
      <link href="/2022/11/02/010_MysqlInstall/"/>
      <url>/2022/11/02/010_MysqlInstall/</url>
      
        <content type="html"><![CDATA[<p>Ubuntu系统下MySQL的安装及所遇问题的解决办法</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>直接命令行安装</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install mysql-server</span><br></pre></td></tr></table></figure><p>根据提示完成安装。安装查询是否成功</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -V</span><br></pre></td></tr></table></figure><blockquote><p>大写的V</p></blockquote><p>查看mysql服务状态</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status mysql.service</span><br></pre></td></tr></table></figure><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><p>我安装的版本为 <code>8.0.31</code></p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2022/10/28_19_9_55_image-20221028190952227.png" alt="image-20221028190952227"></p><p><strong>问题：</strong></p><p>由于在安装过程中没有提示输入root的密码，导致进入mysql时无法进入。</p><p><strong>解决：</strong></p><ol><li><p>使用Ubuntu的root权限进入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mysql -u root -p</span><br></pre></td></tr></table></figure></li><li><p>提示输入命令时，直接回车，然后输入以下命令行修改root密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//切换到mysql表</span><br><span class="line">use mysql</span><br><span class="line">//修改密码</span><br><span class="line">alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified with mysql_native_password by &quot;[密码]&quot;;</span><br></pre></td></tr></table></figure><blockquote><p>惊喜：</p><p>如果密码为空，登录的时候直接回车就可以进入MySQL。</p></blockquote></li><li><p>可以通过下面密码查看自己加过密的密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select user,authentication_string from user;</span><br></pre></td></tr></table></figure><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2022/10/28_19_16_22_image-20221028191619566.png" alt="image-20221028191619566"></p></li></ol><h4 id="用户创建"><a href="#用户创建" class="headerlink" title="用户创建"></a><strong>用户创建</strong></h4><p>由于MySQL8.0的创建用户的权限问题，创建用户分为两步：</p><ul><li>创建用户名和密码</li><li>授予权限</li></ul><p><strong>创建用户名和密码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create user &#x27;username&#x27;@&#x27;host&#x27; identified by &#x27;password&#x27;; </span><br></pre></td></tr></table></figure><p>其中<code>username</code>为自定义的用户名；<code>host</code>为登录域名，<code>host</code>为<code>&#39;%&#39;</code>时表示为 任意IP，为<code>localhost</code>时表示本机，或者填写指定的IP地址；<code>paasword</code>为密码。</p><p><strong>授予权限</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on *.* to &#x27;username&#x27;@&#x27;%&#x27; with grant option; </span><br></pre></td></tr></table></figure><p>其中 *.* 第一个*表示所有数据库，第二个*表示所有数据表，如果不想授权全部那就把对应的*写成相应数据库或者数据表；username为指定的用户；%为该用户登录的域名。</p><p><strong>刷新权限</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges; </span><br></pre></td></tr></table></figure><p><strong>收回权限</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#收回权限(不包含赋权权限)</span><br><span class="line">REVOKE ALL PRIVILEGES ON *.* FROM user_name;</span><br><span class="line">REVOKE ALL PRIVILEGES ON user_name.* FROM user_name;</span><br><span class="line">#收回赋权权限</span><br><span class="line">REVOKE GRANT OPTION ON *.* FROM user_name;</span><br><span class="line"></span><br><span class="line">#操作完后重新刷新权限</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h2 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h2><p>使用idea连接虚拟机的步骤</p><h3 id="1-修改虚拟机虚拟网络编辑器"><a href="#1-修改虚拟机虚拟网络编辑器" class="headerlink" title="1.修改虚拟机虚拟网络编辑器"></a>1.修改虚拟机虚拟网络编辑器</h3><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2022/10/30_18_51_42_image-20221030185139574.png" alt="image-20221030185139574"></p><p>虚拟机的ip地址为 <strong>192.168.38.129</strong></p><p>点击右下角更改设置可以对nat设置进行更改</p><p>选择VMnet8，点击NAT设置</p><p>添加端口转发 主机端口为1200以上，虚拟机端口为22或80</p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2022/10/30_18_54_48_image-20221030185445761.png" alt="image-20221030185445761"></p><p>修改后保存设置。</p><p>使用cmd或Terminal对ip地址进行ping命令，看是否正常通信</p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2022/10/30_18_56_37_image-20221030185634577.png" alt="image-20221030185634577"></p><blockquote><p>ping 的时候别忘了打开虚拟机！！！</p></blockquote><h3 id="2-构建项目"><a href="#2-构建项目" class="headerlink" title="2.构建项目"></a>2.构建项目</h3><p>修改maven源为国内源。</p><p>maven安装地址/conf/settings.xml，将其中的源修改为以下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>如果使用的maven是idea自己创建的maven路径的话，直接修改就结束了</p><p>如果不是，需要修改idea里的路径</p></blockquote><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2022/10/30_19_4_42_image-20221030190440132.png" alt="image-20221030190440132"></p><p>点击 All settings</p><p>需要修改一下图中的三个路径，点击后面的Override才能修改</p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2022/11/12_10_21_26_image-20221030190552579.png" alt="image-20221030190552579"></p><blockquote><ol><li>为下载的maven路径</li><li>为maven里的setting.xml路径</li><li>是存放maven resposity的文件夹路径，存放下载的依赖包</li></ol></blockquote><p><strong>之后就是写代码的操作了</strong></p><blockquote><p>可能出现的<strong>问题</strong></p><p>连接mysql连不上的几个可能原因：</p><ul><li>检查输入的配置信息是否出错</li><li>是否正确引入依赖</li><li>查看虚拟机mysql是否激活（如果是刚开机，虽然查询mysql状态为 active ，仍需要使用用户名和密码进入mysql一次，然后就可以解决连不上的问题）</li></ul></blockquote><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><p><strong>显示数据库</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure><p><strong>显示数据表</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//切换数据库</span><br><span class="line">use [hd];//数据库名</span><br><span class="line">show tables;</span><br></pre></td></tr></table></figure><p><strong>创建数据库</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database [库名];</span><br></pre></td></tr></table></figure><p><strong>创建表</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create table [表名] ([列名] [类型],[列名] [类型]);</span><br></pre></td></tr></table></figure><p><strong>显示表结构</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">describe [表名]</span><br></pre></td></tr></table></figure><p><strong>删除数据库</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database [库名];</span><br></pre></td></tr></table></figure><p><strong>删除表</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop table [表名];</span><br></pre></td></tr></table></figure><p><strong>清除表中记录</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from [表名];</span><br></pre></td></tr></table></figure><p><strong>向表中添加记录</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//向所有列添加记录</span><br><span class="line">insert into [表名] values([数据1]，[数据2]),([数据1]，[数据2]);</span><br><span class="line">//指定列添加记录</span><br><span class="line">insert into [表名]([列1],[列2]) values([数据1]，[数据2]),([数据1]，[数据2]);</span><br></pre></td></tr></table></figure><h2 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h2><p><strong>select显示技巧</strong></p><p>如下操作将会按照非结构化形式显示，去掉碍眼的—</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from [table name] \G</span><br></pre></td></tr></table></figure><p><strong>数据统计</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>([列名]) <span class="keyword">from</span> [表名];</span><br></pre></td></tr></table></figure><p><strong>数据查询Limit</strong></p><p>场景1：</p><p>数据增量更新，只需要第1100条之后的数据显示出来，使用总体数据量减去已有数据量，得到所需数据量</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>起始数从零开始</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> [表名] limit [起始数],[所需长度];</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> news limit <span class="number">1110</span>,<span class="number">1</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> Mysql </tag>
            
            <tag> Install </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu命令学习及大数据平台安装问题</title>
      <link href="/2022/10/26/008_Ubuntu/"/>
      <url>/2022/10/26/008_Ubuntu/</url>
      
        <content type="html"><![CDATA[<h2 id="Linux的命令"><a href="#Linux的命令" class="headerlink" title="Linux的命令"></a>Linux的命令</h2><h4 id="ubuntu技巧"><a href="#ubuntu技巧" class="headerlink" title="ubuntu技巧"></a>ubuntu技巧</h4><p><strong>自动补全</strong></p><p>[TAB] 输入文件名时输入前面部分，后自动补全，再次按下会显示文件子目录</p><h4 id="刷新文件"><a href="#刷新文件" class="headerlink" title="刷新文件"></a><strong>刷新文件</strong></h4><p>令其立即生效，而不必注销</p><blockquote><p>可能有些情况下还是需要重新启动</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h4 id="移动文件"><a href="#移动文件" class="headerlink" title="移动文件"></a><strong>移动文件</strong></h4><p>将文件1移动到文件2的位置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo mv [文件1] [文件2]</span><br><span class="line">//example</span><br><span class="line">sudo mv scala.tgz /app //将当前文件夹下的scala.tgz文件移动到/app文件夹下</span><br></pre></td></tr></table></figure><h4 id="查看防火墙状态"><a href="#查看防火墙状态" class="headerlink" title="查看防火墙状态"></a><strong>查看防火墙状态</strong></h4><ul><li>inactive 关闭</li><li>active 开启</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw status</span><br></pre></td></tr></table></figure><h4 id="Tar打包命令"><a href="#Tar打包命令" class="headerlink" title="Tar打包命令"></a><strong>Tar打包命令</strong></h4><p>在Linux平台，tar是主要的打包工具。tar命令通常用来把文件和目录压缩为一个文件（ tarball 或 tar, gzip 和 bzip）。</p><p>Tar选项：</p><ul><li>c – 创建压缩文件</li><li>x – 解压文件</li><li>v – 显示进度.</li><li>f – 文件名.</li><li>t – 查看压缩文件内容.</li><li>j – 通过bzip2归档</li><li>z –通过gzip归档</li><li>r – 在压缩文件中追加文件或目录</li><li>W – 验证压缩文件</li></ul><h4 id="设置主机名hostname"><a href="#设置主机名hostname" class="headerlink" title="设置主机名hostname"></a>设置主机名hostname</h4><p><strong>查看主机名</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostname</span><br></pre></td></tr></table></figure><p>如果修改当前机器名称，需修改/etc/hostname，并需要修改权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//在/etc文件夹下</span><br><span class="line">chmod 777 hostname</span><br><span class="line">//修改hostname文件</span><br><span class="line">vim hostname</span><br><span class="line">//修改之后重启生效</span><br></pre></td></tr></table></figure><h4 id="移动文件-1"><a href="#移动文件-1" class="headerlink" title="移动文件"></a>移动文件</h4><p>移动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mv [文件] [路径]</span><br></pre></td></tr></table></figure><p>移动并命名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mv [文件] [路径]/命名</span><br></pre></td></tr></table></figure><h4 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h4><p>复制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp [文件] [路径]</span><br></pre></td></tr></table></figure><p>复制并命名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp [文件] [路径]/命名</span><br></pre></td></tr></table></figure><blockquote><p>当前路径下有一个workers文件，复制到当前路径下并命名</p><p><code>cp workers work</code></p></blockquote><h4 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf [文件名]</span><br></pre></td></tr></table></figure><h4 id="修改用户及用户组"><a href="#修改用户及用户组" class="headerlink" title="修改用户及用户组"></a>修改用户及用户组</h4><blockquote><p>hd为用户名及用户组名</p><p>用户名和用户组名是相同的，因为是系统的第一个用户</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R hd:hd [文件]/</span><br></pre></td></tr></table></figure><h2 id="Vim命令"><a href="#Vim命令" class="headerlink" title="Vim命令"></a>Vim命令</h2><p><strong>替换</strong></p><p>:s 命令用来查找和替换字符串，语法为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:&#123;作用范围&#125;s/&#123;目标&#125;/&#123;替换&#125;/&#123;替换标志&#125;</span><br></pre></td></tr></table></figure><p>例如<code>:%s/foo/bar/g</code>会在全局范围(<code>%</code>)查找<code>foo</code>并替换为<code>bar</code>，所有出现都会被替换（<code>g</code>）。</p><blockquote><p>替换选取里的文字，选中后会自动补全，输入命令后替换选取里查找到的文字</p></blockquote><p>当前行<code>.</code>与接下来两行<code>+2</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:.,+2s/foo/bar/g</span><br></pre></td></tr></table></figure><p>空替换标志表示只替换从光标位置开始，目标的第一次出现：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">:%s/foo/bar</span></span><br></pre></td></tr></table></figure><h2 id="ubuntu-20-04-国内源"><a href="#ubuntu-20-04-国内源" class="headerlink" title="ubuntu 20.04 国内源"></a>ubuntu 20.04 国内源</h2><p>直接在 software&amp;updates 选择国内源进行apt-get update</p><h2 id="共享文件夹"><a href="#共享文件夹" class="headerlink" title="共享文件夹"></a>共享文件夹</h2><p><strong>创建</strong></p><ol><li>虚拟机 &gt; 设置</li><li>选项（硬件选项卡旁）</li><li>共享文件夹设置为总是启用</li><li>按照向导设置本地文件夹地址</li></ol><p><strong>使用</strong></p><p>虚拟机下的位置：<code>/mnt/hgfs/[设置的文件夹名称]/</code></p><p><strong>问题</strong></p><p>如果在解压文件的时候莫名报错，把文件从文件里移到ubuntu里解压就好了。</p><h2 id="文件创建"><a href="#文件创建" class="headerlink" title="文件创建"></a>文件创建</h2><p>在当前工作目录底细新建一个文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch [文件名.后缀]</span><br></pre></td></tr></table></figure><p><strong>vim</strong>命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim [文件名.后缀]</span><br></pre></td></tr></table></figure><blockquote><p>目前遇到的问题：</p><p>如果共享文件夹遇到不能用或找不到的问题，在选项卡里 禁用 确定之后，再次开启就可以使用了</p></blockquote><h2 id="ssh三台机器互联"><a href="#ssh三台机器互联" class="headerlink" title="ssh三台机器互联"></a>ssh三台机器互联</h2><blockquote><p>用户名为 hd</p><p>三台机器名为:hadoop1(2/3)</p><p>每台机器的hosts文件都已经被修改，记录了机器的ip</p></blockquote><p><strong>每台机器都生成一个密钥</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><blockquote><p>输入命令之后一路回车</p><p>存储位置会显示在第一个回车处</p></blockquote><p><strong>合成三个公钥</strong></p><blockquote><p>第一台机器：hadoop1</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh hadoop1 cat /home/hd/.ssh/id_rsa.pub&gt;authorized_keys</span><br></pre></td></tr></table></figure><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2022/10/26_17_20_6_image-20221026172000350.png" alt="image-20221026172000350"></p><p><strong>复制authorized_keys到其他节点</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp authorized_keys hd@hadoop2:/home/pf/.ssh</span><br><span class="line">scp authorized_keys hd@hadoop3:/home/pf/.ssh</span><br></pre></td></tr></table></figure><p><strong>无密码登录</strong></p><p>在每台机器上使用命令 进行登录连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh hadoop2 date</span><br><span class="line">ssh hadoop3 date</span><br><span class="line">ssh hadoop1 date</span><br></pre></td></tr></table></figure><blockquote><p>每台机器都使用一次这三台命令，会有提示建立链接</p></blockquote><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/pictures/2022/10/26_18_58_52_image-20221026185848317.png" alt="image-20221026185848317"></p><p>每条命令成功后都会返回被链接机器的时间</p><p><strong>重点</strong></p><p>之后需要将其他机器的公钥全部添加到authorized_keys中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat id_rsa.pub &gt;&gt; authorized_keys</span><br></pre></td></tr></table></figure><blockquote><p>第一台机器生成<code>authorized_keys</code>之后，将其发给第二台机器，第二台添加上公钥之后，发给第三台，直到最后一台添加上公钥之后，将所有的已经添加好的公钥文件发给其他的机器上</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp authorized_keys hd@hadoop3:/home/pf/.ssh</span><br></pre></td></tr></table></figure><p>最后达到免输密码的效果。</p><p><strong>scp问题</strong></p><p>scp 出现 Permission denied, please try again 的解决办法</p><p>这是 ssh 的权限问题，修改权限即可，进入到目标主机，如：hadoop2 或 hadoop3 的/etc/ssh 文件夹下，用 root 权限修改文件 sshd_config，将PermitRootLogin prohibit-password 改为 PermitRootLogin yes，然后重启sshd 服务。</p><blockquote><p>进入/etc/ssh文件夹下</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim sshd_config</span><br></pre></td></tr></table></figure><p>修改为<code>PermitRootLogin yes</code>,如果没有则添加上这一行</p><p>重启服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service ssh restart</span><br></pre></td></tr></table></figure><h2 id="Java的安装"><a href="#Java的安装" class="headerlink" title="Java的安装"></a>Java的安装</h2><blockquote><p>Java对大小写的要求比较严格，大小写错误将会导致不可用</p></blockquote><p><strong>配置环境变量</strong></p><p>root权限执行命令 <code>vim /etc/profile</code> ,加上以下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#set java environment</span><br><span class="line">export JAVA_HOME=/app/jdk1.8.0_221 //为解压好的文件地址</span><br><span class="line">export JRE_HOME=/app/jdk1.8.0_221/jre</span><br><span class="line">export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH:/sbin:$PATH</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br></pre></td></tr></table></figure><p><strong>命令行使配置生效</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//root下</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p><strong>命令行查看是否生效</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Java -version</span><br><span class="line">//显示版本则说明正常生效</span><br><span class="line">which java</span><br><span class="line">//显示java安装路径</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：</strong> <strong>/etc/profile</strong> <strong>是所有用户的环境变量，</strong> <strong>/etc/enviroment</strong> 是系统的环境变量。 登陆系统时<strong>shell</strong> **读取的顺序应该是 ：<code>/etc/profile -&gt;/etc/enviroment --&gt;$HOME/.profile --&gt;$HOME/.env</code></p></blockquote><h2 id="Scala的安装"><a href="#Scala的安装" class="headerlink" title="Scala的安装"></a>Scala的安装</h2><p><strong>环境变量的配置</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export SCALA_HOME=/app/scala-2.12.14</span><br><span class="line">export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$SCALA_HOME/bin:$PATH:/bin:$PATH</span><br></pre></td></tr></table></figure><h2 id="Hadoop安装"><a href="#Hadoop安装" class="headerlink" title="Hadoop安装"></a>Hadoop安装</h2><p><strong>问题</strong></p><p>解压文件时报错误为：tar: Exiting with failure status due to previous errors</p><p><strong>解决</strong></p><p>检查解压的目录是否为共享文件夹，转移文件到ubuntu的其他文件夹下，用sudo权限进行解压即可</p><h2 id="Hadoop开启"><a href="#Hadoop开启" class="headerlink" title="Hadoop开启"></a>Hadoop开启</h2><p><strong>启动HDFS</strong></p><blockquote><p>hadoop目录：</p><p>/app/hadoop-3.3.4目录下</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sbin/start-dfs.sh</span><br></pre></td></tr></table></figure><blockquote><p>输入jps查看是否启动相应服务</p><p>输出：</p><ul><li>SecondaryNameNode</li><li>Jps</li><li>DataNode</li><li>NameNode</li></ul><p>子节点输出为：</p><ul><li>Jps</li><li>DataNode</li></ul></blockquote><p><strong>启动yarn</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sbin/start-yarn.sh</span><br></pre></td></tr></table></figure><blockquote><p>输入jps查看是否启动相应服务</p><p>输出：</p><ul><li>ResourceManager</li><li>以及之前启动的服务</li></ul><p>子节点输出为：</p><ul><li>NodeManager</li><li>以及之前启动的服务</li></ul></blockquote><h2 id="Hadoop关闭"><a href="#Hadoop关闭" class="headerlink" title="Hadoop关闭"></a>Hadoop关闭</h2><blockquote><p>hadoop的目录下：</p><p>/app/hadoop-3.3.4目录下</p></blockquote><p>第一种：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sbin/stop-all.sh</span><br></pre></td></tr></table></figure><p>第二种：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sbin/stop-yarn.sh</span><br><span class="line">sbin/stop-dfs.sh</span><br></pre></td></tr></table></figure><blockquote><p>输入jps进行检查：</p><p>输出：</p><ul><li>Jps</li></ul><p>关闭成功</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> Hadoop </tag>
            
            <tag> Scala </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第三人称视角摄像机和Ai跟随</title>
      <link href="/2022/07/24/006_ThirdPersonCharacter/"/>
      <url>/2022/07/24/006_ThirdPersonCharacter/</url>
      
        <content type="html"><![CDATA[<h1 id="Third-Person-Character"><a href="#Third-Person-Character" class="headerlink" title="Third Person Character"></a>Third Person Character</h1><h1 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h1><p>使用Cinemachine的 Freelook 相机进行人物第三人称，使用到的插件和素材分别有，Cinemachine，Asset Store里的Basic motion</p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/006_Third_001.png" alt="Untitled"></p><p>将素材导入到Project中，人物拖进Hierarchy里，并生成Perfab。为人物添加Animation Controller 创建一个BlendTree控制人物站立行走跑步的动画。最终效果如下图。</p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/006_Third_002.png" alt="Untitled"></p><p>创建一个行走的地面，hierarchy 窗口里直接创建 3D plane 设置scale的x和z为20，场景为白色。生成一个material ，名字为Ground，选择适合的颜色并设置Albedo为棋盘格，拖拽Ground到刚创建的地面里，为地面添加材质。添加之后发现平铺效果不尽人意，返回Ground设置第一个Tilling的X值和Y值为5或10。这样就生成了一个标准的棋盘样式地面。</p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/006_Third_003.png" alt="Untitled"></p><h1 id="添加摄像机"><a href="#添加摄像机" class="headerlink" title="添加摄像机"></a>添加摄像机</h1><p>unity上方选择Cinemachine里的FreeLook摄像机，绑定摄像机的Follow at和Look at为Player。根据个人习惯调整X Axis 以及Y Axis的 Input Axis value的Invert（反转）。设置Orbits的Toprig，MiddleRig以及BottomRig的Height和Radius，这三个分别为上中下三个旋转圈的高度以及半径。</p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/006_Third_004.png" alt="Untitled"></p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/006_Third_005.png" alt="Untitled"></p><p>接下俩设置Aim一的Tracked Object Offset，这个数值为偏移量。当摄像机处在上中下三个旋转圈的范围时，摄像机注视的中心点。设置Top，Middle，Bottom的Y值分别为 1.5，1，1.3。最终效果为下图，黄点与十字交叉中心位置的偏移</p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/006_Third_006.png" alt="Untitled"></p><p>这样一个简陋的第三人称摄像头创建结束。</p><h1 id="人物沿摄像机方向移动"><a href="#人物沿摄像机方向移动" class="headerlink" title="人物沿摄像机方向移动"></a>人物沿摄像机方向移动</h1><p>在这样的一个3D游戏中，当玩家移动摄像机时，摄像机所指向的方向便是玩家前进的方向，所以当玩家转动鼠标移动摄像机时，玩家控制的角色也应该跟随摄像机的指向方向进行移动或者旋转。正常设定中，当角色处于静止状态 Idle 时，转动摄像机，角色不应该发生旋转。</p><p><strong>PlayerInput</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerInput</span> : <span class="title">MonoBehaviour</span>, <span class="title">IInput</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Action&lt;Vector2&gt; OnMovementInput &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> Action&lt;Vector3&gt; OnMovementDirectionInput &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//锁定光标到游戏窗口的中心。同时隐藏了硬件光标</span></span><br><span class="line">        Cursor.lockState = CursorLockMode.Locked;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        GetMovementInput();</span><br><span class="line">        GetMovementDirectionInput();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">GetMovementInput</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Vector2 input = <span class="keyword">new</span> Vector2(Input.GetAxis(<span class="string">&quot;Horizontal&quot;</span>), Input.GetAxis(<span class="string">&quot;Vertical&quot;</span>));</span><br><span class="line">        OnMovementInput?.Invoke(input);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">GetMovementDirectionInput</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> cameraForwardDirection = Camera.main.transform.forward;</span><br><span class="line">        Debug.DrawRay(Camera.main.transform.position, cameraForwardDirection * <span class="number">10</span>, Color.red);</span><br><span class="line">        <span class="comment">//对应值相乘，转化为xz平面的向量</span></span><br><span class="line">        Vector3 directionToMoveIn = Vector3.Scale(cameraForwardDirection, (Vector3.right + Vector3.forward));</span><br><span class="line">        Debug.DrawRay(Camera.main.transform.position, directionToMoveIn * <span class="number">10</span>, Color.blue);</span><br><span class="line">        OnMovementDirectionInput?.Invoke(directionToMoveIn);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>AgentController</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AgentController</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    IInput input;</span><br><span class="line">    AgentMovement agentMovement;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnEnable</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        input = GetComponent&lt;IInput&gt;();</span><br><span class="line">        agentMovement = GetComponent&lt;AgentMovement&gt;();</span><br><span class="line">        input.OnMovementInput += agentMovement.HandleMovement;</span><br><span class="line">        input.OnMovementDirectionInput += agentMovement.HandleMovementDirection;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDisable</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        input.OnMovementInput -= agentMovement.HandleMovement;</span><br><span class="line">        input.OnMovementDirectionInput -= agentMovement.HandleMovementDirection;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>interface IInput</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IInput</span></span><br><span class="line">&#123;</span><br><span class="line">    Action&lt;Vector3&gt; OnMovementDirectionInput &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    Action&lt;Vector2&gt; OnMovementInput &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>AgentMovement</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AgentMovement</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    CharacterController controller;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> rotationSpeed, movementSpeed, gravity = <span class="number">20f</span>;</span><br><span class="line">    Vector3 movementVector = Vector3.zero;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> desiredRotationAngle = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    Animator animator;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        controller = GetComponent&lt;CharacterController&gt;();</span><br><span class="line">        animator = GetComponent&lt;Animator&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (controller.isGrounded)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//获取向量到原点的长度</span></span><br><span class="line">            <span class="keyword">if</span> (movementVector.magnitude &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">var</span> animationSpeedMultiplier = SetCorrectAnimation();</span><br><span class="line">                RotateAgent();</span><br><span class="line">                <span class="comment">//用currentAnimatorSpeed限制移动速度，使旋转时速度慢</span></span><br><span class="line">                movementVector *= animationSpeedMultiplier;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//重力作用</span></span><br><span class="line">        movementVector.y -= gravity;</span><br><span class="line">        Debug.Log(movementVector);</span><br><span class="line">        controller.Move(movementVector*Time.deltaTime);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleMovement</span>(<span class="params">Vector2 input</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (controller.isGrounded)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (input.y &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                movementVector = transform.forward * movementSpeed;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                movementVector = Vector3.zero;</span><br><span class="line">                animator.SetFloat(<span class="string">&quot;move&quot;</span>, <span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleMovementDirection</span>(<span class="params">Vector3 direction</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        desiredRotationAngle = Vector3.Angle(transform.forward, direction);</span><br><span class="line">        <span class="comment">//判断旋转左右</span></span><br><span class="line">        <span class="keyword">var</span> crossProduct = Vector3.Cross(transform.forward, direction).y;</span><br><span class="line">        <span class="keyword">if</span> (crossProduct &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            desiredRotationAngle *= <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">RotateAgent</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//出现一个情况 当角度小于10的时候并不会发生旋转</span></span><br><span class="line">        <span class="keyword">if</span> (desiredRotationAngle &gt; <span class="number">10</span> || desiredRotationAngle &lt; <span class="number">-10</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            transform.Rotate(Vector3.up*desiredRotationAngle*rotationSpeed*Time.deltaTime);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">float</span> <span class="title">SetCorrectAnimation</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">float</span> currentAnimationSpeed = animator.GetFloat(<span class="string">&quot;move&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (desiredRotationAngle &gt; <span class="number">10f</span> || desiredRotationAngle &lt; <span class="number">-10f</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//判断是不是起步状态</span></span><br><span class="line">            <span class="keyword">if</span> (currentAnimationSpeed &lt; <span class="number">0.2f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                currentAnimationSpeed += Time.deltaTime * <span class="number">2</span>;</span><br><span class="line">                currentAnimationSpeed = Mathf.Clamp(currentAnimationSpeed, <span class="number">0</span>, <span class="number">0.2f</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            animator.SetFloat(<span class="string">&quot;move&quot;</span>, currentAnimationSpeed);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (currentAnimationSpeed &lt; <span class="number">1f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                currentAnimationSpeed += Time.deltaTime * <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                currentAnimationSpeed = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            animator.SetFloat(<span class="string">&quot;move&quot;</span>, currentAnimationSpeed);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> currentAnimationSpeed;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Ai简易跟随"><a href="#Ai简易跟随" class="headerlink" title="Ai简易跟随"></a>Ai简易跟随</h1><p>AI和人物角色使用的一个perfab，所以只修改了一个脚本<code>PlayerInput</code>修改为<code>SimpleAi</code></p><p><strong>SimpleAi</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SimpleAi</span> : <span class="title">MonoBehaviour</span>,<span class="title">IInput</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Action&lt;Vector3&gt; OnMovementDirectionInput &#123; <span class="keyword">get</span> ; <span class="keyword">set</span> ; &#125;</span><br><span class="line">    <span class="keyword">public</span> Action&lt;Vector2&gt; OnMovementInput &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">bool</span> playerDetectionResult;</span><br><span class="line">    <span class="keyword">public</span> Transform eyeTransform;</span><br><span class="line">    Transform playerTransfrom;</span><br><span class="line">    <span class="keyword">public</span> LayerMask playerLayer;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> visionDistance, stopDistance = <span class="number">2f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        playerDetectionResult = DetectPlayer();</span><br><span class="line">        <span class="keyword">if</span> (playerDetectionResult)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> directionToPlayer=playerTransfrom.position - eyeTransform.position;</span><br><span class="line">            directionToPlayer = Vector3.Scale(directionToPlayer, Vector3.forward + Vector3.right);</span><br><span class="line">            <span class="keyword">if</span> (directionToPlayer.magnitude &gt; stopDistance)</span><br><span class="line">            &#123;</span><br><span class="line">                directionToPlayer.Normalize();</span><br><span class="line">                OnMovementInput?.Invoke(Vector2.up);</span><br><span class="line">                OnMovementDirectionInput?.Invoke(directionToPlayer);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">            OnMovementInput?.Invoke(Vector2.zero);</span><br><span class="line">            OnMovementDirectionInput?.Invoke(transform.forward);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">DetectPlayer</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Collider[] colliders = Physics.OverlapSphere(eyeTransform.position, visionDistance,playerLayer);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> colliders)</span><br><span class="line">        &#123;</span><br><span class="line">            playerTransfrom = item.transform;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        playerTransfrom = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDrawGizmos</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Gizmos.color = Color.green;</span><br><span class="line">        <span class="keyword">if</span>(playerDetectionResult)</span><br><span class="line">            Gizmos.color=Color.red;</span><br><span class="line">        Gizmos.DrawWireSphere(eyeTransform.position, visionDistance);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Games </tag>
            
            <tag> 游戏制作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>迷失岛面试题</title>
      <link href="/2022/06/20/005_Mishidao/"/>
      <url>/2022/06/20/005_Mishidao/</url>
      
        <content type="html"><![CDATA[<h1 id="Introduce"><a href="#Introduce" class="headerlink" title="Introduce"></a>Introduce</h1><p>首先还是要感谢麦扣老师，<a href="https://www.bilibili.com/video/BV1vY4y1W7YD/?spm_id_from=333.788&vd_source=cb5794df42f8077181bc5f31958ae7df">视频链接</a>。</p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/image-20220620135717244.png" alt="image-20220620135717244"></p><p>这是一道为期一周的面试题，包含了许多功能，我觉得游戏的主要目的并不是说把功能实现的多么完美，当然也是需要的，更多的是可拓展性，在当前的框架下可以延续出更多的功能。这才是这个面试题的精髓，而且也与我目前需要学习的游戏框架搭建和理念算是不谋而合吧。</p><p>接下来我会根据我学习的然后对这个游戏框架进行解析，如有缺漏或者是错误，请见谅。</p><h1 id="1-场景转换"><a href="#1-场景转换" class="headerlink" title="1.场景转换"></a>1.场景转换</h1><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/%E5%9C%BA%E6%99%AF%E8%BD%AC%E6%8D%A2.png" alt="场景转换">在项目中一共有5个场景，通过点击箭头或物体触发碰撞转场。游戏整体还是一个通过鼠标的点击进行操作的游戏，所以各种交互或者事件都是通过鼠标的点击进行完成。比如场景转换，人物交互，物品交互以及小游戏的实现，在项目里几乎用不到键盘。所以需要一个<strong>CursorManager</strong>进行对其管理。</p><p><strong>CursorManager</strong>通过获取鼠标的世界坐标，实时监测鼠标的位置是否有碰撞体<code> private Collider2D ObjectAtMousePosition()</code>,如果返回碰撞体存在并同时触发鼠标点击操作，则调用<code>ClickAction(GameObject clickObject)</code>并使用Switch语句根据碰撞体的Tag进行不同的代码调用和操作。</p><p>场景转换的物体的Tag为<strong>Teleport</strong>，获取碰撞体上的<strong>Teleport.cs</strong>组件，调用方法<code>teleport?.TeleportToScene();</code>,这个代码是绑定在点击跳转按钮的物体上，<strong>Teleport.cs</strong>会获取当前的场景名字和想要前往的场景名字，然后将两个场景名传给单例模式下的<strong>TransitionManager</strong>。</p><blockquote><p>关于编写Unity的Attribute [SceneName]</p><p>在教程中使用的是麦扣老师提供的打包的工具或者是付费之后的源代码，为变量添加[SceneName]特性之后，设置的<strong>string</strong>变量就会变成可以选择当前已经build setting的Scence的下拉框。有效防止人工输入时候输错的可能。</p></blockquote><p><strong>TransitionManager</strong>在场景转换下主要实现了两个功能，一个是转场以及数据的保存和加载，另一个就是使用协程进行转场时的黑幕。</p><p><code>IEnumerator Fade(float targetAlpha)</code>:更改Panle的alpha值，根据传入的数字达到变黑和变透明</p><p><code>IEnumerator TransitionToScene(string from, string to)</code>:首先设置场景黑幕，然后Unload当前场景，加载传进来to的场景，设置激活场景为to场景，最后将黑幕设置为透明的。</p><h1 id="2-背包逻辑与UI"><a href="#2-背包逻辑与UI" class="headerlink" title="2.背包逻辑与UI"></a>2.背包逻辑与UI</h1><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/%E8%83%8C%E5%8C%85.png" alt="背包"></p><h1 id="3-保存物品"><a href="#3-保存物品" class="headerlink" title="3.保存物品"></a>3.保存物品</h1><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/%E4%BF%9D%E5%AD%98%E7%89%A9%E5%93%81.png" alt="保存物品"></p><h1 id="4-互动逻辑"><a href="#4-互动逻辑" class="headerlink" title="4.互动逻辑"></a>4.互动逻辑</h1><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/%E4%BA%92%E5%8A%A8%E9%80%BB%E8%BE%91.png" alt="互动逻辑"></p><h1 id="5-人物对话"><a href="#5-人物对话" class="headerlink" title="5.人物对话"></a>5.人物对话</h1><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/%E5%AF%B9%E8%AF%9D.png" alt="对话"></p><h1 id="6-小游戏"><a href="#6-小游戏" class="headerlink" title="6.小游戏"></a>6.小游戏</h1><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/%E5%B0%8F%E6%B8%B8%E6%88%8F.png" alt="小游戏"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>其实在这之后还有菜单，小程序的保存，不同周目等等。不过由于接下来还有项目要紧接着去做，这个隔了一个月的项目正式被我烂尾了。不过呢，所有的源码均已被我上传至<a href="https://github.com/XLJZT/UnityProject/tree/main/%E8%BF%B7%E5%A4%B1%E5%B2%9BIsoland">github</a>，所以如果有小伙伴想要看一下的话，可以前往查看。</p><p>之前的的六节我也用思维导图的形式给表达了出来，本着最开始的意愿，学习框架的搭建，希望会对阅读的朋友有所帮助。</p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Games </tag>
            
            <tag> 游戏制作 </tag>
            
            <tag> M_studio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对话系统——Dialog System</title>
      <link href="/2022/06/04/004_Dialog/"/>
      <url>/2022/06/04/004_Dialog/</url>
      
        <content type="html"><![CDATA[<h1 id="Introduce"><a href="#Introduce" class="headerlink" title="Introduce"></a>Introduce</h1><p>首先还是要感谢麦扣老师，<a href="https://www.bilibili.com/video/BV1WJ411Y71J/?spm_id_from=333.788.recommend_more_video.1">视频链接</a>。</p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/image-20220604181812326.png" alt="image-20220604181812326"></p><h1 id="文本读取与显示"><a href="#文本读取与显示" class="headerlink" title="文本读取与显示"></a>文本读取与显示</h1><p><strong>这是个txt文件</strong>，记录了对话的内容，根据 A or B 判断说话的人物</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">A</span><br><span class="line">1:zheshidiyijv1?</span><br><span class="line">B</span><br><span class="line">2:zheshidierjv2!!!!!</span><br><span class="line">A</span><br><span class="line">3:disanjvzaizheli.......</span><br><span class="line">B</span><br><span class="line">4:disijvyaojiehsule////</span><br><span class="line">A</span><br><span class="line">5:ending&#x27;&#x27;&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Dialog</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;组件&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> Text textLabel;</span><br><span class="line">    <span class="keyword">public</span> Image image;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;文本&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> TextAsset textAsset;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> index;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//存储文本</span></span><br><span class="line">    List&lt;<span class="built_in">string</span>&gt; textList = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        GetTextFormFilr(textAsset);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnEnable</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//当启用时，显示第一句话</span></span><br><span class="line">        textLabel.text = textList[index++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Space))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (index == textList.Count)</span><br><span class="line">            &#123;</span><br><span class="line">                gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">                index = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                textLabel.text = textList[index++];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">GetTextFormFilr</span>(<span class="params">TextAsset text</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        textList.Clear();</span><br><span class="line">        index = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//通过回车符分割</span></span><br><span class="line">        <span class="keyword">var</span> list = text.text.Split(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> list)</span><br><span class="line">        &#123;</span><br><span class="line">            textList.Add(item);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="协程逐字显示"><a href="#协程逐字显示" class="headerlink" title="协程逐字显示"></a>协程逐字显示</h1><p>使用协程，通过设置变量<code>timeSpeed</code>去设置每个字的间隔时间</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Dialog</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;组件&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> Text textLabel;</span><br><span class="line">    <span class="keyword">public</span> Image image;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;文本&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> TextAsset textAsset;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> index;</span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;头像&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> Sprite headA, headB;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> timeSpeed;</span><br><span class="line">    <span class="comment">//判断协程是否结束，防止多个协程同时出现</span></span><br><span class="line">    <span class="comment">//初始时设置为true</span></span><br><span class="line">    <span class="built_in">bool</span> textFinshed = <span class="literal">true</span>;</span><br><span class="line">    <span class="comment">//存储文本</span></span><br><span class="line">    List&lt;<span class="built_in">string</span>&gt; textList = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        GetTextFormFilr(textAsset);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnEnable</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//当启用时，显示第一句话</span></span><br><span class="line">        StartCoroutine(SetText());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Space))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (index == textList.Count)</span><br><span class="line">            &#123;</span><br><span class="line">                gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">                index = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(textFinshed)</span><br><span class="line">                StartCoroutine(SetText());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">GetTextFormFilr</span>(<span class="params">TextAsset text</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        textList.Clear();</span><br><span class="line">        index = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//通过回车符分割</span></span><br><span class="line">        <span class="keyword">var</span> list = text.text.Split(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> list)</span><br><span class="line">        &#123;</span><br><span class="line">            textList.Add(item);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">IEnumerator <span class="title">SetText</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        textFinshed = <span class="literal">false</span>;</span><br><span class="line">        <span class="comment">//清空textLabel里的文字</span></span><br><span class="line">        textLabel.text = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="comment">//这里不清楚是不是我的文本的问题，获取时总是获取到两个字符，但不知道第二个字符是什么</span></span><br><span class="line">        <span class="keyword">switch</span> (textList[index][<span class="number">0</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;A&#x27;</span>:</span><br><span class="line">                image.sprite = headA;</span><br><span class="line">                index++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;B&#x27;</span>:</span><br><span class="line">                image.sprite = headB;</span><br><span class="line">                index++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//每隔timeSpeed秒进行显示一次</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; textList[index].Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            textLabel.text += textList[index][i];</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">yield</span> <span class="keyword">return</span> <span class="keyword">new</span> <span class="title">WaitForSeconds</span>(<span class="params">timeSpeed</span>)</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//更改index值，并更改状态</span></span><br><span class="line">        index++;</span><br><span class="line">        textFinshed = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="中断协程"><a href="#中断协程" class="headerlink" title="中断协程"></a>中断协程</h1><p>通过判断输入时的状态判断，选择是否中断协程直接显示</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Dialog</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;组件&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> Text textLabel;</span><br><span class="line">    <span class="keyword">public</span> Image image;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;文本&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> TextAsset textAsset;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> index;</span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;头像&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> Sprite headA, headB;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> timeSpeed;</span><br><span class="line">    <span class="comment">//判断协程是否结束，防止多个协程同时出现</span></span><br><span class="line">    <span class="comment">//初始时设置为true</span></span><br><span class="line">    <span class="built_in">bool</span> textFinshed = <span class="literal">true</span>;</span><br><span class="line">    <span class="comment">//存储文本</span></span><br><span class="line">    List&lt;<span class="built_in">string</span>&gt; textList = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        GetTextFormFilr(textAsset);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnEnable</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//当启用时，显示第一句话</span></span><br><span class="line">        StartCoroutine(SetText());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Space))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (index &gt;= textList.Count)</span><br><span class="line">            &#123;</span><br><span class="line">                gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">                index = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (textFinshed)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//逐字显示</span></span><br><span class="line">                StartCoroutine(SetText());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (!textFinshed)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//结束协程，直接显示</span></span><br><span class="line">                StopCoroutine(SetText());</span><br><span class="line">                textFinshed = <span class="literal">true</span>;</span><br><span class="line">                </span><br><span class="line">                textLabel.text = textList[index];</span><br><span class="line">                index++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">GetTextFormFilr</span>(<span class="params">TextAsset text</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        textList.Clear();</span><br><span class="line">        index = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//通过回车符分割</span></span><br><span class="line">        <span class="keyword">var</span> list = text.text.Split(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> list)</span><br><span class="line">        &#123;</span><br><span class="line">            textList.Add(item);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">IEnumerator <span class="title">SetText</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        textFinshed = <span class="literal">false</span>;</span><br><span class="line">        <span class="comment">//清空textLabel里的文字</span></span><br><span class="line">        textLabel.text = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="comment">//这里不清楚是不是我的文本的问题，获取时总是获取到两个字符，但不知道第二个字符是什么</span></span><br><span class="line">        <span class="keyword">switch</span> (textList[index][<span class="number">0</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;A&#x27;</span>:</span><br><span class="line">                image.sprite = headA;</span><br><span class="line">                index++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;B&#x27;</span>:</span><br><span class="line">                image.sprite = headB;</span><br><span class="line">                index++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//每隔timeSpeed秒进行显示一次</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; textList[index].Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            textLabel.text += textList[index][i];</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">yield</span> <span class="keyword">return</span> <span class="keyword">new</span> <span class="title">WaitForSeconds</span>(<span class="params">timeSpeed</span>)</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//更改index值，并更改状态</span></span><br><span class="line">        </span><br><span class="line">        textFinshed = <span class="literal">true</span>;</span><br><span class="line">        index++;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Games </tag>
            
            <tag> 游戏制作 </tag>
            
            <tag> M_studio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Inventory的制作</title>
      <link href="/2022/05/31/003_Inventory/"/>
      <url>/2022/05/31/003_Inventory/</url>
      
        <content type="html"><![CDATA[<h1 id="Introduce"><a href="#Introduce" class="headerlink" title="Introduce"></a>Introduce</h1><p>首先还是要感谢麦扣老师，<a href="https://www.bilibili.com/video/BV1YJ41197SU?p=2">视频链接</a>。</p><p>制作之后的(简陋)界面。</p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/image-20220603143654206.png" alt="image-20220603143654206"></p><h1 id="UI界面"><a href="#UI界面" class="headerlink" title="UI界面"></a>UI界面</h1><p><strong>UI层级</strong></p><ul><li>Canvas  <code>BagManager.cs</code><ul><li>Bag  <code>MoveBag.cs</code><ul><li>Title  标题</li><li>Exit   右上角 ”×“</li><li>Grid  物品格</li><li>Info   物品介绍</li></ul></li></ul></li></ul><blockquote><p>Grid 通过使用GridLayoutGroup组件进行排列组合</p></blockquote><p><strong>预制体Slot的制作</strong></p><p>Slot在这里作为每个格子显示的整体，移动拖拽点击显示等功能都是通过这个Slot。</p><ul><li>Slot  <code>Slot.cs</code><ul><li>Item  Button/<code>ItemOnDrag.cs</code><ul><li>ItemImage  显示的图像</li><li>Number  显示数量</li></ul></li></ul></li></ul><p><code>Slot.cs</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Slot</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> slotId;</span><br><span class="line">    <span class="keyword">public</span> Item item;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Image image;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Text num;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> GameObject itemInSlot;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> slotInfo;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ItemOnClick</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        BagManager.instance.UpdateInfo(slotInfo);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetItem</span>(<span class="params">Item item</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (item == <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            itemInSlot.SetActive(<span class="literal">false</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//赋值</span></span><br><span class="line">        image.sprite = item.sprite;</span><br><span class="line">        num.text = item.holdNum.ToString();</span><br><span class="line">        slotInfo = item.info;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="ScriptableObject存储"><a href="#ScriptableObject存储" class="headerlink" title="ScriptableObject存储"></a>ScriptableObject存储</h1><p>存储物品的属性:<code>Item.cs</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建新的菜单</span></span><br><span class="line">[<span class="meta">CreateAssetMenu(fileName = <span class="string">&quot;New Item&quot;</span>,menuName = <span class="string">&quot;Item/item&quot;</span>)</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Item</span> : <span class="title">ScriptableObject</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> _name;<span class="comment">//物品名字</span></span><br><span class="line">    <span class="keyword">public</span> Sprite sprite;<span class="comment">//物品图片</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> holdNum;<span class="comment">//持有数量</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//使得文本框变大</span></span><br><span class="line">    [<span class="meta">TextArea</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span>  info;<span class="comment">//物品介绍信息</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>背包的存储:<code>Bag.cs</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line">[<span class="meta">CreateAssetMenu(fileName =<span class="string">&quot;New Bag&quot;</span>,menuName =<span class="string">&quot;Item/bag&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Bag</span> : <span class="title">ScriptableObject</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建列表，存储物品</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Item&gt; list = <span class="keyword">new</span> List&lt;Item&gt;();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>物品添加拾取功能<code>shiqu.cs</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Shiqu</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Item item;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Bag bag;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerEnter2D</span>(<span class="params">Collider2D collision</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (collision.gameObject.CompareTag(<span class="string">&quot;Player&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//Debug.Log(&quot;item&quot; + item.holdNum);</span></span><br><span class="line">            <span class="keyword">if</span> (bag.list.Contains(item))</span><br><span class="line">            &#123;</span><br><span class="line">                item.holdNum += <span class="number">1</span>;</span><br><span class="line">                <span class="comment">//Debug.Log(&quot;bag:&quot; + bag.list[0].holdNum);</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//bag.list.Add(item);</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">//如果有空位则添加</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; bag.list.Count; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (bag.list[i] == <span class="literal">null</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        bag.list[i] = item;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Destroy(gameObject);</span><br><span class="line">        &#125;</span><br><span class="line">        BagManager.instance.Refresh();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="背包显示"><a href="#背包显示" class="headerlink" title="背包显示"></a>背包显示</h1><p>主要思想是当玩家拾取物品、打开背包之后，都会进行一次刷新。</p><p><code>BagManager.cs</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">BagManager</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BagManager instance;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Bag bag;</span><br><span class="line">    <span class="keyword">public</span> GameObject slotGrid;</span><br><span class="line">    <span class="comment">//public Slot slot;</span></span><br><span class="line">    <span class="keyword">public</span> GameObject emptySlot;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Text info;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//显示当前物品的列表，从bag里获取数据</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;GameObject&gt; slots = <span class="keyword">new</span> List&lt;GameObject&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (instance != <span class="literal">null</span>)</span><br><span class="line">            Destroy(<span class="keyword">this</span>);</span><br><span class="line">        instance = <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnEnable</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Refresh();</span><br><span class="line">        info.text = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">UpdateInfo</span>(<span class="params"><span class="built_in">string</span> itemInfo</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        info.text = itemInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*生成格子，有多少物品生成多少格子</span></span><br><span class="line"><span class="comment">    public void CreateSolt(Item item)</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        Slot newslot = Instantiate(slot, instance.slotGrid.transform.position, Quaternion.identity);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        newslot.gameObject.transform.SetParent(instance.slotGrid.transform,false);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        newslot.image.sprite = item.sprite;</span></span><br><span class="line"><span class="comment">        newslot.item = item;</span></span><br><span class="line"><span class="comment">        newslot.num.text = item.holdNum.ToString();</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Refresh</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//先清空原物品对象和存储物品数据的列表</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; slotGrid.transform.childCount; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (slotGrid.transform.childCount == <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">//删除子集的空物体</span></span><br><span class="line">            Destroy(slotGrid.transform.GetChild(i).gameObject);</span><br><span class="line">            <span class="comment">//清空列表</span></span><br><span class="line">            slots.Clear();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//重新生成</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; bag.list.Count; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//CreateSolt(bag.list[i]);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//添加空白格并设置父级</span></span><br><span class="line">            slots.Add(Instantiate(emptySlot));</span><br><span class="line">            <span class="comment">//设置false会使得加载的时候图片不被缩放</span></span><br><span class="line">            slots[i].transform.SetParent(slotGrid.transform,<span class="literal">false</span>);</span><br><span class="line">            <span class="comment">//设置图片 数量</span></span><br><span class="line">            slots[i].GetComponent&lt;Slot&gt;().SetItem(bag.list[i]);</span><br><span class="line">            <span class="comment">//设置物品的编号</span></span><br><span class="line">            slots[i].GetComponent&lt;Slot&gt;().slotId = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="物品拖拽与数据转换"><a href="#物品拖拽与数据转换" class="headerlink" title="物品拖拽与数据转换"></a>物品拖拽与数据转换</h1><p>当物品进行拖拽时，先将其父级更改为父级的父级，防止出现遮挡的问题，然后根据射线遮挡判断鼠标移动的位置。</p><blockquote><p>Slot的Item添加两个组件：</p><p>Canvas Group：BlockRaycasts开启，当鼠标移动的时候知道移动的位置</p><p>LayoutElement：IgnoreLayout开启，更改父级元素时，不会跳到进入到排序行列</p></blockquote><p><code>ItemOnDrag.cs</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="comment">//引用</span></span><br><span class="line"><span class="keyword">using</span> UnityEngine.EventSystems;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用三个接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ItemOnDrag</span> : <span class="title">MonoBehaviour</span>, <span class="title">IBeginDragHandler</span>, <span class="title">IDragHandler</span>, <span class="title">IEndDragHandler</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//移动的物体的初始父级</span></span><br><span class="line">    <span class="keyword">public</span> Transform originParent;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Bag bag;</span><br><span class="line">    <span class="built_in">int</span> currentItemId;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnBeginDrag</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        originParent = transform.parent;</span><br><span class="line">        currentItemId = originParent.GetComponent&lt;Slot&gt;().slotId;</span><br><span class="line">        <span class="comment">//更换父级，使其置于上层不被遮挡</span></span><br><span class="line">        transform.SetParent(transform.parent.parent);</span><br><span class="line">        transform.position = eventData.position;</span><br><span class="line">        <span class="comment">//修改鼠标移动的物体的遮挡属性</span></span><br><span class="line">        GetComponent&lt;CanvasGroup&gt;().blocksRaycasts = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnDrag</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        transform.position = eventData.position;</span><br><span class="line">        Debug.Log(eventData.pointerCurrentRaycast.gameObject.name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnEndDrag</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//判断是否属于设置的界面外</span></span><br><span class="line">        <span class="keyword">if</span> (eventData.pointerCurrentRaycast.gameObject != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//鼠标射线碰撞到的物体,可能碰到图片或文字</span></span><br><span class="line">            <span class="keyword">if</span> (eventData.pointerCurrentRaycast.gameObject.name == <span class="string">&quot;ItemImage&quot;</span> || eventData.pointerCurrentRaycast.gameObject.name == <span class="string">&quot;Number&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//更换鼠标移动物体的位置和父级</span></span><br><span class="line">                transform.SetParent(eventData.pointerCurrentRaycast.gameObject.transform.parent.parent);</span><br><span class="line">                transform.position = eventData.pointerCurrentRaycast.gameObject.transform.parent.parent.position;</span><br><span class="line">                <span class="comment">//更换两个物体信息</span></span><br><span class="line">                <span class="keyword">var</span> temp = bag.list[currentItemId];</span><br><span class="line">                bag.list[currentItemId] = bag.list[eventData.pointerCurrentRaycast.gameObject.GetComponentInParent&lt;Slot&gt;().slotId];</span><br><span class="line">                bag.list[eventData.pointerCurrentRaycast.gameObject.GetComponentInParent&lt;Slot&gt;().slotId] = temp;</span><br><span class="line">                <span class="comment">//更换当前鼠标位置物体的位置和父级为原物体的位置与父级</span></span><br><span class="line">                eventData.pointerCurrentRaycast.gameObject.transform.parent.position = originParent.position;</span><br><span class="line">                eventData.pointerCurrentRaycast.gameObject.transform.parent.SetParent(originParent);</span><br><span class="line"></span><br><span class="line">                GetComponent&lt;CanvasGroup&gt;().blocksRaycasts = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//如果是空值，则交换空值的位置</span></span><br><span class="line">            <span class="comment">//更换当前鼠标位置物体的位置和父级为原物体的位置与父级</span></span><br><span class="line">            <span class="comment">//eventData.pointerCurrentRaycast.gameObject.transform.GetChild(0).SetParent(originParent);</span></span><br><span class="line">            <span class="comment">//eventData.pointerCurrentRaycast.gameObject.transform.GetChild(0).position = originParent.position;</span></span><br><span class="line">            <span class="keyword">if</span> (eventData.pointerCurrentRaycast.gameObject.name == <span class="string">&quot;Slot(Clone)&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                transform.SetParent(eventData.pointerCurrentRaycast.gameObject.transform);</span><br><span class="line">                transform.position = eventData.pointerCurrentRaycast.gameObject.transform.position;</span><br><span class="line"></span><br><span class="line">                bag.list[eventData.pointerCurrentRaycast.gameObject.GetComponentInParent&lt;Slot&gt;().slotId] = bag.list[currentItemId];</span><br><span class="line">                <span class="comment">//判断是不是同一个位置</span></span><br><span class="line">                <span class="comment">//同一位置则不能设置为null</span></span><br><span class="line">                <span class="keyword">if</span> (eventData.pointerCurrentRaycast.gameObject.GetComponentInParent&lt;Slot&gt;().slotId != currentItemId)</span><br><span class="line">                    bag.list[currentItemId] = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">                GetComponent&lt;CanvasGroup&gt;().blocksRaycasts = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果是则返回原位置</span></span><br><span class="line">        transform.SetParent(originParent);</span><br><span class="line">        transform.position = originParent.position;</span><br><span class="line">        GetComponent&lt;CanvasGroup&gt;().blocksRaycasts = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="窗口移动"><a href="#窗口移动" class="headerlink" title="窗口移动"></a>窗口移动</h1><p><code>MoveBag.cs</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.EventSystems;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MoveBag</span> : <span class="title">MonoBehaviour</span>,<span class="title">IDragHandler</span></span><br><span class="line">&#123;</span><br><span class="line">    RectTransform rectTransform;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        rectTransform = GetComponent&lt;RectTransform&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnDrag</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//移动anchor为鼠标移动的距离</span></span><br><span class="line">        <span class="comment">//调试的时候可能会不跟手，build之后不会出现这种情况</span></span><br><span class="line">        rectTransform.anchoredPosition += eventData.delta;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Games </tag>
            
            <tag> 游戏制作 </tag>
            
            <tag> M_studio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3DURP游戏制作笔记</title>
      <link href="/2022/05/10/002_unityRpg/"/>
      <url>/2022/05/10/002_unityRpg/</url>
      
        <content type="html"><![CDATA[<h1 id="3DURP游戏制作笔记"><a href="#3DURP游戏制作笔记" class="headerlink" title="3DURP游戏制作笔记"></a>3DURP游戏制作笔记</h1><blockquote><p>感谢麦扣老师！！！</p><p><a href="https://space.bilibili.com/370283072">b站地址</a></p><p>这些是我跟着学习敲得代码，有些可能不一样，完全复制肯定会有问题，主要用来给学习的同学纠错</p></blockquote><h3 id="游戏的创建与地图的铺设"><a href="#游戏的创建与地图的铺设" class="headerlink" title="游戏的创建与地图的铺设"></a>游戏的创建与地图的铺设</h3><p>使用到的插件有<strong>Pro Grids</strong>,<strong>ProBuilder</strong>,<strong>PloyBrush</strong></p><ol><li><p>使用到的地图模板为正常模板，然后在Project文件夹中新建URP。</p></li><li><p>右上角Edit &gt; Project Setting</p><ol><li>将Graphics的Scirptable Render Pipeline Settings修改为创建的<strong>UniversalRenderPiepelineAsset</strong></li><li>Quality的Rendering修改为创建的<strong>UniversalRenderPiepelineAsset</strong></li></ol></li><li><p>使用素材时，升级素材的URP。Edit &gt; Render Pipeline &gt; Universal Render Pipeline &gt; Upgrade Project Materials To UniversalRP Materials</p></li><li><p>光照的设置 Windows &gt; Rendering &gt;Lighting。在Scene窗口生成一个New Lighting Settings。Lighting Mode一般为Baked Indirect（简介烘焙），Lightmapper一般选择为GPU，取消勾选Auto Generate，然后进行Generate Lighting。</p><blockquote><p>如果发生场景颜色发生改变，不是原本的颜色，可以在Lighting &gt; Environment里选择 Environment Lighting &gt; Source 设置为Color。</p></blockquote></li><li><p>调整摄像机的技巧：Ctrl + Shift + F，调整物体坐标轴吸附 V键。</p></li><li><p>导入插件<strong>PloyBrush</strong>并且在导入时将Sample中的URP文件一并导入。 </p><blockquote><p>使用Ploybrush的笔刷刷颜色的时候，发现刷不上颜色的原因是，物体的材质并没有使用Ploybrush的shader创建的材质，用shader创建一个新的材质并修改物体的材质（拖拽也可以），然后进行颜色的涂抹</p></blockquote></li><li><p>平台的大小和少数的顶点影响了地图的创作，所以需要<strong>Probuilder</strong>来生成更精致的地图平台</p><blockquote><p>同时按住<strong>Ctrl</strong>和<strong>Alt</strong>键点击Icon的齿轮，会调出单独的设置</p><p>使用<strong>Center Pivot</strong>可以调整中心点</p><p>关于如何使用preview package：Edit &gt; Project Setting &gt; Package manager ,<strong>Enable Preview Packages</strong></p></blockquote></li></ol><h3 id="地图的烘Bake"><a href="#地图的烘Bake" class="headerlink" title="地图的烘Bake"></a>地图的烘Bake</h3><p>窗口在 Window &gt; AI &gt; Navigation</p><ol><li><p>设置地面为Navigation static，在Navigation &gt; Object里的Navigation Area 设置为Walkable。</p><blockquote><ul><li>选中物体之后，在Inspector窗口里，第一行有选择是否为Static，下拉可选择类型</li><li>选中物体之后，在Navigation &gt; Object里设置Navigation static为<strong>true</strong></li></ul></blockquote></li><li><p>选中不可移动的物体，比如树木石头等，批量设置为Navigation static，特殊的除外。</p></li><li><p>为角色添加Navigation agent 组件，设置人物的圆柱体大小以及宽度。</p></li><li><p>在Navigation &gt; Bake 里同样设置为人物的圆柱体大小以及宽度等其他数据，然后点击bake，在地图上显示为蓝色的为可walk区域。</p></li><li><p>如果有物体可以移动，并且不想发生穿模效果，可选择添加组件Nav Mesh Obstacle,设置Carve为<strong>True</strong>，就会在地面同时切割出一部分，人物不可walk的区域。</p></li></ol><h3 id="鼠标控制移动以及贴图"><a href="#鼠标控制移动以及贴图" class="headerlink" title="鼠标控制移动以及贴图"></a>鼠标控制移动以及贴图</h3><p><strong>所有管理类都不要忘了在游戏里创建一个空对象，添加上脚本</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MouseManager</span> : <span class="title">SingleTon</span>&lt;<span class="title">MouseManager</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//事务委托</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">event</span> Action&lt;Vector3&gt; OnMouseClicked;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">event</span> Action&lt;GameObject&gt; OnClickedEnemy;</span><br><span class="line"></span><br><span class="line">    RaycastHit hitInfo;</span><br><span class="line"><span class="comment">//鼠标贴图</span></span><br><span class="line">    <span class="keyword">public</span> Texture2D point, doorway, attack, target, arrow;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Awake();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        SetCursorTexture();</span><br><span class="line">        MouseControl();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SetCursorTexture</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);</span><br><span class="line">        <span class="keyword">if</span>(Physics.Raycast(ray,<span class="keyword">out</span> hitInfo))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//切换鼠标贴图</span></span><br><span class="line">            <span class="keyword">switch</span> (hitInfo.collider.gameObject.tag)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;Ground&quot;</span>:</span><br><span class="line">                    Cursor.SetCursor(target, <span class="keyword">new</span> Vector2(<span class="number">16</span>, <span class="number">16</span>),CursorMode.Auto);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;Enemy&quot;</span>:</span><br><span class="line">                    Cursor.SetCursor(attack, <span class="keyword">new</span> Vector2(<span class="number">2</span>, <span class="number">2</span>), CursorMode.Auto);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;Attackable&quot;</span>:</span><br><span class="line">                    Cursor.SetCursor(attack, <span class="keyword">new</span> Vector2(<span class="number">2</span>, <span class="number">2</span>), CursorMode.Auto);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;Portal&quot;</span>:</span><br><span class="line">                    Cursor.SetCursor(doorway, <span class="keyword">new</span> Vector2(<span class="number">2</span>, <span class="number">2</span>), CursorMode.Auto);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">MouseControl</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetMouseButtonDown(<span class="number">0</span>) &amp;&amp; hitInfo.collider != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (hitInfo.collider.gameObject.CompareTag(<span class="string">&quot;Ground&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                OnMouseClicked?.Invoke(hitInfo.point);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (hitInfo.collider.gameObject.CompareTag(<span class="string">&quot;Enemy&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                OnClickedEnemy?.Invoke(hitInfo.collider.gameObject);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (hitInfo.collider.gameObject.CompareTag(<span class="string">&quot;Attackable&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                OnClickedEnemy?.Invoke(hitInfo.collider.gameObject);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (hitInfo.collider.gameObject.CompareTag(<span class="string">&quot;Portal&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                OnMouseClicked?.Invoke(hitInfo.point);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>关于鼠标的贴图</strong></p><p>鼠标贴图为<strong>Texture</strong>,一般为无背景的图片，加载到Unity之后，选中贴图并把Texture type修改为<strong>Cursor</strong>。</p><h3 id="Cineramachine"><a href="#Cineramachine" class="headerlink" title="Cineramachine"></a>Cineramachine</h3><p>选中Main camera，Gameobject &gt; Align View to Selected,将主相机锁定视角</p><p>状态栏Cineramachine选择一个合适的摄像机 ，当前选择的为CinemachineVirtualCanmera,取消主摄像机的Audio Listener，Body选择Framing Transposer,Aim选择Nothing</p><p>Follow 选择为人物对象 ，如果人物坐标轴在下方，可以在人物对象里新建一个空物体，然后将坐标轴移动到人物中心位置，将物体拖拽到<strong>Follow</strong>。</p><blockquote><p><strong>BODY</strong></p><ul><li>Do Nothing：不移动虚拟相机</li><li>Framing Transposer：跟随目标移动，并在屏幕空间保持相机和跟随目标的相对位置。</li><li>Hard Lock to Target：虚拟相机和跟随目标使用相同位置。</li><li>Orbital Transposer：相机和跟随目标的相对位置是可变的，还能接收用户的输入。常见于玩家控制的相机。</li><li>Tracked Dolly：相机沿着预先设置的轨道移动。</li><li>Transposer：跟随目标移动，并在世界空间保持相机和跟随目标的相对位置固定。</li></ul><p><strong>AIM</strong></p><ul><li><p>Do Nothing: 不控制相机的旋转。</p></li><li><p>Composer: 保持目标物体在镜头内</p></li><li><p>Group Composer: 保持多个目标在镜头内</p></li><li><p>Hard Look At: 保持目标在镜头的中心</p></li><li><p>POV: 基于玩家的输入旋转相机</p></li></ul></blockquote><p><strong>添加环境迷雾</strong></p><p>Window &gt; Rendering &gt; Lighting &gt; Environment &gt; Fog设置为True</p><blockquote><p>如果Sence场景没有显示Fog，则需要在窗口中打开Fog开关</p><p>Mode：Linear 为最近最远处能见度</p></blockquote><p><strong>Global</strong> <strong>Volume</strong></p><p>对场景进行后处理，add 其他功能对场景进行渲染</p><blockquote><p>如果场景没有显示出效果，在Main Camera &gt; Rendering &gt; Post Peocessing 设置为True</p></blockquote><h3 id="遮挡剔除"><a href="#遮挡剔除" class="headerlink" title="遮挡剔除"></a>遮挡剔除</h3><p>通过<strong>Shader</strong>创建材质放入到URP的 UniversalRenderPipelineAsset_Renderer ，新建Add Renderer Feature,选择被遮挡的Layer Mask，可以多选，然后设置被遮挡后的材质，Depth设置为True，Depth Test设置为Greater。当被遮挡物体层级Greater时，显示被遮挡后的材质。</p><p>同样Add Renderer Feature，选择相同被遮挡的Layer Mask，其他不做修改，当不被遮挡时显示原有材质</p><p><strong>关于遮挡材质的制作</strong></p><p>shader创建：Project &gt; 右键 &gt; Shader &gt; URP &gt;UnLit Shader Graph</p><blockquote><p>Graph Inspector &gt; Grapj Settings &gt; Universal &gt; Alpha Clip,打开Alpha透明通道</p></blockquote><ol><li>使用Fresnel Effect 制作遮挡的效果，通过新建变量Color修改颜色。通过Multiply混合，传给Base color。</li><li>Dither制作噪点效果，新建Float修改Dither的X值，out传给Fragment &gt; Alpha通道</li><li>创建Flaot 修改Alpha Threshold。</li><li>选择Shader创建材质</li></ol><p><strong>关于鼠标射线遮挡</strong></p><ul><li>选中遮挡的物体，设置层级为Ignore Raycast</li><li>关闭遮挡物体的Mesh Collider</li></ul><h3 id="EnemyController"><a href="#EnemyController" class="headerlink" title="EnemyController"></a>EnemyController</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.AI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">enum</span> EnemyStates &#123;GUARD,PARTOL,CHASE,DEAD &#125;</span><br><span class="line"><span class="comment">//通过代码添加组件</span></span><br><span class="line">[<span class="meta">RequireComponent(typeof(NavMeshAgent))</span>]</span><br><span class="line">[<span class="meta">RequireComponent(typeof(CharacterStats))</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">EnemyController</span> : <span class="title">MonoBehaviour</span>,<span class="title">IEndGameObserver</span></span><br><span class="line">&#123;</span><br><span class="line">    NavMeshAgent agent;</span><br><span class="line">    EnemyStates enemyStates;</span><br><span class="line">    Animator anim;</span><br><span class="line">    <span class="keyword">protected</span> CharacterStats characterStats;</span><br><span class="line">    Collider coll;</span><br><span class="line">    <span class="comment">//攻击范围 </span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> sightRadius;</span><br><span class="line">    <span class="comment">//巡逻范围</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> partolRadius;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> isGuard;</span><br><span class="line">    <span class="comment">//巡逻停留时间</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> lookAtTime;</span><br><span class="line">    <span class="built_in">float</span> remainLookAtTime;</span><br><span class="line">    <span class="built_in">float</span> speed;</span><br><span class="line">    <span class="comment">//cd时间</span></span><br><span class="line">    <span class="built_in">float</span> lastAttackTime;</span><br><span class="line">    <span class="comment">//下一个前往的巡逻点</span></span><br><span class="line">    Vector3 wayPoint;</span><br><span class="line">    <span class="comment">//起始点</span></span><br><span class="line">    Vector3 guardPoint;</span><br><span class="line">    Quaternion guardRotation;</span><br><span class="line">    <span class="keyword">protected</span> GameObject attackTarget;</span><br><span class="line">    <span class="built_in">bool</span> isWalk, isChase, isFollow, isDie;</span><br><span class="line">    <span class="built_in">bool</span> playerDie;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        agent = GetComponent&lt;NavMeshAgent&gt;();</span><br><span class="line">        anim = GetComponent&lt;Animator&gt;();</span><br><span class="line">        characterStats = GetComponent&lt;CharacterStats&gt;();</span><br><span class="line">        coll = GetComponent&lt;Collider&gt;();</span><br><span class="line">        <span class="comment">//保存原有速度；</span></span><br><span class="line">        speed = agent.speed;</span><br><span class="line">        guardPoint = transform.position;</span><br><span class="line">        remainLookAtTime = lookAtTime;</span><br><span class="line">        lastAttackTime = characterStats.CoolDown;</span><br><span class="line">        guardRotation = transform.rotation;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isGuard)</span><br><span class="line">        &#123;</span><br><span class="line">            enemyStates = EnemyStates.GUARD;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            enemyStates = EnemyStates.PARTOL;</span><br><span class="line">            GetNewPartolPoint();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//将对象添加进gamemanager里，用于广播</span></span><br><span class="line">        GameManager.Instance.AddObserver(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (characterStats.CurrentHealth == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            isDie = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!playerDie)</span><br><span class="line">        &#123;</span><br><span class="line">            SwitchStates();</span><br><span class="line">            SwitchAnim();</span><br><span class="line">            <span class="keyword">if</span> (lastAttackTime &gt; <span class="number">0f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                lastAttackTime -= Time.deltaTime;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//private void OnEnable()</span></span><br><span class="line">    <span class="comment">//&#123;</span></span><br><span class="line">    <span class="comment">//    Gamemanager.Instance.AddObserver(this);</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDisable</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!GameManager.isInitialized) <span class="keyword">return</span>;</span><br><span class="line">        GameManager.Instance.RemoveObserver(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SwitchStates</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isDie)</span><br><span class="line">        &#123;</span><br><span class="line">            enemyStates = EnemyStates.DEAD;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (FindPlayer())</span><br><span class="line">        &#123;</span><br><span class="line">            enemyStates = EnemyStates.CHASE;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">switch</span> (enemyStates)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> EnemyStates.GUARD:</span><br><span class="line">                isChase = <span class="literal">false</span>;</span><br><span class="line">                isWalk = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">if</span> (transform.position!=guardPoint)</span><br><span class="line">                &#123;</span><br><span class="line">                    isWalk = <span class="literal">true</span>;</span><br><span class="line">                    agent.isStopped = <span class="literal">false</span>;</span><br><span class="line">                    agent.destination = guardPoint;</span><br><span class="line">                    <span class="keyword">if</span>(Vector3.SqrMagnitude(guardPoint - transform.position) &lt;= agent.stoppingDistance)</span><br><span class="line">                    &#123;</span><br><span class="line">                        isWalk = <span class="literal">false</span>;</span><br><span class="line">                        agent.isStopped = <span class="literal">true</span>;</span><br><span class="line">                        <span class="comment">//旋转会初始的角度</span></span><br><span class="line">                        Quaternion.Lerp(transform.rotation, guardRotation, <span class="number">0.1f</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> EnemyStates.PARTOL:</span><br><span class="line">                isChase = <span class="literal">false</span>;</span><br><span class="line">                agent.speed = speed * <span class="number">0.5f</span>;</span><br><span class="line">                <span class="keyword">if</span> (Vector3.Distance(transform.position, wayPoint) &lt;= <span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    isWalk = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">if</span> (remainLookAtTime &lt; <span class="number">0f</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        GetNewPartolPoint();</span><br><span class="line">                        remainLookAtTime = lookAtTime;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        remainLookAtTime -= Time.deltaTime;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    isWalk = <span class="literal">true</span>;</span><br><span class="line">                    agent.destination = wayPoint;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> EnemyStates.CHASE:</span><br><span class="line"></span><br><span class="line">                agent.speed = speed;</span><br><span class="line">                isWalk = <span class="literal">false</span>;</span><br><span class="line">                isChase = <span class="literal">true</span>;</span><br><span class="line">                <span class="comment">//脱战</span></span><br><span class="line">                <span class="keyword">if</span> (!FindPlayer())</span><br><span class="line">                &#123;</span><br><span class="line">                    isFollow = <span class="literal">false</span>;</span><br><span class="line">                    agent.destination = transform.position;</span><br><span class="line">                    <span class="keyword">if</span> (remainLookAtTime &gt; <span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        remainLookAtTime -= Time.deltaTime;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span> (isGuard)</span><br><span class="line">                        &#123;</span><br><span class="line">                            enemyStates = EnemyStates.GUARD;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            enemyStates = EnemyStates.PARTOL;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//追击</span></span><br><span class="line">                    isFollow = <span class="literal">true</span>;</span><br><span class="line">                    agent.isStopped = <span class="literal">false</span>;</span><br><span class="line">                    agent.destination = attackTarget.transform.position;</span><br><span class="line">                    <span class="comment">//判断是否追击到</span></span><br><span class="line">                    <span class="keyword">if</span> (TargetInAttackRange() || TargetInSkillRange())</span><br><span class="line">                    &#123;</span><br><span class="line">                        isFollow = <span class="literal">false</span>;</span><br><span class="line">                        agent.isStopped = <span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">if</span> (lastAttackTime &lt; <span class="number">0f</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            lastAttackTime = characterStats.CoolDown;</span><br><span class="line">                            <span class="comment">//暴击判断</span></span><br><span class="line">                            characterStats.isCritical = Random.<span class="keyword">value</span> &lt; characterStats.CriticalChance;</span><br><span class="line">                            </span><br><span class="line">                            Attack();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> EnemyStates.DEAD:</span><br><span class="line">                <span class="comment">//enemy死亡时不会发生继续攻击的情况</span></span><br><span class="line">                coll.enabled = <span class="literal">false</span>;</span><br><span class="line">                </span><br><span class="line">                <span class="comment">//agent.enabled = false;</span></span><br><span class="line">                <span class="comment">//设置之后不会阻挡Player行动</span></span><br><span class="line">                agent.radius = <span class="number">0f</span>;</span><br><span class="line">                Destroy(gameObject, <span class="number">2f</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="literal">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Attack</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        transform.LookAt(attackTarget.transform);</span><br><span class="line">        anim.SetBool(<span class="string">&quot;Critical&quot;</span>, characterStats.isCritical);</span><br><span class="line">        <span class="keyword">if</span> (TargetInAttackRange())</span><br><span class="line">        &#123;</span><br><span class="line">            anim.SetTrigger(<span class="string">&quot;Attack&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(TargetInSkillRange())</span><br><span class="line">        &#123;</span><br><span class="line">            anim.SetTrigger(<span class="string">&quot;Skill&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="built_in">bool</span> <span class="title">FindPlayer</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Collider[] colliderNum = Physics.OverlapSphere(transform.position, sightRadius);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">var</span> collider <span class="keyword">in</span> colliderNum)</span><br><span class="line">        &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (collider.gameObject.CompareTag(<span class="string">&quot;Player&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                attackTarget = collider.gameObject;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SwitchAnim</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        anim.SetBool(<span class="string">&quot;Walk&quot;</span>, isWalk);</span><br><span class="line">        anim.SetBool(<span class="string">&quot;Chase&quot;</span>, isChase);</span><br><span class="line">        anim.SetBool(<span class="string">&quot;Follow&quot;</span>, isFollow);</span><br><span class="line">        anim.SetBool(<span class="string">&quot;Die&quot;</span>, isDie);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDrawGizmosSelected</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//画出攻击范围圈</span></span><br><span class="line">        Gizmos.color = Color.green;</span><br><span class="line">        Gizmos.DrawWireSphere(transform.position, sightRadius);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">GetNewPartolPoint</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">float</span> ran_x = Random.Range(-partolRadius, partolRadius);</span><br><span class="line">        <span class="built_in">float</span> ran_z = Random.Range(-partolRadius, partolRadius);</span><br><span class="line">        <span class="comment">//不修改高度，防止坑坑洼洼的地面</span></span><br><span class="line">        <span class="comment">//guardPoint是为了随机在初始位置点的随机移动</span></span><br><span class="line">        wayPoint = <span class="keyword">new</span> Vector3(guardPoint.x + ran_x, transform.position.y, guardPoint.z + ran_z);</span><br><span class="line">        NavMeshHit hit;</span><br><span class="line">        <span class="comment">//NavMesh.SamplePosition（）方法的最后一位为窗口 Navigation &gt; Area的序列，从1开始</span></span><br><span class="line">        <span class="comment">//方法为 在waypoint的sightRadius范围内寻找1层级（可移动到）的点</span></span><br><span class="line">        <span class="comment">//方法返回的为True和False</span></span><br><span class="line">        wayPoint = NavMesh.SamplePosition(wayPoint, <span class="keyword">out</span> hit, sightRadius,<span class="number">1</span>) ? hit.position : transform.position;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="built_in">bool</span> <span class="title">TargetInAttackRange</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (attackTarget != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> Vector3.Distance(attackTarget.transform.position, transform.position) &lt; characterStats.AttackRange;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="built_in">bool</span> <span class="title">TargetInSkillRange</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (attackTarget != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> Vector3.Distance(attackTarget.transform.position, transform.position) &lt; characterStats.SkillRange;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Hit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (attackTarget != <span class="literal">null</span> &amp;&amp; transform.IsFacingTarget(attackTarget.transform))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> targetStats = attackTarget.GetComponent&lt;CharacterStats&gt;();</span><br><span class="line">            characterStats.TakeDamage(characterStats, targetStats);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">EndsNotify</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        isChase = <span class="literal">false</span>;</span><br><span class="line">        isWalk = <span class="literal">false</span>;</span><br><span class="line">        attackTarget = <span class="literal">null</span>;</span><br><span class="line">        playerDie = <span class="literal">true</span>;</span><br><span class="line">        anim.SetBool(<span class="string">&quot;Victory&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="PlayController"><a href="#PlayController" class="headerlink" title="PlayController"></a>PlayController</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.AI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerController</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> lastAttackTime;</span><br><span class="line">    <span class="comment">//攻击目标对象</span></span><br><span class="line">    GameObject attackTarget;</span><br><span class="line">    CharacterStats characterStats;</span><br><span class="line">    NavMeshAgent agent;</span><br><span class="line">    Animator anim;</span><br><span class="line">    <span class="built_in">bool</span> isDie;</span><br><span class="line">    <span class="built_in">float</span> stopDistance;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        agent = GetComponent&lt;NavMeshAgent&gt;();</span><br><span class="line">        anim = GetComponent&lt;Animator&gt;();</span><br><span class="line">        characterStats = GetComponent&lt;CharacterStats&gt;();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//添加事件</span></span><br><span class="line">        MouseManager.Instance.OnMouseClicked += MoveToTarget;</span><br><span class="line">        MouseManager.Instance.OnClickedEnemy += EventAttack;</span><br><span class="line">        </span><br><span class="line"><span class="comment">//注册Gamemanager的广播</span></span><br><span class="line">        GameManager.Instance.RigisterPlayer(characterStats);</span><br><span class="line">        stopDistance = agent.stoppingDistance;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        isDie = characterStats.CurrentHealth == <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (isDie)</span><br><span class="line">        &#123;</span><br><span class="line">            GameManager.Instance.NotifyObservers();</span><br><span class="line">        &#125;</span><br><span class="line">        AnimationChange();</span><br><span class="line">        <span class="keyword">if</span>(lastAttackTime&gt;<span class="number">0f</span>)</span><br><span class="line">            lastAttackTime -= Time.deltaTime;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">MoveToTarget</span>(<span class="params">Vector3 target</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isDie) <span class="keyword">return</span>;</span><br><span class="line">        agent.isStopped = <span class="literal">false</span>;</span><br><span class="line">        agent.stoppingDistance = stopDistance;</span><br><span class="line">        StopAllCoroutines();</span><br><span class="line">        agent.destination = target;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">AnimationChange</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        anim.SetFloat(<span class="string">&quot;Speed&quot;</span>, agent.velocity.sqrMagnitude);</span><br><span class="line">        anim.SetBool(<span class="string">&quot;Die&quot;</span>, isDie);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">EventAttack</span>(<span class="params">GameObject target</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isDie) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (target != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            attackTarget = target;</span><br><span class="line">            StartCoroutine(<span class="string">&quot;MoveToAttackTarget&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//动画事件</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Hit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (attackTarget.CompareTag(<span class="string">&quot;Attackable&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (attackTarget.GetComponent&lt;Rock&gt;())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//在空中也可以击飞</span></span><br><span class="line">                attackTarget.GetComponent&lt;Rock&gt;().rockStates = Rock.RockStates.HitEnemy;</span><br><span class="line">                <span class="comment">//赋予初始速度，防止fixudate时修改rock状态</span></span><br><span class="line">                attackTarget.GetComponent&lt;Rigidbody&gt;().velocity = Vector3.one;</span><br><span class="line">                attackTarget.GetComponent&lt;Rigidbody&gt;().AddForce(transform.forward * <span class="number">20f</span>,ForceMode.Impulse);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> targetStats = attackTarget.GetComponent&lt;CharacterStats&gt;();</span><br><span class="line">            characterStats.TakeDamage(characterStats, targetStats);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">IEnumerator <span class="title">MoveToAttackTarget</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        agent.stoppingDistance = characterStats.AttackRange;</span><br><span class="line">        agent.isStopped = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">while</span> (Vector3.Distance(attackTarget.transform.position, transform.position) &gt; characterStats.AttackRange)</span><br><span class="line">        &#123;</span><br><span class="line">            agent.destination = attackTarget.transform.position;</span><br><span class="line">            <span class="keyword">yield</span> <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        agent.isStopped = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (lastAttackTime &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            transform.LookAt(attackTarget.transform.position);</span><br><span class="line">            <span class="comment">//暴击率的计算</span></span><br><span class="line">            characterStats.isCritical = Random.<span class="keyword">value</span> &lt; characterStats.CriticalChance;</span><br><span class="line">            anim.SetBool(<span class="string">&quot;Critical&quot;</span>,characterStats.isCritical);</span><br><span class="line">            anim.SetTrigger(<span class="string">&quot;Attack&quot;</span>);</span><br><span class="line">            <span class="comment">//重置冷却时间</span></span><br><span class="line">            lastAttackTime = characterStats.CoolDown;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="CharacterStats"><a href="#CharacterStats" class="headerlink" title="CharacterStats"></a>CharacterStats</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CharacterStats</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">event</span> Action&lt;<span class="built_in">int</span>, <span class="built_in">int</span>&gt; UpdateHealthBarOnAttack;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Character_SO templateData;</span><br><span class="line">    <span class="keyword">public</span> Character_SO character;</span><br><span class="line">    <span class="keyword">public</span> AttackSO attackSO;</span><br><span class="line">    [<span class="meta">HideInInspector</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> isCritical;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//用模板为character生成一组数据，防止多个enemy访问同一组数据</span></span><br><span class="line">        <span class="keyword">if</span> (templateData != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            character = Instantiate(templateData);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> MaxHealth</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123; <span class="keyword">if</span> (character != <span class="literal">null</span>) &#123; <span class="keyword">return</span> character.maxHealth; &#125; <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="number">0</span>; &#125; &#125;</span><br><span class="line">        <span class="keyword">set</span> &#123; character.maxHealth = <span class="keyword">value</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> CurrentHealth</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123; <span class="keyword">if</span> (character != <span class="literal">null</span>) &#123; <span class="keyword">return</span> character.currentHealth; &#125; <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="number">0</span>; &#125; &#125;</span><br><span class="line">        <span class="keyword">set</span> &#123; character.currentHealth = <span class="keyword">value</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> BaseDefence</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123; <span class="keyword">if</span> (character != <span class="literal">null</span>) &#123; <span class="keyword">return</span> character.baseDefence; &#125; <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="number">0</span>; &#125; &#125;</span><br><span class="line">        <span class="keyword">set</span> &#123; character.baseDefence = <span class="keyword">value</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> CurrentDefence</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123; <span class="keyword">if</span> (character != <span class="literal">null</span>) &#123; <span class="keyword">return</span> character.currentDefence; &#125; <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="number">0</span>; &#125; &#125;</span><br><span class="line">        <span class="keyword">set</span> &#123; character.currentDefence = <span class="keyword">value</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> AttackRange &#123; <span class="keyword">get</span> &#123;  <span class="keyword">return</span> attackSO.attackRange; &#125; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> SkillRange &#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> attackSO.skillRange; &#125; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> CoolDown &#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> attackSO.coolDown; &#125; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> MinDamage &#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> attackSO.minDamage; &#125; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> MaxDamage &#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> attackSO.maxDamage; &#125; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> CriticalMultiplier &#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> attackSO.criticalMultiplier; &#125; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> CriticalChance &#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> attackSO.criticalChance; &#125; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">TakeDamage</span>(<span class="params">CharacterStats attacker,CharacterStats defender</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> damage = Mathf.Max(attacker.CurrentDamage() - defender.CurrentDefence, <span class="number">0</span>);</span><br><span class="line">        defender.CurrentHealth = Mathf.Max(defender.CurrentHealth - damage, <span class="number">0</span>);</span><br><span class="line">        <span class="comment">//defender受伤的动画 暴击才会有</span></span><br><span class="line">        <span class="keyword">if</span> (attacker.isCritical)</span><br><span class="line">        &#123;</span><br><span class="line">            defender.GetComponent&lt;Animator&gt;().SetTrigger(<span class="string">&quot;Hit&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//修改防御者血条</span></span><br><span class="line">        defender.UpdateHealthBarOnAttack?.Invoke(defender.CurrentHealth, defender.MaxHealth);</span><br><span class="line">        <span class="keyword">if</span> (defender.CurrentHealth &lt;= <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//更新攻击者经验</span></span><br><span class="line">            attacker.character.UpdateExp(defender.character.killPoint);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">TakeDamage</span>(<span class="params"><span class="built_in">int</span> damage,CharacterStats defender</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> currentDamage = Mathf.Max(damage - defender.CurrentDefence, <span class="number">0</span>);</span><br><span class="line">        defender.CurrentHealth = Mathf.Max(defender.CurrentHealth - currentDamage, <span class="number">0</span>);</span><br><span class="line">        UpdateHealthBarOnAttack?.Invoke(defender.CurrentHealth, defender.MaxHealth);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="built_in">int</span> <span class="title">CurrentDamage</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">float</span> damage = UnityEngine.Random.Range(MinDamage, MaxDamage); ;</span><br><span class="line">        <span class="keyword">if</span> (isCritical)</span><br><span class="line">        &#123;</span><br><span class="line">            damage *= CriticalMultiplier;</span><br><span class="line">            Debug.Log(<span class="string">&quot;暴击：&quot;</span> + damage);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">int</span>)damage;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>Character_SO</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//filename为创建的文件的文件名，menuName为文件夹目录层级名字</span></span><br><span class="line">[<span class="meta">CreateAssetMenu(fileName = <span class="string">&quot;New Data&quot;</span>, menuName = <span class="string">&quot;Character Stats/Data&quot;</span>)</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Character_SO</span> : <span class="title">ScriptableObject</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;Stats Info&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> maxHealth;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> currentHealth;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> baseDefence;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> currentDefence;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;Kill&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> killPoint;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;Level&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> currentLevel;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> maxLevel;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> baseExp;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> currentExp;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> levelBuff;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">UpdateExp</span>(<span class="params"><span class="built_in">int</span> point</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        currentExp += point;</span><br><span class="line">        <span class="keyword">if</span> (currentExp &gt;= baseExp)</span><br><span class="line">        &#123;</span><br><span class="line">            currentExp -= baseExp;</span><br><span class="line">            LevelUP();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">LevelUP</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        currentLevel = Mathf.Clamp(currentLevel + <span class="number">1</span>, <span class="number">0</span>, maxLevel);</span><br><span class="line">        baseExp += (<span class="built_in">int</span>)(baseExp * LevelMultiplier);</span><br><span class="line">        maxHealth = (<span class="built_in">int</span>)(maxHealth * LevelMultiplier);</span><br><span class="line">        currentHealth = maxHealth;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> LevelMultiplier</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123;<span class="keyword">return</span> <span class="number">1</span>+(currentLevel<span class="number">-1</span>)*levelBuff ; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>Attack_SO</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line">[<span class="meta">CreateAssetMenu(fileName =<span class="string">&quot;New Attack&quot;</span>,menuName =<span class="string">&quot;Attack/Attack Data&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AttackSO</span> : <span class="title">ScriptableObject</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;Attack Info&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> attackRange;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> skillRange;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> coolDown;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> minDamage;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> maxDamage;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> criticalMultiplier;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> criticalChance;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="泛型单例模式Singleton"><a href="#泛型单例模式Singleton" class="headerlink" title="泛型单例模式Singleton"></a>泛型单例模式Singleton</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SingleTon</span>&lt;<span class="title">T</span>&gt; : <span class="title">MonoBehaviour</span> <span class="keyword">where</span> <span class="title">T</span>:<span class="title">SingleTon</span>&lt;<span class="title">T</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> T instance;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> T Instance</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123; <span class="keyword">return</span> instance; &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (instance != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Destroy(gameObject);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            instance = (T)<span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">bool</span> isInitialized</span><br><span class="line">    &#123;</span><br><span class="line">         <span class="keyword">get</span> &#123; <span class="keyword">return</span> instance != <span class="literal">null</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="接口Observer-Pattern"><a href="#接口Observer-Pattern" class="headerlink" title="接口Observer Pattern"></a>接口Observer Pattern</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IEndGameObserver</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//只定义，不实现留给使用的实现这个方法</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">EndsNotify</span>()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="GameManger"><a href="#GameManger" class="headerlink" title="GameManger"></a>GameManger</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GameManager</span> : <span class="title">SingleTon</span>&lt;<span class="title">GameManager</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> CharacterStats playerStats;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//接口类型</span></span><br><span class="line">    List&lt;IEndGameObserver&gt; endGameObeverses = <span class="keyword">new</span> List&lt;IEndGameObserver&gt;();</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Awake();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">RigisterPlayer</span>(<span class="params">CharacterStats characterStats</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        playerStats = characterStats;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AddObserver</span>(<span class="params">IEndGameObserver observer</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        endGameObeverses.Add(observer);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">RemoveObserver</span>(<span class="params">IEndGameObserver observer</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        endGameObeverses.Remove(observer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">NotifyObservers</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//遍历添加进来的对象</span></span><br><span class="line">        <span class="comment">//挨个调用EndsNotify（）方法</span></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">var</span> observer <span class="keyword">in</span> endGameObeverses)</span><br><span class="line">        &#123;</span><br><span class="line">            observer.EndsNotify();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="设置兽人Grunt"><a href="#设置兽人Grunt" class="headerlink" title="设置兽人Grunt"></a>设置兽人Grunt</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.AI;</span><br><span class="line"></span><br><span class="line"><span class="comment">//继承于EnemyController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Grunt</span> : <span class="title">EnemyController</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;GRUNT推力&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> kickForce = <span class="number">15f</span>;</span><br><span class="line">    <span class="comment">//动画事件</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">KickOff</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (attackTarget != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            transform.LookAt(attackTarget.transform);</span><br><span class="line">            Vector3 direction = attackTarget.transform.position - transform.position;</span><br><span class="line">            direction.Normalize();</span><br><span class="line">            <span class="comment">//打断player行动，进行击退</span></span><br><span class="line">            attackTarget.GetComponent&lt;NavMeshAgent&gt;().isStopped = <span class="literal">true</span>;</span><br><span class="line">            attackTarget.GetComponent&lt;NavMeshAgent&gt;().velocity = direction * kickForce;</span><br><span class="line">            attackTarget.GetComponent&lt;Animator&gt;().SetTrigger(<span class="string">&quot;Dizzy&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="拓展方法Extension-Method"><a href="#拓展方法Extension-Method" class="headerlink" title="拓展方法Extension Method"></a>拓展方法Extension Method</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="comment">//拓展方法 </span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">ExtensionMethod</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">float</span> dotThreshold = <span class="number">0.5f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//拓展的是this后面的方法,后面的为方法所需要的函数</span></span><br><span class="line">    <span class="comment">//使用方法 :transform.IsFacingTarget(target)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">IsFacingTarget</span>(<span class="params"><span class="keyword">this</span> Transform transform,Transform target</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//向量OA-OB=BA;O为原点；</span></span><br><span class="line">        Vector3 vectorToTarget = target.position - transform.position;</span><br><span class="line">        vectorToTarget.Normalize();</span><br><span class="line">        <span class="comment">//vector3.dot 为看向的方向与vectortoTarget的方向的夹角，正对着为1，背对着为-1，左右为0；</span></span><br><span class="line">        <span class="built_in">float</span> dot = Vector3.Dot(transform.forward, vectorToTarget);</span><br><span class="line">        <span class="keyword">return</span> dot &gt;= dotThreshold;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="石头人Golem"><a href="#石头人Golem" class="headerlink" title="石头人Golem"></a>石头人Golem</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.AI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Golem</span> : <span class="title">EnemyController</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;GRUNT推力&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> kickForce = <span class="number">25f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> GameObject rockPerfab;</span><br><span class="line">    <span class="keyword">public</span> Transform handTransform;</span><br><span class="line">    <span class="comment">//animation event</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">KickOff</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (attackTarget != <span class="literal">null</span> &amp;&amp; transform.IsFacingTarget(attackTarget.transform))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> targetStats = attackTarget.GetComponent&lt;CharacterStats&gt;();</span><br><span class="line">            Vector3 direction = attackTarget.transform.position - transform.position;</span><br><span class="line">            direction.Normalize();</span><br><span class="line">            transform.LookAt(attackTarget.transform);</span><br><span class="line">            attackTarget.GetComponent&lt;NavMeshAgent&gt;().isStopped = <span class="literal">true</span>;</span><br><span class="line">            attackTarget.GetComponent&lt;NavMeshAgent&gt;().velocity = direction * kickForce;</span><br><span class="line">            attackTarget.GetComponent&lt;Animator&gt;().SetTrigger(<span class="string">&quot;Dizzy&quot;</span>);</span><br><span class="line">            characterStats.TakeDamage(characterStats, targetStats);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//animation event</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ThrowRock</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (attackTarget != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            GameObject rock = Instantiate(rockPerfab, handTransform.position, Quaternion.identity);</span><br><span class="line">            rock.GetComponent&lt;Rock&gt;().target = attackTarget;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="扔石头"><a href="#扔石头" class="headerlink" title="扔石头"></a>扔石头</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.AI;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.Animations;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Rock</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">enum</span> RockStates &#123; HitPlayer,HitEnemy,HitNothing&#125;</span><br><span class="line">    <span class="keyword">public</span> RockStates rockStates;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> GameObject target;</span><br><span class="line">    <span class="keyword">public</span> GameObject rockBreak;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> force;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> damage;</span><br><span class="line">    Vector3 direction;</span><br><span class="line">    Rigidbody rb;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        rb = GetComponent&lt;Rigidbody&gt;();</span><br><span class="line">        rb.velocity = Vector3.one;</span><br><span class="line">        rockStates = RockStates.HitPlayer;</span><br><span class="line">        FlyToTarget();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FixedUpdate</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (rb.velocity.sqrMagnitude &lt; <span class="number">0.5f</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            rockStates = RockStates.HitNothing;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">FlyToTarget</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (target == <span class="literal">null</span>)</span><br><span class="line">            target = FindObjectOfType&lt;PlayerController&gt;().gameObject;</span><br><span class="line">        direction = (target.transform.position - transform.position+Vector3.up ).normalized;</span><br><span class="line">        rb.AddForce(direction * force, ForceMode.Impulse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnCollisionEnter</span>(<span class="params">Collision collision</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span> (rockStates)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> RockStates.HitPlayer:</span><br><span class="line">                <span class="keyword">if</span> (collision.collider.CompareTag(<span class="string">&quot;Player&quot;</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    collision.gameObject.GetComponent&lt;NavMeshAgent&gt;().isStopped = <span class="literal">true</span>;</span><br><span class="line">                    collision.gameObject.GetComponent&lt;NavMeshAgent&gt;().velocity = direction * force;</span><br><span class="line">                    collision.gameObject.GetComponent&lt;Animator&gt;().SetTrigger(<span class="string">&quot;Dizzy&quot;</span>);</span><br><span class="line"></span><br><span class="line">                    rockStates = RockStates.HitNothing;</span><br><span class="line">                    collision.gameObject.GetComponent&lt;CharacterStats&gt;().TakeDamage(damage, collision.gameObject.GetComponent&lt;CharacterStats&gt;());</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> RockStates.HitEnemy:</span><br><span class="line">                <span class="comment">//如果有这个组件返回true；</span></span><br><span class="line">                <span class="keyword">if</span> (collision.gameObject.GetComponent&lt;Golem&gt;())</span><br><span class="line">                &#123;</span><br><span class="line">                    collision.gameObject.GetComponent&lt;CharacterStats&gt;().TakeDamage(damage, collision.gameObject.GetComponent&lt;CharacterStats&gt;());</span><br><span class="line">                    </span><br><span class="line">                    <span class="comment">//攻击石头人之后，石头碎裂生成粒子特效</span></span><br><span class="line">                    Instantiate(rockBreak, transform.position, Quaternion.identity);</span><br><span class="line">                    Destroy(gameObject);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> RockStates.HitNothing:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="literal">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>粒子特效</strong></p><p>Hierarchy &gt; Effects &gt; Particle System</p><h3 id="血条显示-HealthBar"><a href="#血条显示-HealthBar" class="headerlink" title="血条显示 HealthBar"></a>血条显示 HealthBar</h3><p><strong>挂载在enemy身上</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">HealthBar</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> GameObject healthBarUiPerfab;</span><br><span class="line"><span class="comment">//血条的位置，enemy设置一个空对象，调整位置为头部上方</span></span><br><span class="line">    <span class="keyword">public</span> Transform barPoint;</span><br><span class="line">    <span class="comment">//是否一直显示 显示的时长</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> alwaysVisible;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> visibleTime;</span><br><span class="line">    <span class="built_in">float</span> timeLeft;</span><br><span class="line"></span><br><span class="line">    Image healthSlider;</span><br><span class="line">    Transform UIBar;</span><br><span class="line">    Transform cam;</span><br><span class="line">    CharacterStats currentStats;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//获取组件</span></span><br><span class="line">        currentStats = GetComponent&lt;CharacterStats&gt;();</span><br><span class="line">        <span class="comment">//添加事务</span></span><br><span class="line">        currentStats.UpdateHealthBarOnAttack += UpdateHealthBar;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnEnable</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        cam = Camera.main.transform;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="function">Canvas canvas <span class="keyword">in</span> <span class="title">FindObjectsOfType</span>&lt;<span class="title">Canvas</span>&gt;())</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (canvas.renderMode == RenderMode.WorldSpace)</span><br><span class="line">            &#123;</span><br><span class="line">                UIBar = Instantiate(healthBarUiPerfab, canvas.transform).transform;</span><br><span class="line">                healthSlider = UIBar.GetChild(<span class="number">0</span>).GetComponent&lt;Image&gt;();</span><br><span class="line">                UIBar.gameObject.SetActive(alwaysVisible);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">UpdateHealthBar</span>(<span class="params"><span class="built_in">int</span> currentHealth, <span class="built_in">int</span> Maxhealth</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (currentHealth &lt;= <span class="number">0</span>)</span><br><span class="line">            Destroy(UIBar.gameObject);</span><br><span class="line"></span><br><span class="line">        UIBar.gameObject.SetActive(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//攻击时重置显示剩余时间</span></span><br><span class="line">        timeLeft = visibleTime;</span><br><span class="line">        <span class="built_in">float</span> sliderPercent = (<span class="built_in">float</span>)currentHealth / Maxhealth;</span><br><span class="line">        <span class="comment">//image Type设置为Filled，fillmethod设置为Horizontal</span></span><br><span class="line">        healthSlider.fillAmount = sliderPercent;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">LateUpdate</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (UIBar != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//位置</span></span><br><span class="line">            UIBar.position = barPoint.position;</span><br><span class="line">            <span class="comment">//ui的方向与摄像机的方向相反</span></span><br><span class="line">            UIBar.forward = -cam.forward;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (timeLeft &lt;= <span class="number">0f</span>&amp;&amp;!alwaysVisible)</span><br><span class="line">            &#123;</span><br><span class="line">                UIBar.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                timeLeft -= Time.deltaTime;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="PlayerUI"><a href="#PlayerUI" class="headerlink" title="PlayerUI"></a>PlayerUI</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayHealthBar</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    Text level;</span><br><span class="line">    Image healthSlider;</span><br><span class="line">    Image expSlider;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        level = transform.GetChild(<span class="number">2</span>).GetComponent&lt;Text&gt;();</span><br><span class="line">        healthSlider = transform.GetChild(<span class="number">0</span>).GetChild(<span class="number">0</span>).GetComponent&lt;Image&gt;();</span><br><span class="line">        expSlider = transform.GetChild(<span class="number">1</span>).GetChild(<span class="number">0</span>).GetComponent&lt;Image&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">LateUpdate</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        level.text = <span class="string">&quot;Level  &quot;</span> + GameManager.Instance.playerStats.character.currentLevel.ToString(<span class="string">&quot;00&quot;</span>);</span><br><span class="line"></span><br><span class="line">        UpdateHealth();</span><br><span class="line"></span><br><span class="line">        UpdateExp();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">UpdateHealth</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">float</span> sliderPercent = (<span class="built_in">float</span>)GameManager.Instance.playerStats.CurrentHealth / GameManager.Instance.playerStats.MaxHealth;</span><br><span class="line">        healthSlider.fillAmount = sliderPercent;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">UpdateExp</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">float</span> sliderPercent = (<span class="built_in">float</span>)GameManager.Instance.playerStats.character.currentExp / GameManager.Instance.playerStats.character.baseExp;</span><br><span class="line">        expSlider.fillAmount = sliderPercent;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>设置ui时，首先需要调整Canvas的Scaler</p><p>UI Scale Mode设置为Scale With Screen Size,Match设置为0.5，同时兼顾高度和宽度</p></blockquote><blockquote><p>Canvas有个Canvas Group组件，可以设置取消阻挡射线</p><p>也可以通过调整Alpha的值去做转场</p></blockquote><h3 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h3><p>使用lit shader</p><p>shader制作成材质，创建一个3D &gt; plane，拖拽赋予这个材质，并生成一个传送点位置</p><p>枚举类</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TransitionDestination</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">enum</span> DestinationTag &#123; Enter,A,B,C&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> DestinationTag destinationTag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TransiationPoint</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">enum</span> TransitionType &#123; SameScence,DifferentScence&#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;Transition Info&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> scenceName;</span><br><span class="line">    <span class="keyword">public</span> TransitionType transitionType;</span><br><span class="line">    <span class="comment">//枚举终点编号</span></span><br><span class="line">    <span class="keyword">public</span> TransitionDestination.DestinationTag destinationTag;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">bool</span> canTrans;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.E) &amp;&amp; canTrans)</span><br><span class="line">        &#123;</span><br><span class="line">            ScenceController.Instance.TransitionToDestination(<span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerStay</span>(<span class="params">Collider other</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (other.CompareTag(<span class="string">&quot;Player&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            canTrans = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerExit</span>(<span class="params">Collider other</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (other.CompareTag(<span class="string">&quot;Player&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            canTrans = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>实现场景转换</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.SceneManagement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> UnityEngine.AI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ScenceController</span> : <span class="title">SingleTon</span>&lt;<span class="title">ScenceController</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line">    GameObject player;</span><br><span class="line">    NavMeshAgent playerAgent;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">TransitionToDestination</span>(<span class="params">TransiationPoint transiationPoint</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span> (transiationPoint.transitionType)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> TransiationPoint.TransitionType.SameScence:</span><br><span class="line">                StartCoroutine(Transition(SceneManager.GetActiveScene().name, transiationPoint.destinationTag));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> TransiationPoint.TransitionType.DifferentScence:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="literal">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">IEnumerator <span class="title">Transition</span>(<span class="params"><span class="built_in">string</span> scenceName,TransitionDestination.DestinationTag destinationTag</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        player = GameManager.Instance.playerStats.gameObject;</span><br><span class="line"></span><br><span class="line">        playerAgent = player.GetComponent&lt;NavMeshAgent&gt;();</span><br><span class="line">        playerAgent.isStopped = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">       <span class="comment">//设置位置与方向transform.SetPositionAndRotation（）</span></span><br><span class="line">        player.transform.SetPositionAndRotation(GetDestination(destinationTag).transform.position, GetDestination(destinationTag).transform.rotation);</span><br><span class="line">        <span class="keyword">yield</span> <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//遍历获取终点的信息</span></span><br><span class="line">    <span class="function">TransitionDestination <span class="title">GetDestination</span>(<span class="params">TransitionDestination.DestinationTag destinationTag</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> entrances = FindObjectsOfType&lt;TransitionDestination&gt;();</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> entrances)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (item.destinationTag == destinationTag)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> item;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="保存数据"><a href="#保存数据" class="headerlink" title="保存数据"></a>保存数据</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SaveManager</span> : <span class="title">SingleTon</span>&lt;<span class="title">SaveManager</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.K))</span><br><span class="line">        &#123;</span><br><span class="line">            Save(GameManager.Instance.playerStats.character, GameManager.Instance.playerStats.name);</span><br><span class="line">            Debug.Log(GameManager.Instance.playerStats.name);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.L))</span><br><span class="line">        &#123;</span><br><span class="line">            Load(GameManager.Instance.playerStats.character, GameManager.Instance.playerStats.name);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Save</span>(<span class="params"><span class="built_in">object</span> data,<span class="built_in">string</span> key</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//数据转成json</span></span><br><span class="line">        <span class="keyword">var</span> jsonData = JsonUtility.ToJson(data, <span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//json转成二进制</span></span><br><span class="line">        PlayerPrefs.SetString(key, jsonData);</span><br><span class="line">        PlayerPrefs.Save();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Load</span>(<span class="params"><span class="built_in">object</span> data, <span class="built_in">string</span> key</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (PlayerPrefs.HasKey(key))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//PlayerPrefs.GetString(key)将二进制转为json，覆盖到data上</span></span><br><span class="line">            JsonUtility.FromJsonOverwrite(PlayerPrefs.GetString(key), data);</span><br><span class="line">            Debug.Log(<span class="string">&quot;111&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Games </tag>
            
            <tag> 游戏制作 </tag>
            
            <tag> M_studio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录一下安装hexo的过程</title>
      <link href="/2022/01/10/001_hexo/"/>
      <url>/2022/01/10/001_hexo/</url>
      
        <content type="html"><![CDATA[<h3 id="记录一下安装hexo的过程"><a href="#记录一下安装hexo的过程" class="headerlink" title="记录一下安装hexo的过程"></a>记录一下安装hexo的过程</h3><p>（防止以后遗忘 不知道咋弄）</p><h4 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h4><p>首先安装好git 和 node js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br><span class="line">or</span><br><span class="line">$ npm install hexo</span><br></pre></td></tr></table></figure><p>完成之后用 <strong><code>hexo -v</code></strong> 查看版本</p><p>接下来初始化 <code>hexo</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init 文件名</span><br><span class="line">$ cd 文件名</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>新建完成之后会有如下文件夹</p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/image-20220110162452660.png" alt="image-20220110162452660"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>之后便可以进入到初始博客</p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/image-20220110162645465.png" alt="image-20220110162645465"></p><h4 id="GitHub或Gitee-创建新库"><a href="#GitHub或Gitee-创建新库" class="headerlink" title="GitHub或Gitee 创建新库"></a>GitHub或Gitee 创建新库</h4><p>TIP: 在GitHub上注册的仓库名为  <code>相同的用户名.github.io</code></p><p>​        Gitee上为<code>相同的用户名</code></p><h4 id="将hexo部署到GitHub或Gitee上"><a href="#将hexo部署到GitHub或Gitee上" class="headerlink" title="将hexo部署到GitHub或Gitee上"></a>将hexo部署到GitHub或Gitee上</h4><p>先安装deploy-git</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>在**<code>_config.yml</code>**文件中最后修改</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">&#x27;git&#x27;</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/username/username.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">blog</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">&#x27;git&#x27;</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://gitee.com/username/username.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">blog</span></span><br></pre></td></tr></table></figure><p>然后执行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>其中 <code>hexo clean</code>清除了你之前生成的东西，也可以不加。<br><code>hexo generate</code> 顾名思义，生成静态文章，可以用 <code>hexo g</code>缩写<br><code>hexo deploy</code> 部署文章，可以用<code>hexo d</code>缩写</p><p>部署结束</p><h4 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h4><p>我选择的是 <a href="https://gitlab.com/XLJZT/img/-/raw/main/blog/https://github.com/MrWillCom/hexo-theme-cupertino">Hexo Theme Cupertino</a></p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/image-20220110164357577.png" alt="image-20220110164357577"></p><p>完全符合我的审美</p><p>进入主题文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd themes</span><br><span class="line">$ git clone https://github.com/MrWillCom/hexo-theme-cupertino.git</span><br></pre></td></tr></table></figure><p>修改全局配置文件 <code>_config.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">hexo-theme-cupertino</span></span><br></pre></td></tr></table></figure><p>修改原作者的链接</p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/pictures/2022/10/23_20_43_38_image-20220110165134907.png" alt="image-20220110165134907"></p><p><code>添加浏览器图标png放到 文件名/source 下</code></p><p>修改全局配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">subtitle:&#x27;&#x27;</span></span><br><span class="line"><span class="string">description:&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>这是现实在主页的两行字体 作者源码解释在此</p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/pictures/2022/10/23_20_43_53_image-20220110165549516.png" alt="image-20220110165549516"></p><p>至此主题部分配置已结束</p><h4 id="关于图片插入的问题"><a href="#关于图片插入的问题" class="headerlink" title="关于图片插入的问题"></a>关于图片插入的问题</h4><p>我看到一个插件非常中意 但是安装的时候出现问题就一直没能装上</p><p><strong><a href="https://github.com/boboidream/hexo-easy-images#hexo-easy-images">hexo-easy-images</a></strong></p><p>然后对比使用了**<a href="https://github.com/JoeyBling/hexo-filter-image">hexo-filter-image</a>** 和 <strong><a href="https://github.com/xcodebuild/hexo-asset-image">hexo-asset-image</a></strong> 之后我选择了使用后者</p><p>接下来是我的使用方案</p><h4 id="安装-hexo-asset-image"><a href="#安装-hexo-asset-image" class="headerlink" title="安装  hexo-asset-image"></a>安装  <strong><a href="https://github.com/xcodebuild/hexo-asset-image">hexo-asset-image</a></strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>源文件<code>/node_modules/hexo-asset-image/index.js</code>里的代码有错误 需要进行修改为以下代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> cheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getPosition</span>(<span class="params">str, m, i</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> str.<span class="title function_">split</span>(m, i).<span class="title function_">join</span>(m).<span class="property">length</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> version = <span class="title class_">String</span>(hexo.<span class="property">version</span>).<span class="title function_">split</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">&#x27;after_post_render&#x27;</span>, <span class="keyword">function</span>(<span class="params">data</span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> config = hexo.<span class="property">config</span>;</span><br><span class="line">  <span class="keyword">if</span>(config.<span class="property">post_asset_folder</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> link = data.<span class="property">permalink</span>;</span><br><span class="line">    <span class="keyword">if</span>(version.<span class="property">length</span> &gt; <span class="number">0</span> &amp;&amp; <span class="title class_">Number</span>(version[<span class="number">0</span>]) == <span class="number">3</span>)</span><br><span class="line">       <span class="keyword">var</span> beginPos = <span class="title function_">getPosition</span>(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">       <span class="keyword">var</span> beginPos = <span class="title function_">getPosition</span>(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">3</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span></span><br><span class="line">    <span class="keyword">var</span> endPos = link.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;/&#x27;</span>) + <span class="number">1</span>;</span><br><span class="line">    link = link.<span class="title function_">substring</span>(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> toprocess = [<span class="string">&#x27;excerpt&#x27;</span>, <span class="string">&#x27;more&#x27;</span>, <span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; toprocess.<span class="property">length</span>; i++)&#123;</span><br><span class="line">      <span class="keyword">var</span> key = toprocess[i];</span><br><span class="line"> </span><br><span class="line">      <span class="keyword">var</span> $ = cheerio.<span class="title function_">load</span>(data[key], &#123;</span><br><span class="line">        <span class="attr">ignoreWhitespace</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">xmlMode</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">lowerCaseTags</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">decodeEntities</span>: <span class="literal">false</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&#x27;img&#x27;</span>).<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> ($(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>))&#123;</span><br><span class="line">            <span class="comment">// For windows style path, we replace &#x27;\&#x27; to &#x27;/&#x27;.</span></span><br><span class="line">            <span class="keyword">var</span> src = $(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>).<span class="title function_">replace</span>(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span>(!<span class="regexp">/http[s]*.*|\/\/.*/</span>.<span class="title function_">test</span>(src) &amp;&amp;</span><br><span class="line">               !<span class="regexp">/^\s*\//</span>.<span class="title function_">test</span>(src)) &#123;</span><br><span class="line">              <span class="comment">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span></span><br><span class="line">              <span class="comment">// In addition, to support multi-level local directory.</span></span><br><span class="line">              <span class="keyword">var</span> linkArray = link.<span class="title function_">split</span>(<span class="string">&#x27;/&#x27;</span>).<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">elem</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">              &#125;);</span><br><span class="line">              <span class="keyword">var</span> srcArray = src.<span class="title function_">split</span>(<span class="string">&#x27;/&#x27;</span>).<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">elem</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span> &amp;&amp; elem != <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">              &#125;);</span><br><span class="line">              <span class="keyword">if</span>(srcArray.<span class="property">length</span> &gt; <span class="number">1</span>)</span><br><span class="line">                srcArray.<span class="title function_">shift</span>();</span><br><span class="line">              src = srcArray.<span class="title function_">join</span>(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">              $(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>, config.<span class="property">root</span> + link + src);</span><br><span class="line">              <span class="variable language_">console</span>.<span class="property">info</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;update link as:--&gt;&quot;</span>+config.<span class="property">root</span> + link + src);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="property">info</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;no src attr, skipped...&quot;</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="property">info</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>($(<span class="variable language_">this</span>));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      data[key] = $.<span class="title function_">html</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="食用方法"><a href="#食用方法" class="headerlink" title="食用方法"></a>食用方法</h4><p>在写markdown文件时设置好图像的问题，我用的是typora更改图片设置如下图</p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/image-20220111114426389.png" alt="image-20220111114426389"></p><p>这样就会将图片和文件放到一个文件夹下</p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/image-20220111114517951.png" alt="image-20220111114517951"></p><p>然后使用命令</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">new</span> <span class="string">记录一下安装hexo的过程</span></span><br></pre></td></tr></table></figure><p>或者手动在  <code>文件/source/_post/ </code>下创建相同名字的文件</p><p>然后将写好的markdown文件的图片放入文件夹里 将md文件放到外面</p><p><img src="https://gitlab.com/XLJZT/img/-/raw/main/blog/image-20220111115043380.png" alt="image-20220111115043380"></p><p>本人建议直接将编辑好的markdown文件夹复制到 <code>文件/source/_post/ </code> 然后将<code>.md</code>文件给拉到和文件夹同一层级，形成上图的层级格式 </p><h4 id="TIP"><a href="#TIP" class="headerlink" title="TIP"></a>TIP</h4><blockquote><p>文件夹里只有图片</p></blockquote><h4 id="修改url"><a href="#修改url" class="headerlink" title="修改url"></a>修改url</h4><p><code>_Config.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#修改url是因为github不加载css和js</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://username.github.io</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>记得上传源文件到GitHub或Gitee上</p><p>将themes的主题里的<code>.git</code>删掉 因为github不能嵌套上传</p><p>建议将page放入一个分支 源码放入一个分支</p></blockquote><p><strong>如果我的看不懂可以建议看一下<a href="https://blog.csdn.net/sinat_37781304/article/details/82729029">这个链接</a> 我做的时候学习的这个作者才做出来的给了我不少启发</strong></p><p>第一篇文章到此结束！！！🥳🥳🥳</p><h1 id="2022-5-13-Update"><a href="#2022-5-13-Update" class="headerlink" title="2022.5.13 Update"></a>2022.5.13 Update</h1><p>选择了新的主题，主题相较于之前的更加丰富，并且从github page迁移到了vercel</p><h1 id="2022-10-23-图床更新"><a href="#2022-10-23-图床更新" class="headerlink" title="2022.10.23 图床更新"></a>2022.10.23 图床更新</h1><p>更新了图床到gitlab，使用gitlab的镜像仓库同步到github的仓库里，<a href="https://www.jianshu.com/p/cf61a7408175">教程</a></p><p>picgo使用<a href="https://www.npmjs.com/package/picgo-plugin-gitlab-files">gitlab</a>的插件进行上传图片,这两个链接我放在这里了</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
